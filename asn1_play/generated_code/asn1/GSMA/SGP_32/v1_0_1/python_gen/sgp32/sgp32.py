# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class PKIX1Explicit88:

    _name_  = 'PKIX1Explicit88'
    _oid_   = [1, 3, 6, 1, 5, 5, 7, 0, 18]
    
    _obj_ = [
        'id-pkix',
        'id-pe',
        'id-qt',
        'id-kp',
        'id-ad',
        'id-qt-cps',
        'id-qt-unotice',
        'id-ad-ocsp',
        'id-ad-caIssuers',
        'id-ad-timeStamping',
        'id-ad-caRepository',
        'Attribute',
        'AttributeType',
        'AttributeValue',
        'AttributeTypeAndValue',
        'id-at',
        'id-at-name',
        'id-at-surname',
        'id-at-givenName',
        'id-at-initials',
        'id-at-generationQualifier',
        'X520name',
        'id-at-commonName',
        'X520CommonName',
        'id-at-localityName',
        'X520LocalityName',
        'id-at-stateOrProvinceName',
        'X520StateOrProvinceName',
        'id-at-organizationName',
        'X520OrganizationName',
        'id-at-organizationalUnitName',
        'X520OrganizationalUnitName',
        'id-at-title',
        'X520Title',
        'id-at-dnQualifier',
        'X520dnQualifier',
        'id-at-countryName',
        'X520countryName',
        'id-at-serialNumber',
        'X520SerialNumber',
        'id-at-pseudonym',
        'X520Pseudonym',
        'id-domainComponent',
        'DomainComponent',
        'pkcs-9',
        'id-emailAddress',
        'EmailAddress',
        'Name',
        'RDNSequence',
        'DistinguishedName',
        'RelativeDistinguishedName',
        'DirectoryString',
        'Certificate',
        'TBSCertificate',
        'Version',
        'CertificateSerialNumber',
        'Validity',
        'Time',
        'UniqueIdentifier',
        'SubjectPublicKeyInfo',
        'Extensions',
        'Extension',
        'CertificateList',
        'TBSCertList',
        'AlgorithmIdentifier',
        'ORAddress',
        'BuiltInStandardAttributes',
        'CountryName',
        'AdministrationDomainName',
        'NetworkAddress',
        'X121Address',
        'TerminalIdentifier',
        'PrivateDomainName',
        'OrganizationName',
        'NumericUserIdentifier',
        'PersonalName',
        'OrganizationalUnitNames',
        'OrganizationalUnitName',
        'BuiltInDomainDefinedAttributes',
        'BuiltInDomainDefinedAttribute',
        'ExtensionAttributes',
        'ExtensionAttribute',
        'common-name',
        'CommonName',
        'teletex-common-name',
        'TeletexCommonName',
        'teletex-organization-name',
        'TeletexOrganizationName',
        'teletex-personal-name',
        'TeletexPersonalName',
        'teletex-organizational-unit-names',
        'TeletexOrganizationalUnitNames',
        'TeletexOrganizationalUnitName',
        'pds-name',
        'PDSName',
        'physical-delivery-country-name',
        'PhysicalDeliveryCountryName',
        'postal-code',
        'PostalCode',
        'physical-delivery-office-name',
        'PhysicalDeliveryOfficeName',
        'physical-delivery-office-number',
        'PhysicalDeliveryOfficeNumber',
        'extension-OR-address-components',
        'ExtensionORAddressComponents',
        'physical-delivery-personal-name',
        'PhysicalDeliveryPersonalName',
        'physical-delivery-organization-name',
        'PhysicalDeliveryOrganizationName',
        'extension-physical-delivery-address-components',
        'ExtensionPhysicalDeliveryAddressComponents',
        'unformatted-postal-address',
        'UnformattedPostalAddress',
        'street-address',
        'StreetAddress',
        'post-office-box-address',
        'PostOfficeBoxAddress',
        'poste-restante-address',
        'PosteRestanteAddress',
        'unique-postal-name',
        'UniquePostalName',
        'local-postal-attributes',
        'LocalPostalAttributes',
        'PDSParameter',
        'extended-network-address',
        'ExtendedNetworkAddress',
        'PresentationAddress',
        'terminal-type',
        'TerminalType',
        'teletex-domain-defined-attributes',
        'TeletexDomainDefinedAttributes',
        'TeletexDomainDefinedAttribute',
        'ub-name',
        'ub-common-name',
        'ub-locality-name',
        'ub-state-name',
        'ub-organization-name',
        'ub-organizational-unit-name',
        'ub-title',
        'ub-serial-number',
        'ub-match',
        'ub-emailaddress-length',
        'ub-common-name-length',
        'ub-country-name-alpha-length',
        'ub-country-name-numeric-length',
        'ub-domain-defined-attributes',
        'ub-domain-defined-attribute-type-length',
        'ub-domain-defined-attribute-value-length',
        'ub-domain-name-length',
        'ub-extension-attributes',
        'ub-e163-4-number-length',
        'ub-e163-4-sub-address-length',
        'ub-generation-qualifier-length',
        'ub-given-name-length',
        'ub-initials-length',
        'ub-integer-options',
        'ub-numeric-user-id-length',
        'ub-organization-name-length',
        'ub-organizational-unit-name-length',
        'ub-organizational-units',
        'ub-pds-name-length',
        'ub-pds-parameter-length',
        'ub-pds-physical-address-lines',
        'ub-postal-code-length',
        'ub-pseudonym',
        'ub-surname-length',
        'ub-terminal-id-length',
        'ub-unformatted-address-length',
        'ub-x121-address-length',
        ]
    _type_ = [
        'Attribute',
        'AttributeType',
        'AttributeValue',
        'AttributeTypeAndValue',
        'X520name',
        'X520CommonName',
        'X520LocalityName',
        'X520StateOrProvinceName',
        'X520OrganizationName',
        'X520OrganizationalUnitName',
        'X520Title',
        'X520dnQualifier',
        'X520countryName',
        'X520SerialNumber',
        'X520Pseudonym',
        'DomainComponent',
        'EmailAddress',
        'Name',
        'RDNSequence',
        'DistinguishedName',
        'RelativeDistinguishedName',
        'DirectoryString',
        'Certificate',
        'TBSCertificate',
        'Version',
        'CertificateSerialNumber',
        'Validity',
        'Time',
        'UniqueIdentifier',
        'SubjectPublicKeyInfo',
        'Extensions',
        'Extension',
        'CertificateList',
        'TBSCertList',
        'AlgorithmIdentifier',
        'ORAddress',
        'BuiltInStandardAttributes',
        'CountryName',
        'AdministrationDomainName',
        'NetworkAddress',
        'X121Address',
        'TerminalIdentifier',
        'PrivateDomainName',
        'OrganizationName',
        'NumericUserIdentifier',
        'PersonalName',
        'OrganizationalUnitNames',
        'OrganizationalUnitName',
        'BuiltInDomainDefinedAttributes',
        'BuiltInDomainDefinedAttribute',
        'ExtensionAttributes',
        'ExtensionAttribute',
        'CommonName',
        'TeletexCommonName',
        'TeletexOrganizationName',
        'TeletexPersonalName',
        'TeletexOrganizationalUnitNames',
        'TeletexOrganizationalUnitName',
        'PDSName',
        'PhysicalDeliveryCountryName',
        'PostalCode',
        'PhysicalDeliveryOfficeName',
        'PhysicalDeliveryOfficeNumber',
        'ExtensionORAddressComponents',
        'PhysicalDeliveryPersonalName',
        'PhysicalDeliveryOrganizationName',
        'ExtensionPhysicalDeliveryAddressComponents',
        'UnformattedPostalAddress',
        'StreetAddress',
        'PostOfficeBoxAddress',
        'PosteRestanteAddress',
        'UniquePostalName',
        'LocalPostalAttributes',
        'PDSParameter',
        'ExtendedNetworkAddress',
        'PresentationAddress',
        'TerminalType',
        'TeletexDomainDefinedAttributes',
        'TeletexDomainDefinedAttribute',
        ]
    _set_ = [
        ]
    _val_ = [
        'id-pkix',
        'id-pe',
        'id-qt',
        'id-kp',
        'id-ad',
        'id-qt-cps',
        'id-qt-unotice',
        'id-ad-ocsp',
        'id-ad-caIssuers',
        'id-ad-timeStamping',
        'id-ad-caRepository',
        'id-at',
        'id-at-name',
        'id-at-surname',
        'id-at-givenName',
        'id-at-initials',
        'id-at-generationQualifier',
        'id-at-commonName',
        'id-at-localityName',
        'id-at-stateOrProvinceName',
        'id-at-organizationName',
        'id-at-organizationalUnitName',
        'id-at-title',
        'id-at-dnQualifier',
        'id-at-countryName',
        'id-at-serialNumber',
        'id-at-pseudonym',
        'id-domainComponent',
        'pkcs-9',
        'id-emailAddress',
        'common-name',
        'teletex-common-name',
        'teletex-organization-name',
        'teletex-personal-name',
        'teletex-organizational-unit-names',
        'pds-name',
        'physical-delivery-country-name',
        'postal-code',
        'physical-delivery-office-name',
        'physical-delivery-office-number',
        'extension-OR-address-components',
        'physical-delivery-personal-name',
        'physical-delivery-organization-name',
        'extension-physical-delivery-address-components',
        'unformatted-postal-address',
        'street-address',
        'post-office-box-address',
        'poste-restante-address',
        'unique-postal-name',
        'local-postal-attributes',
        'extended-network-address',
        'terminal-type',
        'teletex-domain-defined-attributes',
        'ub-name',
        'ub-common-name',
        'ub-locality-name',
        'ub-state-name',
        'ub-organization-name',
        'ub-organizational-unit-name',
        'ub-title',
        'ub-serial-number',
        'ub-match',
        'ub-emailaddress-length',
        'ub-common-name-length',
        'ub-country-name-alpha-length',
        'ub-country-name-numeric-length',
        'ub-domain-defined-attributes',
        'ub-domain-defined-attribute-type-length',
        'ub-domain-defined-attribute-value-length',
        'ub-domain-name-length',
        'ub-extension-attributes',
        'ub-e163-4-number-length',
        'ub-e163-4-sub-address-length',
        'ub-generation-qualifier-length',
        'ub-given-name-length',
        'ub-initials-length',
        'ub-integer-options',
        'ub-numeric-user-id-length',
        'ub-organization-name-length',
        'ub-organizational-unit-name-length',
        'ub-organizational-units',
        'ub-pds-name-length',
        'ub-pds-parameter-length',
        'ub-pds-physical-address-lines',
        'ub-postal-code-length',
        'ub-pseudonym',
        'ub-surname-length',
        'ub-terminal-id-length',
        'ub-unformatted-address-length',
        'ub-x121-address-length',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< id-pkix >-----#
    id_pkix = OID(name='id-pkix', mode=MODE_VALUE)
    id_pkix._val = (1, 3, 6, 1, 5, 5, 7)
    
    #-----< id-pe >-----#
    id_pe = OID(name='id-pe', mode=MODE_VALUE)
    id_pe._val = (1, 3, 6, 1, 5, 5, 7, 1)
    
    #-----< id-qt >-----#
    id_qt = OID(name='id-qt', mode=MODE_VALUE)
    id_qt._val = (1, 3, 6, 1, 5, 5, 7, 2)
    
    #-----< id-kp >-----#
    id_kp = OID(name='id-kp', mode=MODE_VALUE)
    id_kp._val = (1, 3, 6, 1, 5, 5, 7, 3)
    
    #-----< id-ad >-----#
    id_ad = OID(name='id-ad', mode=MODE_VALUE)
    id_ad._val = (1, 3, 6, 1, 5, 5, 7, 48)
    
    #-----< id-qt-cps >-----#
    id_qt_cps = OID(name='id-qt-cps', mode=MODE_VALUE)
    id_qt_cps._val = (1, 3, 6, 1, 5, 5, 7, 2, 1)
    
    #-----< id-qt-unotice >-----#
    id_qt_unotice = OID(name='id-qt-unotice', mode=MODE_VALUE)
    id_qt_unotice._val = (1, 3, 6, 1, 5, 5, 7, 2, 2)
    
    #-----< id-ad-ocsp >-----#
    id_ad_ocsp = OID(name='id-ad-ocsp', mode=MODE_VALUE)
    id_ad_ocsp._val = (1, 3, 6, 1, 5, 5, 7, 48, 1)
    
    #-----< id-ad-caIssuers >-----#
    id_ad_caIssuers = OID(name='id-ad-caIssuers', mode=MODE_VALUE)
    id_ad_caIssuers._val = (1, 3, 6, 1, 5, 5, 7, 48, 2)
    
    #-----< id-ad-timeStamping >-----#
    id_ad_timeStamping = OID(name='id-ad-timeStamping', mode=MODE_VALUE)
    id_ad_timeStamping._val = (1, 3, 6, 1, 5, 5, 7, 48, 3)
    
    #-----< id-ad-caRepository >-----#
    id_ad_caRepository = OID(name='id-ad-caRepository', mode=MODE_VALUE)
    id_ad_caRepository._val = (1, 3, 6, 1, 5, 5, 7, 48, 5)
    
    #-----< Attribute >-----#
    Attribute = SEQ(name='Attribute', mode=MODE_TYPE)
    _Attribute_type = OID(name='type', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    _Attribute_values = SET_OF(name='values', mode=MODE_TYPE)
    __Attribute_values__item_ = ANY(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeValue')))
    _Attribute_values._cont = __Attribute_values__item_
    Attribute._cont = ASN1Dict([
        ('type', _Attribute_type),
        ('values', _Attribute_values),
        ])
    Attribute._ext = None
    
    #-----< AttributeType >-----#
    AttributeType = OID(name='AttributeType', mode=MODE_TYPE)
    
    #-----< AttributeValue >-----#
    AttributeValue = ANY(name='AttributeValue', mode=MODE_TYPE)
    
    #-----< AttributeTypeAndValue >-----#
    AttributeTypeAndValue = SEQ(name='AttributeTypeAndValue', mode=MODE_TYPE)
    _AttributeTypeAndValue_type = OID(name='type', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    _AttributeTypeAndValue_value = ANY(name='value', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeValue')))
    AttributeTypeAndValue._cont = ASN1Dict([
        ('type', _AttributeTypeAndValue_type),
        ('value', _AttributeTypeAndValue_value),
        ])
    AttributeTypeAndValue._ext = None
    
    #-----< id-at >-----#
    id_at = OID(name='id-at', mode=MODE_VALUE)
    id_at._val = (2, 5, 4)
    
    #-----< id-at-name >-----#
    id_at_name = OID(name='id-at-name', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_name._val = (2, 5, 4, 41)
    
    #-----< id-at-surname >-----#
    id_at_surname = OID(name='id-at-surname', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_surname._val = (2, 5, 4, 4)
    
    #-----< id-at-givenName >-----#
    id_at_givenName = OID(name='id-at-givenName', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_givenName._val = (2, 5, 4, 42)
    
    #-----< id-at-initials >-----#
    id_at_initials = OID(name='id-at-initials', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_initials._val = (2, 5, 4, 43)
    
    #-----< id-at-generationQualifier >-----#
    id_at_generationQualifier = OID(name='id-at-generationQualifier', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_generationQualifier._val = (2, 5, 4, 44)
    
    #-----< X520name >-----#
    X520name = CHOICE(name='X520name', mode=MODE_TYPE)
    _X520name_teletexString = STR_TELE(name='teletexString', mode=MODE_TYPE)
    _X520name_teletexString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32768)], ev=None, er=[])
    _X520name_printableString = STR_PRINT(name='printableString', mode=MODE_TYPE)
    _X520name_printableString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32768)], ev=None, er=[])
    _X520name_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE)
    _X520name_universalString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32768)], ev=None, er=[])
    _X520name_utf8String = STR_UTF8(name='utf8String', mode=MODE_TYPE)
    _X520name_utf8String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32768)], ev=None, er=[])
    _X520name_bmpString = STR_BMP(name='bmpString', mode=MODE_TYPE)
    _X520name_bmpString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32768)], ev=None, er=[])
    X520name._cont = ASN1Dict([
        ('teletexString', _X520name_teletexString),
        ('printableString', _X520name_printableString),
        ('universalString', _X520name_universalString),
        ('utf8String', _X520name_utf8String),
        ('bmpString', _X520name_bmpString),
        ])
    X520name._ext = None
    
    #-----< id-at-commonName >-----#
    id_at_commonName = OID(name='id-at-commonName', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_commonName._val = (2, 5, 4, 3)
    
    #-----< X520CommonName >-----#
    X520CommonName = CHOICE(name='X520CommonName', mode=MODE_TYPE)
    _X520CommonName_teletexString = STR_TELE(name='teletexString', mode=MODE_TYPE)
    _X520CommonName_teletexString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520CommonName_printableString = STR_PRINT(name='printableString', mode=MODE_TYPE)
    _X520CommonName_printableString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520CommonName_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE)
    _X520CommonName_universalString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520CommonName_utf8String = STR_UTF8(name='utf8String', mode=MODE_TYPE)
    _X520CommonName_utf8String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520CommonName_bmpString = STR_BMP(name='bmpString', mode=MODE_TYPE)
    _X520CommonName_bmpString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    X520CommonName._cont = ASN1Dict([
        ('teletexString', _X520CommonName_teletexString),
        ('printableString', _X520CommonName_printableString),
        ('universalString', _X520CommonName_universalString),
        ('utf8String', _X520CommonName_utf8String),
        ('bmpString', _X520CommonName_bmpString),
        ])
    X520CommonName._ext = None
    
    #-----< id-at-localityName >-----#
    id_at_localityName = OID(name='id-at-localityName', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_localityName._val = (2, 5, 4, 7)
    
    #-----< X520LocalityName >-----#
    X520LocalityName = CHOICE(name='X520LocalityName', mode=MODE_TYPE)
    _X520LocalityName_teletexString = STR_TELE(name='teletexString', mode=MODE_TYPE)
    _X520LocalityName_teletexString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520LocalityName_printableString = STR_PRINT(name='printableString', mode=MODE_TYPE)
    _X520LocalityName_printableString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520LocalityName_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE)
    _X520LocalityName_universalString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520LocalityName_utf8String = STR_UTF8(name='utf8String', mode=MODE_TYPE)
    _X520LocalityName_utf8String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520LocalityName_bmpString = STR_BMP(name='bmpString', mode=MODE_TYPE)
    _X520LocalityName_bmpString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    X520LocalityName._cont = ASN1Dict([
        ('teletexString', _X520LocalityName_teletexString),
        ('printableString', _X520LocalityName_printableString),
        ('universalString', _X520LocalityName_universalString),
        ('utf8String', _X520LocalityName_utf8String),
        ('bmpString', _X520LocalityName_bmpString),
        ])
    X520LocalityName._ext = None
    
    #-----< id-at-stateOrProvinceName >-----#
    id_at_stateOrProvinceName = OID(name='id-at-stateOrProvinceName', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_stateOrProvinceName._val = (2, 5, 4, 8)
    
    #-----< X520StateOrProvinceName >-----#
    X520StateOrProvinceName = CHOICE(name='X520StateOrProvinceName', mode=MODE_TYPE)
    _X520StateOrProvinceName_teletexString = STR_TELE(name='teletexString', mode=MODE_TYPE)
    _X520StateOrProvinceName_teletexString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520StateOrProvinceName_printableString = STR_PRINT(name='printableString', mode=MODE_TYPE)
    _X520StateOrProvinceName_printableString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520StateOrProvinceName_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE)
    _X520StateOrProvinceName_universalString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520StateOrProvinceName_utf8String = STR_UTF8(name='utf8String', mode=MODE_TYPE)
    _X520StateOrProvinceName_utf8String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520StateOrProvinceName_bmpString = STR_BMP(name='bmpString', mode=MODE_TYPE)
    _X520StateOrProvinceName_bmpString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    X520StateOrProvinceName._cont = ASN1Dict([
        ('teletexString', _X520StateOrProvinceName_teletexString),
        ('printableString', _X520StateOrProvinceName_printableString),
        ('universalString', _X520StateOrProvinceName_universalString),
        ('utf8String', _X520StateOrProvinceName_utf8String),
        ('bmpString', _X520StateOrProvinceName_bmpString),
        ])
    X520StateOrProvinceName._ext = None
    
    #-----< id-at-organizationName >-----#
    id_at_organizationName = OID(name='id-at-organizationName', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_organizationName._val = (2, 5, 4, 10)
    
    #-----< X520OrganizationName >-----#
    X520OrganizationName = CHOICE(name='X520OrganizationName', mode=MODE_TYPE)
    _X520OrganizationName_teletexString = STR_TELE(name='teletexString', mode=MODE_TYPE)
    _X520OrganizationName_teletexString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520OrganizationName_printableString = STR_PRINT(name='printableString', mode=MODE_TYPE)
    _X520OrganizationName_printableString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520OrganizationName_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE)
    _X520OrganizationName_universalString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520OrganizationName_utf8String = STR_UTF8(name='utf8String', mode=MODE_TYPE)
    _X520OrganizationName_utf8String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520OrganizationName_bmpString = STR_BMP(name='bmpString', mode=MODE_TYPE)
    _X520OrganizationName_bmpString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    X520OrganizationName._cont = ASN1Dict([
        ('teletexString', _X520OrganizationName_teletexString),
        ('printableString', _X520OrganizationName_printableString),
        ('universalString', _X520OrganizationName_universalString),
        ('utf8String', _X520OrganizationName_utf8String),
        ('bmpString', _X520OrganizationName_bmpString),
        ])
    X520OrganizationName._ext = None
    
    #-----< id-at-organizationalUnitName >-----#
    id_at_organizationalUnitName = OID(name='id-at-organizationalUnitName', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_organizationalUnitName._val = (2, 5, 4, 11)
    
    #-----< X520OrganizationalUnitName >-----#
    X520OrganizationalUnitName = CHOICE(name='X520OrganizationalUnitName', mode=MODE_TYPE)
    _X520OrganizationalUnitName_teletexString = STR_TELE(name='teletexString', mode=MODE_TYPE)
    _X520OrganizationalUnitName_teletexString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520OrganizationalUnitName_printableString = STR_PRINT(name='printableString', mode=MODE_TYPE)
    _X520OrganizationalUnitName_printableString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520OrganizationalUnitName_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE)
    _X520OrganizationalUnitName_universalString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520OrganizationalUnitName_utf8String = STR_UTF8(name='utf8String', mode=MODE_TYPE)
    _X520OrganizationalUnitName_utf8String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520OrganizationalUnitName_bmpString = STR_BMP(name='bmpString', mode=MODE_TYPE)
    _X520OrganizationalUnitName_bmpString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    X520OrganizationalUnitName._cont = ASN1Dict([
        ('teletexString', _X520OrganizationalUnitName_teletexString),
        ('printableString', _X520OrganizationalUnitName_printableString),
        ('universalString', _X520OrganizationalUnitName_universalString),
        ('utf8String', _X520OrganizationalUnitName_utf8String),
        ('bmpString', _X520OrganizationalUnitName_bmpString),
        ])
    X520OrganizationalUnitName._ext = None
    
    #-----< id-at-title >-----#
    id_at_title = OID(name='id-at-title', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_title._val = (2, 5, 4, 12)
    
    #-----< X520Title >-----#
    X520Title = CHOICE(name='X520Title', mode=MODE_TYPE)
    _X520Title_teletexString = STR_TELE(name='teletexString', mode=MODE_TYPE)
    _X520Title_teletexString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520Title_printableString = STR_PRINT(name='printableString', mode=MODE_TYPE)
    _X520Title_printableString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520Title_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE)
    _X520Title_universalString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520Title_utf8String = STR_UTF8(name='utf8String', mode=MODE_TYPE)
    _X520Title_utf8String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    _X520Title_bmpString = STR_BMP(name='bmpString', mode=MODE_TYPE)
    _X520Title_bmpString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    X520Title._cont = ASN1Dict([
        ('teletexString', _X520Title_teletexString),
        ('printableString', _X520Title_printableString),
        ('universalString', _X520Title_universalString),
        ('utf8String', _X520Title_utf8String),
        ('bmpString', _X520Title_bmpString),
        ])
    X520Title._ext = None
    
    #-----< id-at-dnQualifier >-----#
    id_at_dnQualifier = OID(name='id-at-dnQualifier', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_dnQualifier._val = (2, 5, 4, 46)
    
    #-----< X520dnQualifier >-----#
    X520dnQualifier = STR_PRINT(name='X520dnQualifier', mode=MODE_TYPE)
    
    #-----< id-at-countryName >-----#
    id_at_countryName = OID(name='id-at-countryName', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_countryName._val = (2, 5, 4, 6)
    
    #-----< X520countryName >-----#
    X520countryName = STR_PRINT(name='X520countryName', mode=MODE_TYPE)
    X520countryName._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< id-at-serialNumber >-----#
    id_at_serialNumber = OID(name='id-at-serialNumber', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_serialNumber._val = (2, 5, 4, 5)
    
    #-----< X520SerialNumber >-----#
    X520SerialNumber = STR_PRINT(name='X520SerialNumber', mode=MODE_TYPE)
    X520SerialNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< id-at-pseudonym >-----#
    id_at_pseudonym = OID(name='id-at-pseudonym', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_at_pseudonym._val = (2, 5, 4, 65)
    
    #-----< X520Pseudonym >-----#
    X520Pseudonym = CHOICE(name='X520Pseudonym', mode=MODE_TYPE)
    _X520Pseudonym_teletexString = STR_TELE(name='teletexString', mode=MODE_TYPE)
    _X520Pseudonym_teletexString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520Pseudonym_printableString = STR_PRINT(name='printableString', mode=MODE_TYPE)
    _X520Pseudonym_printableString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520Pseudonym_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE)
    _X520Pseudonym_universalString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520Pseudonym_utf8String = STR_UTF8(name='utf8String', mode=MODE_TYPE)
    _X520Pseudonym_utf8String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    _X520Pseudonym_bmpString = STR_BMP(name='bmpString', mode=MODE_TYPE)
    _X520Pseudonym_bmpString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    X520Pseudonym._cont = ASN1Dict([
        ('teletexString', _X520Pseudonym_teletexString),
        ('printableString', _X520Pseudonym_printableString),
        ('universalString', _X520Pseudonym_universalString),
        ('utf8String', _X520Pseudonym_utf8String),
        ('bmpString', _X520Pseudonym_bmpString),
        ])
    X520Pseudonym._ext = None
    
    #-----< id-domainComponent >-----#
    id_domainComponent = OID(name='id-domainComponent', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_domainComponent._val = (0, 9, 2342, 19200300, 100, 1, 25)
    
    #-----< DomainComponent >-----#
    DomainComponent = STR_IA5(name='DomainComponent', mode=MODE_TYPE)
    
    #-----< pkcs-9 >-----#
    pkcs_9 = OID(name='pkcs-9', mode=MODE_VALUE)
    pkcs_9._val = (1, 2, 840, 113549, 1, 9)
    
    #-----< id-emailAddress >-----#
    id_emailAddress = OID(name='id-emailAddress', mode=MODE_VALUE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeType')))
    id_emailAddress._val = (1, 2, 840, 113549, 1, 9, 1)
    
    #-----< EmailAddress >-----#
    EmailAddress = STR_IA5(name='EmailAddress', mode=MODE_TYPE)
    EmailAddress._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< Name >-----#
    Name = CHOICE(name='Name', mode=MODE_TYPE)
    _Name_rdnSequence = SEQ_OF(name='rdnSequence', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'RDNSequence')))
    Name._cont = ASN1Dict([
        ('rdnSequence', _Name_rdnSequence),
        ])
    Name._ext = None
    
    #-----< RDNSequence >-----#
    RDNSequence = SEQ_OF(name='RDNSequence', mode=MODE_TYPE)
    _RDNSequence__item_ = SET_OF(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'RelativeDistinguishedName')))
    RDNSequence._cont = _RDNSequence__item_
    
    #-----< DistinguishedName >-----#
    DistinguishedName = SEQ_OF(name='DistinguishedName', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'RDNSequence')))
    
    #-----< RelativeDistinguishedName >-----#
    RelativeDistinguishedName = SET_OF(name='RelativeDistinguishedName', mode=MODE_TYPE)
    _RelativeDistinguishedName__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AttributeTypeAndValue')))
    RelativeDistinguishedName._cont = _RelativeDistinguishedName__item_
    RelativeDistinguishedName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< DirectoryString >-----#
    DirectoryString = CHOICE(name='DirectoryString', mode=MODE_TYPE)
    _DirectoryString_teletexString = STR_TELE(name='teletexString', mode=MODE_TYPE)
    _DirectoryString_teletexString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _DirectoryString_printableString = STR_PRINT(name='printableString', mode=MODE_TYPE)
    _DirectoryString_printableString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _DirectoryString_universalString = STR_UNIV(name='universalString', mode=MODE_TYPE)
    _DirectoryString_universalString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _DirectoryString_utf8String = STR_UTF8(name='utf8String', mode=MODE_TYPE)
    _DirectoryString_utf8String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _DirectoryString_bmpString = STR_BMP(name='bmpString', mode=MODE_TYPE)
    _DirectoryString_bmpString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    DirectoryString._cont = ASN1Dict([
        ('teletexString', _DirectoryString_teletexString),
        ('printableString', _DirectoryString_printableString),
        ('universalString', _DirectoryString_universalString),
        ('utf8String', _DirectoryString_utf8String),
        ('bmpString', _DirectoryString_bmpString),
        ])
    DirectoryString._ext = None
    
    #-----< Certificate >-----#
    Certificate = SEQ(name='Certificate', mode=MODE_TYPE)
    _Certificate_tbsCertificate = SEQ(name='tbsCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'TBSCertificate')))
    _Certificate_signatureAlgorithm = SEQ(name='signatureAlgorithm', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AlgorithmIdentifier')))
    _Certificate_signature = BIT_STR(name='signature', mode=MODE_TYPE)
    Certificate._cont = ASN1Dict([
        ('tbsCertificate', _Certificate_tbsCertificate),
        ('signatureAlgorithm', _Certificate_signatureAlgorithm),
        ('signature', _Certificate_signature),
        ])
    Certificate._ext = None
    
    #-----< TBSCertificate >-----#
    TBSCertificate = SEQ(name='TBSCertificate', mode=MODE_TYPE)
    _TBSCertificate_version = INT(name='version', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Version')), default=0)
    _TBSCertificate_serialNumber = INT(name='serialNumber', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'CertificateSerialNumber')))
    _TBSCertificate_signature = SEQ(name='signature', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AlgorithmIdentifier')))
    _TBSCertificate_issuer = CHOICE(name='issuer', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Name')))
    _TBSCertificate_validity = SEQ(name='validity', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Validity')))
    _TBSCertificate_subject = CHOICE(name='subject', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Name')))
    _TBSCertificate_subjectPublicKeyInfo = SEQ(name='subjectPublicKeyInfo', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'SubjectPublicKeyInfo')))
    _TBSCertificate_issuerUniqueID = BIT_STR(name='issuerUniqueID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'UniqueIdentifier')), opt=True)
    _TBSCertificate_subjectUniqueID = BIT_STR(name='subjectUniqueID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'UniqueIdentifier')), opt=True)
    _TBSCertificate_extensions = SEQ_OF(name='extensions', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Extensions')), opt=True)
    TBSCertificate._cont = ASN1Dict([
        ('version', _TBSCertificate_version),
        ('serialNumber', _TBSCertificate_serialNumber),
        ('signature', _TBSCertificate_signature),
        ('issuer', _TBSCertificate_issuer),
        ('validity', _TBSCertificate_validity),
        ('subject', _TBSCertificate_subject),
        ('subjectPublicKeyInfo', _TBSCertificate_subjectPublicKeyInfo),
        ('issuerUniqueID', _TBSCertificate_issuerUniqueID),
        ('subjectUniqueID', _TBSCertificate_subjectUniqueID),
        ('extensions', _TBSCertificate_extensions),
        ])
    TBSCertificate._ext = None
    
    #-----< Version >-----#
    Version = INT(name='Version', mode=MODE_TYPE)
    Version._cont = ASN1Dict([('v1', 0), ('v2', 1), ('v3', 2)])
    
    #-----< CertificateSerialNumber >-----#
    CertificateSerialNumber = INT(name='CertificateSerialNumber', mode=MODE_TYPE)
    
    #-----< Validity >-----#
    Validity = SEQ(name='Validity', mode=MODE_TYPE)
    _Validity_notBefore = CHOICE(name='notBefore', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Time')))
    _Validity_notAfter = CHOICE(name='notAfter', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Time')))
    Validity._cont = ASN1Dict([
        ('notBefore', _Validity_notBefore),
        ('notAfter', _Validity_notAfter),
        ])
    Validity._ext = None
    
    #-----< Time >-----#
    Time = CHOICE(name='Time', mode=MODE_TYPE)
    _Time_utcTime = TIME_UTC(name='utcTime', mode=MODE_TYPE)
    _Time_generalTime = TIME_GEN(name='generalTime', mode=MODE_TYPE)
    Time._cont = ASN1Dict([
        ('utcTime', _Time_utcTime),
        ('generalTime', _Time_generalTime),
        ])
    Time._ext = None
    
    #-----< UniqueIdentifier >-----#
    UniqueIdentifier = BIT_STR(name='UniqueIdentifier', mode=MODE_TYPE)
    
    #-----< SubjectPublicKeyInfo >-----#
    SubjectPublicKeyInfo = SEQ(name='SubjectPublicKeyInfo', mode=MODE_TYPE)
    _SubjectPublicKeyInfo_algorithm = SEQ(name='algorithm', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AlgorithmIdentifier')))
    _SubjectPublicKeyInfo_subjectPublicKey = BIT_STR(name='subjectPublicKey', mode=MODE_TYPE)
    SubjectPublicKeyInfo._cont = ASN1Dict([
        ('algorithm', _SubjectPublicKeyInfo_algorithm),
        ('subjectPublicKey', _SubjectPublicKeyInfo_subjectPublicKey),
        ])
    SubjectPublicKeyInfo._ext = None
    
    #-----< Extensions >-----#
    Extensions = SEQ_OF(name='Extensions', mode=MODE_TYPE)
    _Extensions__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Extension')))
    Extensions._cont = _Extensions__item_
    Extensions._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< Extension >-----#
    Extension = SEQ(name='Extension', mode=MODE_TYPE)
    _Extension_extnID = OID(name='extnID', mode=MODE_TYPE)
    _Extension_critical = BOOL(name='critical', mode=MODE_TYPE, default=False)
    _Extension_extnValue = OCT_STR(name='extnValue', mode=MODE_TYPE)
    Extension._cont = ASN1Dict([
        ('extnID', _Extension_extnID),
        ('critical', _Extension_critical),
        ('extnValue', _Extension_extnValue),
        ])
    Extension._ext = None
    
    #-----< CertificateList >-----#
    CertificateList = SEQ(name='CertificateList', mode=MODE_TYPE)
    _CertificateList_tbsCertList = SEQ(name='tbsCertList', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'TBSCertList')))
    _CertificateList_signatureAlgorithm = SEQ(name='signatureAlgorithm', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AlgorithmIdentifier')))
    _CertificateList_signature = BIT_STR(name='signature', mode=MODE_TYPE)
    CertificateList._cont = ASN1Dict([
        ('tbsCertList', _CertificateList_tbsCertList),
        ('signatureAlgorithm', _CertificateList_signatureAlgorithm),
        ('signature', _CertificateList_signature),
        ])
    CertificateList._ext = None
    
    #-----< TBSCertList >-----#
    TBSCertList = SEQ(name='TBSCertList', mode=MODE_TYPE)
    _TBSCertList_version = INT(name='version', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Version')), opt=True)
    _TBSCertList_signature = SEQ(name='signature', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AlgorithmIdentifier')))
    _TBSCertList_issuer = CHOICE(name='issuer', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Name')))
    _TBSCertList_thisUpdate = CHOICE(name='thisUpdate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Time')))
    _TBSCertList_nextUpdate = CHOICE(name='nextUpdate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Time')), opt=True)
    _TBSCertList_revokedCertificates = SEQ_OF(name='revokedCertificates', mode=MODE_TYPE, opt=True)
    __TBSCertList_revokedCertificates__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___TBSCertList_revokedCertificates__item__userCertificate = INT(name='userCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'CertificateSerialNumber')))
    ___TBSCertList_revokedCertificates__item__revocationDate = CHOICE(name='revocationDate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Time')))
    ___TBSCertList_revokedCertificates__item__crlEntryExtensions = SEQ_OF(name='crlEntryExtensions', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Extensions')), opt=True)
    __TBSCertList_revokedCertificates__item_._cont = ASN1Dict([
        ('userCertificate', ___TBSCertList_revokedCertificates__item__userCertificate),
        ('revocationDate', ___TBSCertList_revokedCertificates__item__revocationDate),
        ('crlEntryExtensions', ___TBSCertList_revokedCertificates__item__crlEntryExtensions),
        ])
    __TBSCertList_revokedCertificates__item_._ext = None
    _TBSCertList_revokedCertificates._cont = __TBSCertList_revokedCertificates__item_
    _TBSCertList_crlExtensions = SEQ_OF(name='crlExtensions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Extensions')), opt=True)
    TBSCertList._cont = ASN1Dict([
        ('version', _TBSCertList_version),
        ('signature', _TBSCertList_signature),
        ('issuer', _TBSCertList_issuer),
        ('thisUpdate', _TBSCertList_thisUpdate),
        ('nextUpdate', _TBSCertList_nextUpdate),
        ('revokedCertificates', _TBSCertList_revokedCertificates),
        ('crlExtensions', _TBSCertList_crlExtensions),
        ])
    TBSCertList._ext = None
    
    #-----< AlgorithmIdentifier >-----#
    AlgorithmIdentifier = SEQ(name='AlgorithmIdentifier', mode=MODE_TYPE)
    _AlgorithmIdentifier_algorithm = OID(name='algorithm', mode=MODE_TYPE)
    _AlgorithmIdentifier_parameters = ANY(name='parameters', mode=MODE_TYPE, opt=True, defby='algorithm')
    AlgorithmIdentifier._cont = ASN1Dict([
        ('algorithm', _AlgorithmIdentifier_algorithm),
        ('parameters', _AlgorithmIdentifier_parameters),
        ])
    AlgorithmIdentifier._ext = None
    
    #-----< ORAddress >-----#
    ORAddress = SEQ(name='ORAddress', mode=MODE_TYPE)
    _ORAddress_built_in_standard_attributes = SEQ(name='built-in-standard-attributes', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'BuiltInStandardAttributes')))
    _ORAddress_built_in_domain_defined_attributes = SEQ_OF(name='built-in-domain-defined-attributes', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'BuiltInDomainDefinedAttributes')), opt=True)
    _ORAddress_extension_attributes = SET_OF(name='extension-attributes', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'ExtensionAttributes')), opt=True)
    ORAddress._cont = ASN1Dict([
        ('built-in-standard-attributes', _ORAddress_built_in_standard_attributes),
        ('built-in-domain-defined-attributes', _ORAddress_built_in_domain_defined_attributes),
        ('extension-attributes', _ORAddress_extension_attributes),
        ])
    ORAddress._ext = None
    
    #-----< BuiltInStandardAttributes >-----#
    BuiltInStandardAttributes = SEQ(name='BuiltInStandardAttributes', mode=MODE_TYPE)
    _BuiltInStandardAttributes_country_name = CHOICE(name='country-name', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'CountryName')), opt=True)
    _BuiltInStandardAttributes_administration_domain_name = CHOICE(name='administration-domain-name', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'AdministrationDomainName')), opt=True)
    _BuiltInStandardAttributes_network_address = STR_NUM(name='network-address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'NetworkAddress')), opt=True)
    _BuiltInStandardAttributes_terminal_identifier = STR_PRINT(name='terminal-identifier', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'TerminalIdentifier')), opt=True)
    _BuiltInStandardAttributes_private_domain_name = CHOICE(name='private-domain-name', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'PrivateDomainName')), opt=True)
    _BuiltInStandardAttributes_organization_name = STR_PRINT(name='organization-name', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'OrganizationName')), opt=True)
    _BuiltInStandardAttributes_numeric_user_identifier = STR_NUM(name='numeric-user-identifier', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'NumericUserIdentifier')), opt=True)
    _BuiltInStandardAttributes_personal_name = SET(name='personal-name', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'PersonalName')), opt=True)
    _BuiltInStandardAttributes_organizational_unit_names = SEQ_OF(name='organizational-unit-names', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'OrganizationalUnitNames')), opt=True)
    BuiltInStandardAttributes._cont = ASN1Dict([
        ('country-name', _BuiltInStandardAttributes_country_name),
        ('administration-domain-name', _BuiltInStandardAttributes_administration_domain_name),
        ('network-address', _BuiltInStandardAttributes_network_address),
        ('terminal-identifier', _BuiltInStandardAttributes_terminal_identifier),
        ('private-domain-name', _BuiltInStandardAttributes_private_domain_name),
        ('organization-name', _BuiltInStandardAttributes_organization_name),
        ('numeric-user-identifier', _BuiltInStandardAttributes_numeric_user_identifier),
        ('personal-name', _BuiltInStandardAttributes_personal_name),
        ('organizational-unit-names', _BuiltInStandardAttributes_organizational_unit_names),
        ])
    BuiltInStandardAttributes._ext = None
    
    #-----< CountryName >-----#
    CountryName = CHOICE(name='CountryName', mode=MODE_TYPE, tag=(1, TAG_APPLICATION, TAG_EXPLICIT))
    _CountryName_x121_dcc_code = STR_NUM(name='x121-dcc-code', mode=MODE_TYPE)
    _CountryName_x121_dcc_code._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _CountryName_iso_3166_alpha2_code = STR_PRINT(name='iso-3166-alpha2-code', mode=MODE_TYPE)
    _CountryName_iso_3166_alpha2_code._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    CountryName._cont = ASN1Dict([
        ('x121-dcc-code', _CountryName_x121_dcc_code),
        ('iso-3166-alpha2-code', _CountryName_iso_3166_alpha2_code),
        ])
    CountryName._ext = None
    
    #-----< AdministrationDomainName >-----#
    AdministrationDomainName = CHOICE(name='AdministrationDomainName', mode=MODE_TYPE, tag=(2, TAG_APPLICATION, TAG_EXPLICIT))
    _AdministrationDomainName_numeric = STR_NUM(name='numeric', mode=MODE_TYPE)
    _AdministrationDomainName_numeric._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16)], ev=None, er=[])
    _AdministrationDomainName_printable = STR_PRINT(name='printable', mode=MODE_TYPE)
    _AdministrationDomainName_printable._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16)], ev=None, er=[])
    AdministrationDomainName._cont = ASN1Dict([
        ('numeric', _AdministrationDomainName_numeric),
        ('printable', _AdministrationDomainName_printable),
        ])
    AdministrationDomainName._ext = None
    
    #-----< NetworkAddress >-----#
    NetworkAddress = STR_NUM(name='NetworkAddress', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'X121Address')))
    
    #-----< X121Address >-----#
    X121Address = STR_NUM(name='X121Address', mode=MODE_TYPE)
    X121Address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< TerminalIdentifier >-----#
    TerminalIdentifier = STR_PRINT(name='TerminalIdentifier', mode=MODE_TYPE)
    TerminalIdentifier._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    
    #-----< PrivateDomainName >-----#
    PrivateDomainName = CHOICE(name='PrivateDomainName', mode=MODE_TYPE)
    _PrivateDomainName_numeric = STR_NUM(name='numeric', mode=MODE_TYPE)
    _PrivateDomainName_numeric._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PrivateDomainName_printable = STR_PRINT(name='printable', mode=MODE_TYPE)
    _PrivateDomainName_printable._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    PrivateDomainName._cont = ASN1Dict([
        ('numeric', _PrivateDomainName_numeric),
        ('printable', _PrivateDomainName_printable),
        ])
    PrivateDomainName._ext = None
    
    #-----< OrganizationName >-----#
    OrganizationName = STR_PRINT(name='OrganizationName', mode=MODE_TYPE)
    OrganizationName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< NumericUserIdentifier >-----#
    NumericUserIdentifier = STR_NUM(name='NumericUserIdentifier', mode=MODE_TYPE)
    NumericUserIdentifier._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< PersonalName >-----#
    PersonalName = SET(name='PersonalName', mode=MODE_TYPE)
    _PersonalName_surname = STR_PRINT(name='surname', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PersonalName_surname._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=None, er=[])
    _PersonalName_given_name = STR_PRINT(name='given-name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PersonalName_given_name._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PersonalName_initials = STR_PRINT(name='initials', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PersonalName_initials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    _PersonalName_generation_qualifier = STR_PRINT(name='generation-qualifier', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PersonalName_generation_qualifier._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    PersonalName._cont = ASN1Dict([
        ('surname', _PersonalName_surname),
        ('given-name', _PersonalName_given_name),
        ('initials', _PersonalName_initials),
        ('generation-qualifier', _PersonalName_generation_qualifier),
        ])
    PersonalName._ext = None
    
    #-----< OrganizationalUnitNames >-----#
    OrganizationalUnitNames = SEQ_OF(name='OrganizationalUnitNames', mode=MODE_TYPE)
    _OrganizationalUnitNames__item_ = STR_PRINT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'OrganizationalUnitName')))
    OrganizationalUnitNames._cont = _OrganizationalUnitNames__item_
    OrganizationalUnitNames._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< OrganizationalUnitName >-----#
    OrganizationalUnitName = STR_PRINT(name='OrganizationalUnitName', mode=MODE_TYPE)
    OrganizationalUnitName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< BuiltInDomainDefinedAttributes >-----#
    BuiltInDomainDefinedAttributes = SEQ_OF(name='BuiltInDomainDefinedAttributes', mode=MODE_TYPE)
    _BuiltInDomainDefinedAttributes__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'BuiltInDomainDefinedAttribute')))
    BuiltInDomainDefinedAttributes._cont = _BuiltInDomainDefinedAttributes__item_
    BuiltInDomainDefinedAttributes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< BuiltInDomainDefinedAttribute >-----#
    BuiltInDomainDefinedAttribute = SEQ(name='BuiltInDomainDefinedAttribute', mode=MODE_TYPE)
    _BuiltInDomainDefinedAttribute_type = STR_PRINT(name='type', mode=MODE_TYPE)
    _BuiltInDomainDefinedAttribute_type._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _BuiltInDomainDefinedAttribute_value = STR_PRINT(name='value', mode=MODE_TYPE)
    _BuiltInDomainDefinedAttribute_value._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    BuiltInDomainDefinedAttribute._cont = ASN1Dict([
        ('type', _BuiltInDomainDefinedAttribute_type),
        ('value', _BuiltInDomainDefinedAttribute_value),
        ])
    BuiltInDomainDefinedAttribute._ext = None
    
    #-----< ExtensionAttributes >-----#
    ExtensionAttributes = SET_OF(name='ExtensionAttributes', mode=MODE_TYPE)
    _ExtensionAttributes__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'ExtensionAttribute')))
    ExtensionAttributes._cont = _ExtensionAttributes__item_
    ExtensionAttributes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< ExtensionAttribute >-----#
    ExtensionAttribute = SEQ(name='ExtensionAttribute', mode=MODE_TYPE)
    _ExtensionAttribute_extension_attribute_type = INT(name='extension-attribute-type', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ExtensionAttribute_extension_attribute_type._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=256)], ev=None, er=[])
    _ExtensionAttribute_extension_attribute_value = ANY(name='extension-attribute-value', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), defby='extension-attribute-type')
    ExtensionAttribute._cont = ASN1Dict([
        ('extension-attribute-type', _ExtensionAttribute_extension_attribute_type),
        ('extension-attribute-value', _ExtensionAttribute_extension_attribute_value),
        ])
    ExtensionAttribute._ext = None
    
    #-----< common-name >-----#
    common_name = INT(name='common-name', mode=MODE_VALUE)
    common_name._val = 1
    
    #-----< CommonName >-----#
    CommonName = STR_PRINT(name='CommonName', mode=MODE_TYPE)
    CommonName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< teletex-common-name >-----#
    teletex_common_name = INT(name='teletex-common-name', mode=MODE_VALUE)
    teletex_common_name._val = 2
    
    #-----< TeletexCommonName >-----#
    TeletexCommonName = STR_TELE(name='TeletexCommonName', mode=MODE_TYPE)
    TeletexCommonName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< teletex-organization-name >-----#
    teletex_organization_name = INT(name='teletex-organization-name', mode=MODE_VALUE)
    teletex_organization_name._val = 3
    
    #-----< TeletexOrganizationName >-----#
    TeletexOrganizationName = STR_TELE(name='TeletexOrganizationName', mode=MODE_TYPE)
    TeletexOrganizationName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=64)], ev=None, er=[])
    
    #-----< teletex-personal-name >-----#
    teletex_personal_name = INT(name='teletex-personal-name', mode=MODE_VALUE)
    teletex_personal_name._val = 4
    
    #-----< TeletexPersonalName >-----#
    TeletexPersonalName = SET(name='TeletexPersonalName', mode=MODE_TYPE)
    _TeletexPersonalName_surname = STR_TELE(name='surname', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TeletexPersonalName_surname._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=None, er=[])
    _TeletexPersonalName_given_name = STR_TELE(name='given-name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TeletexPersonalName_given_name._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _TeletexPersonalName_initials = STR_TELE(name='initials', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TeletexPersonalName_initials._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=5)], ev=None, er=[])
    _TeletexPersonalName_generation_qualifier = STR_TELE(name='generation-qualifier', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _TeletexPersonalName_generation_qualifier._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    TeletexPersonalName._cont = ASN1Dict([
        ('surname', _TeletexPersonalName_surname),
        ('given-name', _TeletexPersonalName_given_name),
        ('initials', _TeletexPersonalName_initials),
        ('generation-qualifier', _TeletexPersonalName_generation_qualifier),
        ])
    TeletexPersonalName._ext = None
    
    #-----< teletex-organizational-unit-names >-----#
    teletex_organizational_unit_names = INT(name='teletex-organizational-unit-names', mode=MODE_VALUE)
    teletex_organizational_unit_names._val = 5
    
    #-----< TeletexOrganizationalUnitNames >-----#
    TeletexOrganizationalUnitNames = SEQ_OF(name='TeletexOrganizationalUnitNames', mode=MODE_TYPE)
    _TeletexOrganizationalUnitNames__item_ = STR_TELE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'TeletexOrganizationalUnitName')))
    TeletexOrganizationalUnitNames._cont = _TeletexOrganizationalUnitNames__item_
    TeletexOrganizationalUnitNames._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< TeletexOrganizationalUnitName >-----#
    TeletexOrganizationalUnitName = STR_TELE(name='TeletexOrganizationalUnitName', mode=MODE_TYPE)
    TeletexOrganizationalUnitName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=32)], ev=None, er=[])
    
    #-----< pds-name >-----#
    pds_name = INT(name='pds-name', mode=MODE_VALUE)
    pds_name._val = 7
    
    #-----< PDSName >-----#
    PDSName = STR_PRINT(name='PDSName', mode=MODE_TYPE)
    PDSName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< physical-delivery-country-name >-----#
    physical_delivery_country_name = INT(name='physical-delivery-country-name', mode=MODE_VALUE)
    physical_delivery_country_name._val = 8
    
    #-----< PhysicalDeliveryCountryName >-----#
    PhysicalDeliveryCountryName = CHOICE(name='PhysicalDeliveryCountryName', mode=MODE_TYPE)
    _PhysicalDeliveryCountryName_x121_dcc_code = STR_NUM(name='x121-dcc-code', mode=MODE_TYPE)
    _PhysicalDeliveryCountryName_x121_dcc_code._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _PhysicalDeliveryCountryName_iso_3166_alpha2_code = STR_PRINT(name='iso-3166-alpha2-code', mode=MODE_TYPE)
    _PhysicalDeliveryCountryName_iso_3166_alpha2_code._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    PhysicalDeliveryCountryName._cont = ASN1Dict([
        ('x121-dcc-code', _PhysicalDeliveryCountryName_x121_dcc_code),
        ('iso-3166-alpha2-code', _PhysicalDeliveryCountryName_iso_3166_alpha2_code),
        ])
    PhysicalDeliveryCountryName._ext = None
    
    #-----< postal-code >-----#
    postal_code = INT(name='postal-code', mode=MODE_VALUE)
    postal_code._val = 9
    
    #-----< PostalCode >-----#
    PostalCode = CHOICE(name='PostalCode', mode=MODE_TYPE)
    _PostalCode_numeric_code = STR_NUM(name='numeric-code', mode=MODE_TYPE)
    _PostalCode_numeric_code._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    _PostalCode_printable_code = STR_PRINT(name='printable-code', mode=MODE_TYPE)
    _PostalCode_printable_code._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    PostalCode._cont = ASN1Dict([
        ('numeric-code', _PostalCode_numeric_code),
        ('printable-code', _PostalCode_printable_code),
        ])
    PostalCode._ext = None
    
    #-----< physical-delivery-office-name >-----#
    physical_delivery_office_name = INT(name='physical-delivery-office-name', mode=MODE_VALUE)
    physical_delivery_office_name._val = 10
    
    #-----< PhysicalDeliveryOfficeName >-----#
    PhysicalDeliveryOfficeName = SET(name='PhysicalDeliveryOfficeName', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< physical-delivery-office-number >-----#
    physical_delivery_office_number = INT(name='physical-delivery-office-number', mode=MODE_VALUE)
    physical_delivery_office_number._val = 11
    
    #-----< PhysicalDeliveryOfficeNumber >-----#
    PhysicalDeliveryOfficeNumber = SET(name='PhysicalDeliveryOfficeNumber', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< extension-OR-address-components >-----#
    extension_OR_address_components = INT(name='extension-OR-address-components', mode=MODE_VALUE)
    extension_OR_address_components._val = 12
    
    #-----< ExtensionORAddressComponents >-----#
    ExtensionORAddressComponents = SET(name='ExtensionORAddressComponents', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< physical-delivery-personal-name >-----#
    physical_delivery_personal_name = INT(name='physical-delivery-personal-name', mode=MODE_VALUE)
    physical_delivery_personal_name._val = 13
    
    #-----< PhysicalDeliveryPersonalName >-----#
    PhysicalDeliveryPersonalName = SET(name='PhysicalDeliveryPersonalName', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< physical-delivery-organization-name >-----#
    physical_delivery_organization_name = INT(name='physical-delivery-organization-name', mode=MODE_VALUE)
    physical_delivery_organization_name._val = 14
    
    #-----< PhysicalDeliveryOrganizationName >-----#
    PhysicalDeliveryOrganizationName = SET(name='PhysicalDeliveryOrganizationName', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< extension-physical-delivery-address-components >-----#
    extension_physical_delivery_address_components = INT(name='extension-physical-delivery-address-components', mode=MODE_VALUE)
    extension_physical_delivery_address_components._val = 15
    
    #-----< ExtensionPhysicalDeliveryAddressComponents >-----#
    ExtensionPhysicalDeliveryAddressComponents = SET(name='ExtensionPhysicalDeliveryAddressComponents', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< unformatted-postal-address >-----#
    unformatted_postal_address = INT(name='unformatted-postal-address', mode=MODE_VALUE)
    unformatted_postal_address._val = 16
    
    #-----< UnformattedPostalAddress >-----#
    UnformattedPostalAddress = SET(name='UnformattedPostalAddress', mode=MODE_TYPE)
    _UnformattedPostalAddress_printable_address = SEQ_OF(name='printable-address', mode=MODE_TYPE, opt=True)
    __UnformattedPostalAddress_printable_address__item_ = STR_PRINT(name='_item_', mode=MODE_TYPE)
    __UnformattedPostalAddress_printable_address__item_._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    _UnformattedPostalAddress_printable_address._cont = __UnformattedPostalAddress_printable_address__item_
    _UnformattedPostalAddress_printable_address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=6)], ev=None, er=[])
    _UnformattedPostalAddress_teletex_string = STR_TELE(name='teletex-string', mode=MODE_TYPE, opt=True)
    _UnformattedPostalAddress_teletex_string._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=180)], ev=None, er=[])
    UnformattedPostalAddress._cont = ASN1Dict([
        ('printable-address', _UnformattedPostalAddress_printable_address),
        ('teletex-string', _UnformattedPostalAddress_teletex_string),
        ])
    UnformattedPostalAddress._ext = None
    
    #-----< street-address >-----#
    street_address = INT(name='street-address', mode=MODE_VALUE)
    street_address._val = 17
    
    #-----< StreetAddress >-----#
    StreetAddress = SET(name='StreetAddress', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< post-office-box-address >-----#
    post_office_box_address = INT(name='post-office-box-address', mode=MODE_VALUE)
    post_office_box_address._val = 18
    
    #-----< PostOfficeBoxAddress >-----#
    PostOfficeBoxAddress = SET(name='PostOfficeBoxAddress', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< poste-restante-address >-----#
    poste_restante_address = INT(name='poste-restante-address', mode=MODE_VALUE)
    poste_restante_address._val = 19
    
    #-----< PosteRestanteAddress >-----#
    PosteRestanteAddress = SET(name='PosteRestanteAddress', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< unique-postal-name >-----#
    unique_postal_name = INT(name='unique-postal-name', mode=MODE_VALUE)
    unique_postal_name._val = 20
    
    #-----< UniquePostalName >-----#
    UniquePostalName = SET(name='UniquePostalName', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< local-postal-attributes >-----#
    local_postal_attributes = INT(name='local-postal-attributes', mode=MODE_VALUE)
    local_postal_attributes._val = 21
    
    #-----< LocalPostalAttributes >-----#
    LocalPostalAttributes = SET(name='LocalPostalAttributes', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'PDSParameter')))
    
    #-----< PDSParameter >-----#
    PDSParameter = SET(name='PDSParameter', mode=MODE_TYPE)
    _PDSParameter_printable_string = STR_PRINT(name='printable-string', mode=MODE_TYPE, opt=True)
    _PDSParameter_printable_string._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    _PDSParameter_teletex_string = STR_TELE(name='teletex-string', mode=MODE_TYPE, opt=True)
    _PDSParameter_teletex_string._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    PDSParameter._cont = ASN1Dict([
        ('printable-string', _PDSParameter_printable_string),
        ('teletex-string', _PDSParameter_teletex_string),
        ])
    PDSParameter._ext = None
    
    #-----< extended-network-address >-----#
    extended_network_address = INT(name='extended-network-address', mode=MODE_VALUE)
    extended_network_address._val = 22
    
    #-----< ExtendedNetworkAddress >-----#
    ExtendedNetworkAddress = CHOICE(name='ExtendedNetworkAddress', mode=MODE_TYPE)
    _ExtendedNetworkAddress_e163_4_address = SEQ(name='e163-4-address', mode=MODE_TYPE)
    __ExtendedNetworkAddress_e163_4_address_number = STR_NUM(name='number', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ExtendedNetworkAddress_e163_4_address_number._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=15)], ev=None, er=[])
    __ExtendedNetworkAddress_e163_4_address_sub_address = STR_NUM(name='sub-address', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ExtendedNetworkAddress_e163_4_address_sub_address._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=None, er=[])
    _ExtendedNetworkAddress_e163_4_address._cont = ASN1Dict([
        ('number', __ExtendedNetworkAddress_e163_4_address_number),
        ('sub-address', __ExtendedNetworkAddress_e163_4_address_sub_address),
        ])
    _ExtendedNetworkAddress_e163_4_address._ext = None
    _ExtendedNetworkAddress_psap_address = SEQ(name='psap-address', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'PresentationAddress')))
    ExtendedNetworkAddress._cont = ASN1Dict([
        ('e163-4-address', _ExtendedNetworkAddress_e163_4_address),
        ('psap-address', _ExtendedNetworkAddress_psap_address),
        ])
    ExtendedNetworkAddress._ext = None
    
    #-----< PresentationAddress >-----#
    PresentationAddress = SEQ(name='PresentationAddress', mode=MODE_TYPE)
    _PresentationAddress_pSelector = OCT_STR(name='pSelector', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    _PresentationAddress_sSelector = OCT_STR(name='sSelector', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    _PresentationAddress_tSelector = OCT_STR(name='tSelector', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    _PresentationAddress_nAddresses = SET_OF(name='nAddresses', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PresentationAddress_nAddresses__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _PresentationAddress_nAddresses._cont = __PresentationAddress_nAddresses__item_
    _PresentationAddress_nAddresses._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    PresentationAddress._cont = ASN1Dict([
        ('pSelector', _PresentationAddress_pSelector),
        ('sSelector', _PresentationAddress_sSelector),
        ('tSelector', _PresentationAddress_tSelector),
        ('nAddresses', _PresentationAddress_nAddresses),
        ])
    PresentationAddress._ext = None
    
    #-----< terminal-type >-----#
    terminal_type = INT(name='terminal-type', mode=MODE_VALUE)
    terminal_type._val = 23
    
    #-----< TerminalType >-----#
    TerminalType = INT(name='TerminalType', mode=MODE_TYPE)
    TerminalType._cont = ASN1Dict([('telex', 3), ('teletex', 4), ('g3-facsimile', 5), ('g4-facsimile', 6), ('ia5-terminal', 7), ('videotex', 8)])
    TerminalType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=256)], ev=None, er=[])
    
    #-----< teletex-domain-defined-attributes >-----#
    teletex_domain_defined_attributes = INT(name='teletex-domain-defined-attributes', mode=MODE_VALUE)
    teletex_domain_defined_attributes._val = 6
    
    #-----< TeletexDomainDefinedAttributes >-----#
    TeletexDomainDefinedAttributes = SEQ_OF(name='TeletexDomainDefinedAttributes', mode=MODE_TYPE)
    _TeletexDomainDefinedAttributes__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'TeletexDomainDefinedAttribute')))
    TeletexDomainDefinedAttributes._cont = _TeletexDomainDefinedAttributes__item_
    TeletexDomainDefinedAttributes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=4)], ev=None, er=[])
    
    #-----< TeletexDomainDefinedAttribute >-----#
    TeletexDomainDefinedAttribute = SEQ(name='TeletexDomainDefinedAttribute', mode=MODE_TYPE)
    _TeletexDomainDefinedAttribute_type = STR_TELE(name='type', mode=MODE_TYPE)
    _TeletexDomainDefinedAttribute_type._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=8)], ev=None, er=[])
    _TeletexDomainDefinedAttribute_value = STR_TELE(name='value', mode=MODE_TYPE)
    _TeletexDomainDefinedAttribute_value._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=128)], ev=None, er=[])
    TeletexDomainDefinedAttribute._cont = ASN1Dict([
        ('type', _TeletexDomainDefinedAttribute_type),
        ('value', _TeletexDomainDefinedAttribute_value),
        ])
    TeletexDomainDefinedAttribute._ext = None
    
    #-----< ub-name >-----#
    ub_name = INT(name='ub-name', mode=MODE_VALUE)
    ub_name._val = 32768
    
    #-----< ub-common-name >-----#
    ub_common_name = INT(name='ub-common-name', mode=MODE_VALUE)
    ub_common_name._val = 64
    
    #-----< ub-locality-name >-----#
    ub_locality_name = INT(name='ub-locality-name', mode=MODE_VALUE)
    ub_locality_name._val = 128
    
    #-----< ub-state-name >-----#
    ub_state_name = INT(name='ub-state-name', mode=MODE_VALUE)
    ub_state_name._val = 128
    
    #-----< ub-organization-name >-----#
    ub_organization_name = INT(name='ub-organization-name', mode=MODE_VALUE)
    ub_organization_name._val = 64
    
    #-----< ub-organizational-unit-name >-----#
    ub_organizational_unit_name = INT(name='ub-organizational-unit-name', mode=MODE_VALUE)
    ub_organizational_unit_name._val = 64
    
    #-----< ub-title >-----#
    ub_title = INT(name='ub-title', mode=MODE_VALUE)
    ub_title._val = 64
    
    #-----< ub-serial-number >-----#
    ub_serial_number = INT(name='ub-serial-number', mode=MODE_VALUE)
    ub_serial_number._val = 64
    
    #-----< ub-match >-----#
    ub_match = INT(name='ub-match', mode=MODE_VALUE)
    ub_match._val = 128
    
    #-----< ub-emailaddress-length >-----#
    ub_emailaddress_length = INT(name='ub-emailaddress-length', mode=MODE_VALUE)
    ub_emailaddress_length._val = 255
    
    #-----< ub-common-name-length >-----#
    ub_common_name_length = INT(name='ub-common-name-length', mode=MODE_VALUE)
    ub_common_name_length._val = 64
    
    #-----< ub-country-name-alpha-length >-----#
    ub_country_name_alpha_length = INT(name='ub-country-name-alpha-length', mode=MODE_VALUE)
    ub_country_name_alpha_length._val = 2
    
    #-----< ub-country-name-numeric-length >-----#
    ub_country_name_numeric_length = INT(name='ub-country-name-numeric-length', mode=MODE_VALUE)
    ub_country_name_numeric_length._val = 3
    
    #-----< ub-domain-defined-attributes >-----#
    ub_domain_defined_attributes = INT(name='ub-domain-defined-attributes', mode=MODE_VALUE)
    ub_domain_defined_attributes._val = 4
    
    #-----< ub-domain-defined-attribute-type-length >-----#
    ub_domain_defined_attribute_type_length = INT(name='ub-domain-defined-attribute-type-length', mode=MODE_VALUE)
    ub_domain_defined_attribute_type_length._val = 8
    
    #-----< ub-domain-defined-attribute-value-length >-----#
    ub_domain_defined_attribute_value_length = INT(name='ub-domain-defined-attribute-value-length', mode=MODE_VALUE)
    ub_domain_defined_attribute_value_length._val = 128
    
    #-----< ub-domain-name-length >-----#
    ub_domain_name_length = INT(name='ub-domain-name-length', mode=MODE_VALUE)
    ub_domain_name_length._val = 16
    
    #-----< ub-extension-attributes >-----#
    ub_extension_attributes = INT(name='ub-extension-attributes', mode=MODE_VALUE)
    ub_extension_attributes._val = 256
    
    #-----< ub-e163-4-number-length >-----#
    ub_e163_4_number_length = INT(name='ub-e163-4-number-length', mode=MODE_VALUE)
    ub_e163_4_number_length._val = 15
    
    #-----< ub-e163-4-sub-address-length >-----#
    ub_e163_4_sub_address_length = INT(name='ub-e163-4-sub-address-length', mode=MODE_VALUE)
    ub_e163_4_sub_address_length._val = 40
    
    #-----< ub-generation-qualifier-length >-----#
    ub_generation_qualifier_length = INT(name='ub-generation-qualifier-length', mode=MODE_VALUE)
    ub_generation_qualifier_length._val = 3
    
    #-----< ub-given-name-length >-----#
    ub_given_name_length = INT(name='ub-given-name-length', mode=MODE_VALUE)
    ub_given_name_length._val = 16
    
    #-----< ub-initials-length >-----#
    ub_initials_length = INT(name='ub-initials-length', mode=MODE_VALUE)
    ub_initials_length._val = 5
    
    #-----< ub-integer-options >-----#
    ub_integer_options = INT(name='ub-integer-options', mode=MODE_VALUE)
    ub_integer_options._val = 256
    
    #-----< ub-numeric-user-id-length >-----#
    ub_numeric_user_id_length = INT(name='ub-numeric-user-id-length', mode=MODE_VALUE)
    ub_numeric_user_id_length._val = 32
    
    #-----< ub-organization-name-length >-----#
    ub_organization_name_length = INT(name='ub-organization-name-length', mode=MODE_VALUE)
    ub_organization_name_length._val = 64
    
    #-----< ub-organizational-unit-name-length >-----#
    ub_organizational_unit_name_length = INT(name='ub-organizational-unit-name-length', mode=MODE_VALUE)
    ub_organizational_unit_name_length._val = 32
    
    #-----< ub-organizational-units >-----#
    ub_organizational_units = INT(name='ub-organizational-units', mode=MODE_VALUE)
    ub_organizational_units._val = 4
    
    #-----< ub-pds-name-length >-----#
    ub_pds_name_length = INT(name='ub-pds-name-length', mode=MODE_VALUE)
    ub_pds_name_length._val = 16
    
    #-----< ub-pds-parameter-length >-----#
    ub_pds_parameter_length = INT(name='ub-pds-parameter-length', mode=MODE_VALUE)
    ub_pds_parameter_length._val = 30
    
    #-----< ub-pds-physical-address-lines >-----#
    ub_pds_physical_address_lines = INT(name='ub-pds-physical-address-lines', mode=MODE_VALUE)
    ub_pds_physical_address_lines._val = 6
    
    #-----< ub-postal-code-length >-----#
    ub_postal_code_length = INT(name='ub-postal-code-length', mode=MODE_VALUE)
    ub_postal_code_length._val = 16
    
    #-----< ub-pseudonym >-----#
    ub_pseudonym = INT(name='ub-pseudonym', mode=MODE_VALUE)
    ub_pseudonym._val = 128
    
    #-----< ub-surname-length >-----#
    ub_surname_length = INT(name='ub-surname-length', mode=MODE_VALUE)
    ub_surname_length._val = 40
    
    #-----< ub-terminal-id-length >-----#
    ub_terminal_id_length = INT(name='ub-terminal-id-length', mode=MODE_VALUE)
    ub_terminal_id_length._val = 24
    
    #-----< ub-unformatted-address-length >-----#
    ub_unformatted_address_length = INT(name='ub-unformatted-address-length', mode=MODE_VALUE)
    ub_unformatted_address_length._val = 180
    
    #-----< ub-x121-address-length >-----#
    ub_x121_address_length = INT(name='ub-x121-address-length', mode=MODE_VALUE)
    ub_x121_address_length._val = 16
    
    _all_ = [
        id_pkix,
        id_pe,
        id_qt,
        id_kp,
        id_ad,
        id_qt_cps,
        id_qt_unotice,
        id_ad_ocsp,
        id_ad_caIssuers,
        id_ad_timeStamping,
        id_ad_caRepository,
        _Attribute_type,
        __Attribute_values__item_,
        _Attribute_values,
        Attribute,
        AttributeType,
        AttributeValue,
        _AttributeTypeAndValue_type,
        _AttributeTypeAndValue_value,
        AttributeTypeAndValue,
        id_at,
        id_at_name,
        id_at_surname,
        id_at_givenName,
        id_at_initials,
        id_at_generationQualifier,
        _X520name_teletexString,
        _X520name_printableString,
        _X520name_universalString,
        _X520name_utf8String,
        _X520name_bmpString,
        X520name,
        id_at_commonName,
        _X520CommonName_teletexString,
        _X520CommonName_printableString,
        _X520CommonName_universalString,
        _X520CommonName_utf8String,
        _X520CommonName_bmpString,
        X520CommonName,
        id_at_localityName,
        _X520LocalityName_teletexString,
        _X520LocalityName_printableString,
        _X520LocalityName_universalString,
        _X520LocalityName_utf8String,
        _X520LocalityName_bmpString,
        X520LocalityName,
        id_at_stateOrProvinceName,
        _X520StateOrProvinceName_teletexString,
        _X520StateOrProvinceName_printableString,
        _X520StateOrProvinceName_universalString,
        _X520StateOrProvinceName_utf8String,
        _X520StateOrProvinceName_bmpString,
        X520StateOrProvinceName,
        id_at_organizationName,
        _X520OrganizationName_teletexString,
        _X520OrganizationName_printableString,
        _X520OrganizationName_universalString,
        _X520OrganizationName_utf8String,
        _X520OrganizationName_bmpString,
        X520OrganizationName,
        id_at_organizationalUnitName,
        _X520OrganizationalUnitName_teletexString,
        _X520OrganizationalUnitName_printableString,
        _X520OrganizationalUnitName_universalString,
        _X520OrganizationalUnitName_utf8String,
        _X520OrganizationalUnitName_bmpString,
        X520OrganizationalUnitName,
        id_at_title,
        _X520Title_teletexString,
        _X520Title_printableString,
        _X520Title_universalString,
        _X520Title_utf8String,
        _X520Title_bmpString,
        X520Title,
        id_at_dnQualifier,
        X520dnQualifier,
        id_at_countryName,
        X520countryName,
        id_at_serialNumber,
        X520SerialNumber,
        id_at_pseudonym,
        _X520Pseudonym_teletexString,
        _X520Pseudonym_printableString,
        _X520Pseudonym_universalString,
        _X520Pseudonym_utf8String,
        _X520Pseudonym_bmpString,
        X520Pseudonym,
        id_domainComponent,
        DomainComponent,
        pkcs_9,
        id_emailAddress,
        EmailAddress,
        _Name_rdnSequence,
        Name,
        _RDNSequence__item_,
        RDNSequence,
        DistinguishedName,
        _RelativeDistinguishedName__item_,
        RelativeDistinguishedName,
        _DirectoryString_teletexString,
        _DirectoryString_printableString,
        _DirectoryString_universalString,
        _DirectoryString_utf8String,
        _DirectoryString_bmpString,
        DirectoryString,
        _Certificate_tbsCertificate,
        _Certificate_signatureAlgorithm,
        _Certificate_signature,
        Certificate,
        _TBSCertificate_version,
        _TBSCertificate_serialNumber,
        _TBSCertificate_signature,
        _TBSCertificate_issuer,
        _TBSCertificate_validity,
        _TBSCertificate_subject,
        _TBSCertificate_subjectPublicKeyInfo,
        _TBSCertificate_issuerUniqueID,
        _TBSCertificate_subjectUniqueID,
        _TBSCertificate_extensions,
        TBSCertificate,
        Version,
        CertificateSerialNumber,
        _Validity_notBefore,
        _Validity_notAfter,
        Validity,
        _Time_utcTime,
        _Time_generalTime,
        Time,
        UniqueIdentifier,
        _SubjectPublicKeyInfo_algorithm,
        _SubjectPublicKeyInfo_subjectPublicKey,
        SubjectPublicKeyInfo,
        _Extensions__item_,
        Extensions,
        _Extension_extnID,
        _Extension_critical,
        _Extension_extnValue,
        Extension,
        _CertificateList_tbsCertList,
        _CertificateList_signatureAlgorithm,
        _CertificateList_signature,
        CertificateList,
        _TBSCertList_version,
        _TBSCertList_signature,
        _TBSCertList_issuer,
        _TBSCertList_thisUpdate,
        _TBSCertList_nextUpdate,
        ___TBSCertList_revokedCertificates__item__userCertificate,
        ___TBSCertList_revokedCertificates__item__revocationDate,
        ___TBSCertList_revokedCertificates__item__crlEntryExtensions,
        __TBSCertList_revokedCertificates__item_,
        _TBSCertList_revokedCertificates,
        _TBSCertList_crlExtensions,
        TBSCertList,
        _AlgorithmIdentifier_algorithm,
        _AlgorithmIdentifier_parameters,
        AlgorithmIdentifier,
        _ORAddress_built_in_standard_attributes,
        _ORAddress_built_in_domain_defined_attributes,
        _ORAddress_extension_attributes,
        ORAddress,
        _BuiltInStandardAttributes_country_name,
        _BuiltInStandardAttributes_administration_domain_name,
        _BuiltInStandardAttributes_network_address,
        _BuiltInStandardAttributes_terminal_identifier,
        _BuiltInStandardAttributes_private_domain_name,
        _BuiltInStandardAttributes_organization_name,
        _BuiltInStandardAttributes_numeric_user_identifier,
        _BuiltInStandardAttributes_personal_name,
        _BuiltInStandardAttributes_organizational_unit_names,
        BuiltInStandardAttributes,
        _CountryName_x121_dcc_code,
        _CountryName_iso_3166_alpha2_code,
        CountryName,
        _AdministrationDomainName_numeric,
        _AdministrationDomainName_printable,
        AdministrationDomainName,
        NetworkAddress,
        X121Address,
        TerminalIdentifier,
        _PrivateDomainName_numeric,
        _PrivateDomainName_printable,
        PrivateDomainName,
        OrganizationName,
        NumericUserIdentifier,
        _PersonalName_surname,
        _PersonalName_given_name,
        _PersonalName_initials,
        _PersonalName_generation_qualifier,
        PersonalName,
        _OrganizationalUnitNames__item_,
        OrganizationalUnitNames,
        OrganizationalUnitName,
        _BuiltInDomainDefinedAttributes__item_,
        BuiltInDomainDefinedAttributes,
        _BuiltInDomainDefinedAttribute_type,
        _BuiltInDomainDefinedAttribute_value,
        BuiltInDomainDefinedAttribute,
        _ExtensionAttributes__item_,
        ExtensionAttributes,
        _ExtensionAttribute_extension_attribute_type,
        _ExtensionAttribute_extension_attribute_value,
        ExtensionAttribute,
        common_name,
        CommonName,
        teletex_common_name,
        TeletexCommonName,
        teletex_organization_name,
        TeletexOrganizationName,
        teletex_personal_name,
        _TeletexPersonalName_surname,
        _TeletexPersonalName_given_name,
        _TeletexPersonalName_initials,
        _TeletexPersonalName_generation_qualifier,
        TeletexPersonalName,
        teletex_organizational_unit_names,
        _TeletexOrganizationalUnitNames__item_,
        TeletexOrganizationalUnitNames,
        TeletexOrganizationalUnitName,
        pds_name,
        PDSName,
        physical_delivery_country_name,
        _PhysicalDeliveryCountryName_x121_dcc_code,
        _PhysicalDeliveryCountryName_iso_3166_alpha2_code,
        PhysicalDeliveryCountryName,
        postal_code,
        _PostalCode_numeric_code,
        _PostalCode_printable_code,
        PostalCode,
        physical_delivery_office_name,
        PhysicalDeliveryOfficeName,
        physical_delivery_office_number,
        PhysicalDeliveryOfficeNumber,
        extension_OR_address_components,
        ExtensionORAddressComponents,
        physical_delivery_personal_name,
        PhysicalDeliveryPersonalName,
        physical_delivery_organization_name,
        PhysicalDeliveryOrganizationName,
        extension_physical_delivery_address_components,
        ExtensionPhysicalDeliveryAddressComponents,
        unformatted_postal_address,
        __UnformattedPostalAddress_printable_address__item_,
        _UnformattedPostalAddress_printable_address,
        _UnformattedPostalAddress_teletex_string,
        UnformattedPostalAddress,
        street_address,
        StreetAddress,
        post_office_box_address,
        PostOfficeBoxAddress,
        poste_restante_address,
        PosteRestanteAddress,
        unique_postal_name,
        UniquePostalName,
        local_postal_attributes,
        LocalPostalAttributes,
        _PDSParameter_printable_string,
        _PDSParameter_teletex_string,
        PDSParameter,
        extended_network_address,
        __ExtendedNetworkAddress_e163_4_address_number,
        __ExtendedNetworkAddress_e163_4_address_sub_address,
        _ExtendedNetworkAddress_e163_4_address,
        _ExtendedNetworkAddress_psap_address,
        ExtendedNetworkAddress,
        _PresentationAddress_pSelector,
        _PresentationAddress_sSelector,
        _PresentationAddress_tSelector,
        __PresentationAddress_nAddresses__item_,
        _PresentationAddress_nAddresses,
        PresentationAddress,
        terminal_type,
        TerminalType,
        teletex_domain_defined_attributes,
        _TeletexDomainDefinedAttributes__item_,
        TeletexDomainDefinedAttributes,
        _TeletexDomainDefinedAttribute_type,
        _TeletexDomainDefinedAttribute_value,
        TeletexDomainDefinedAttribute,
        ub_name,
        ub_common_name,
        ub_locality_name,
        ub_state_name,
        ub_organization_name,
        ub_organizational_unit_name,
        ub_title,
        ub_serial_number,
        ub_match,
        ub_emailaddress_length,
        ub_common_name_length,
        ub_country_name_alpha_length,
        ub_country_name_numeric_length,
        ub_domain_defined_attributes,
        ub_domain_defined_attribute_type_length,
        ub_domain_defined_attribute_value_length,
        ub_domain_name_length,
        ub_extension_attributes,
        ub_e163_4_number_length,
        ub_e163_4_sub_address_length,
        ub_generation_qualifier_length,
        ub_given_name_length,
        ub_initials_length,
        ub_integer_options,
        ub_numeric_user_id_length,
        ub_organization_name_length,
        ub_organizational_unit_name_length,
        ub_organizational_units,
        ub_pds_name_length,
        ub_pds_parameter_length,
        ub_pds_physical_address_lines,
        ub_postal_code_length,
        ub_pseudonym,
        ub_surname_length,
        ub_terminal_id_length,
        ub_unformatted_address_length,
        ub_x121_address_length,
    ]

class PKIX1Implicit88:

    _name_  = 'PKIX1Implicit88'
    _oid_   = [1, 3, 6, 1, 5, 5, 7, 0, 19]
    
    _obj_ = [
        'id-ce',
        'id-ce-authorityKeyIdentifier',
        'AuthorityKeyIdentifier',
        'KeyIdentifier',
        'id-ce-subjectKeyIdentifier',
        'SubjectKeyIdentifier',
        'id-ce-keyUsage',
        'KeyUsage',
        'id-ce-privateKeyUsagePeriod',
        'PrivateKeyUsagePeriod',
        'id-ce-certificatePolicies',
        'anyPolicy',
        'CertificatePolicies',
        'PolicyInformation',
        'CertPolicyId',
        'PolicyQualifierInfo',
        'PolicyQualifierId',
        'CPSuri',
        'UserNotice',
        'NoticeReference',
        'DisplayText',
        'id-ce-policyMappings',
        'PolicyMappings',
        'id-ce-subjectAltName',
        'SubjectAltName',
        'GeneralNames',
        'GeneralName',
        'AnotherName',
        'EDIPartyName',
        'id-ce-issuerAltName',
        'IssuerAltName',
        'id-ce-subjectDirectoryAttributes',
        'SubjectDirectoryAttributes',
        'id-ce-basicConstraints',
        'BasicConstraints',
        'id-ce-nameConstraints',
        'NameConstraints',
        'GeneralSubtrees',
        'GeneralSubtree',
        'BaseDistance',
        'id-ce-policyConstraints',
        'PolicyConstraints',
        'SkipCerts',
        'id-ce-cRLDistributionPoints',
        'CRLDistributionPoints',
        'DistributionPoint',
        'DistributionPointName',
        'ReasonFlags',
        'id-ce-extKeyUsage',
        'ExtKeyUsageSyntax',
        'KeyPurposeId',
        'anyExtendedKeyUsage',
        'id-kp-serverAuth',
        'id-kp-clientAuth',
        'id-kp-codeSigning',
        'id-kp-emailProtection',
        'id-kp-timeStamping',
        'id-kp-OCSPSigning',
        'id-ce-inhibitAnyPolicy',
        'InhibitAnyPolicy',
        'id-ce-freshestCRL',
        'FreshestCRL',
        'id-pe-authorityInfoAccess',
        'AuthorityInfoAccessSyntax',
        'AccessDescription',
        'id-pe-subjectInfoAccess',
        'SubjectInfoAccessSyntax',
        'id-ce-cRLNumber',
        'CRLNumber',
        'id-ce-issuingDistributionPoint',
        'IssuingDistributionPoint',
        'id-ce-deltaCRLIndicator',
        'BaseCRLNumber',
        'id-ce-cRLReasons',
        'CRLReason',
        'id-ce-certificateIssuer',
        'CertificateIssuer',
        'id-ce-holdInstructionCode',
        'HoldInstructionCode',
        'holdInstruction',
        'id-holdinstruction-none',
        'id-holdinstruction-callissuer',
        'id-holdinstruction-reject',
        'id-ce-invalidityDate',
        'InvalidityDate',
        ]
    _type_ = [
        'AuthorityKeyIdentifier',
        'KeyIdentifier',
        'SubjectKeyIdentifier',
        'KeyUsage',
        'PrivateKeyUsagePeriod',
        'CertificatePolicies',
        'PolicyInformation',
        'CertPolicyId',
        'PolicyQualifierInfo',
        'PolicyQualifierId',
        'CPSuri',
        'UserNotice',
        'NoticeReference',
        'DisplayText',
        'PolicyMappings',
        'SubjectAltName',
        'GeneralNames',
        'GeneralName',
        'AnotherName',
        'EDIPartyName',
        'IssuerAltName',
        'SubjectDirectoryAttributes',
        'BasicConstraints',
        'NameConstraints',
        'GeneralSubtrees',
        'GeneralSubtree',
        'BaseDistance',
        'PolicyConstraints',
        'SkipCerts',
        'CRLDistributionPoints',
        'DistributionPoint',
        'DistributionPointName',
        'ReasonFlags',
        'ExtKeyUsageSyntax',
        'KeyPurposeId',
        'InhibitAnyPolicy',
        'FreshestCRL',
        'AuthorityInfoAccessSyntax',
        'AccessDescription',
        'SubjectInfoAccessSyntax',
        'CRLNumber',
        'IssuingDistributionPoint',
        'BaseCRLNumber',
        'CRLReason',
        'CertificateIssuer',
        'HoldInstructionCode',
        'InvalidityDate',
        ]
    _set_ = [
        ]
    _val_ = [
        'id-ce',
        'id-ce-authorityKeyIdentifier',
        'id-ce-subjectKeyIdentifier',
        'id-ce-keyUsage',
        'id-ce-privateKeyUsagePeriod',
        'id-ce-certificatePolicies',
        'anyPolicy',
        'id-ce-policyMappings',
        'id-ce-subjectAltName',
        'id-ce-issuerAltName',
        'id-ce-subjectDirectoryAttributes',
        'id-ce-basicConstraints',
        'id-ce-nameConstraints',
        'id-ce-policyConstraints',
        'id-ce-cRLDistributionPoints',
        'id-ce-extKeyUsage',
        'anyExtendedKeyUsage',
        'id-kp-serverAuth',
        'id-kp-clientAuth',
        'id-kp-codeSigning',
        'id-kp-emailProtection',
        'id-kp-timeStamping',
        'id-kp-OCSPSigning',
        'id-ce-inhibitAnyPolicy',
        'id-ce-freshestCRL',
        'id-pe-authorityInfoAccess',
        'id-pe-subjectInfoAccess',
        'id-ce-cRLNumber',
        'id-ce-issuingDistributionPoint',
        'id-ce-deltaCRLIndicator',
        'id-ce-cRLReasons',
        'id-ce-certificateIssuer',
        'id-ce-holdInstructionCode',
        'holdInstruction',
        'id-holdinstruction-none',
        'id-holdinstruction-callissuer',
        'id-holdinstruction-reject',
        'id-ce-invalidityDate',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< id-ce >-----#
    id_ce = OID(name='id-ce', mode=MODE_VALUE)
    id_ce._val = (2, 5, 29)
    
    #-----< id-ce-authorityKeyIdentifier >-----#
    id_ce_authorityKeyIdentifier = OID(name='id-ce-authorityKeyIdentifier', mode=MODE_VALUE)
    id_ce_authorityKeyIdentifier._val = (2, 5, 29, 35)
    
    #-----< AuthorityKeyIdentifier >-----#
    AuthorityKeyIdentifier = SEQ(name='AuthorityKeyIdentifier', mode=MODE_TYPE)
    _AuthorityKeyIdentifier_keyIdentifier = OCT_STR(name='keyIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'KeyIdentifier')), opt=True)
    _AuthorityKeyIdentifier_authorityCertIssuer = SEQ_OF(name='authorityCertIssuer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralNames')), opt=True)
    _AuthorityKeyIdentifier_authorityCertSerialNumber = INT(name='authorityCertSerialNumber', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'CertificateSerialNumber')), opt=True)
    AuthorityKeyIdentifier._cont = ASN1Dict([
        ('keyIdentifier', _AuthorityKeyIdentifier_keyIdentifier),
        ('authorityCertIssuer', _AuthorityKeyIdentifier_authorityCertIssuer),
        ('authorityCertSerialNumber', _AuthorityKeyIdentifier_authorityCertSerialNumber),
        ])
    AuthorityKeyIdentifier._ext = None
    
    #-----< KeyIdentifier >-----#
    KeyIdentifier = OCT_STR(name='KeyIdentifier', mode=MODE_TYPE)
    
    #-----< id-ce-subjectKeyIdentifier >-----#
    id_ce_subjectKeyIdentifier = OID(name='id-ce-subjectKeyIdentifier', mode=MODE_VALUE)
    id_ce_subjectKeyIdentifier._val = (2, 5, 29, 14)
    
    #-----< SubjectKeyIdentifier >-----#
    SubjectKeyIdentifier = OCT_STR(name='SubjectKeyIdentifier', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'KeyIdentifier')))
    
    #-----< id-ce-keyUsage >-----#
    id_ce_keyUsage = OID(name='id-ce-keyUsage', mode=MODE_VALUE)
    id_ce_keyUsage._val = (2, 5, 29, 15)
    
    #-----< KeyUsage >-----#
    KeyUsage = BIT_STR(name='KeyUsage', mode=MODE_TYPE)
    KeyUsage._cont = ASN1Dict([('digitalSignature', 0), ('nonRepudiation', 1), ('keyEncipherment', 2), ('dataEncipherment', 3), ('keyAgreement', 4), ('keyCertSign', 5), ('cRLSign', 6), ('encipherOnly', 7), ('decipherOnly', 8)])
    
    #-----< id-ce-privateKeyUsagePeriod >-----#
    id_ce_privateKeyUsagePeriod = OID(name='id-ce-privateKeyUsagePeriod', mode=MODE_VALUE)
    id_ce_privateKeyUsagePeriod._val = (2, 5, 29, 16)
    
    #-----< PrivateKeyUsagePeriod >-----#
    PrivateKeyUsagePeriod = SEQ(name='PrivateKeyUsagePeriod', mode=MODE_TYPE)
    _PrivateKeyUsagePeriod_notBefore = TIME_GEN(name='notBefore', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PrivateKeyUsagePeriod_notAfter = TIME_GEN(name='notAfter', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    PrivateKeyUsagePeriod._cont = ASN1Dict([
        ('notBefore', _PrivateKeyUsagePeriod_notBefore),
        ('notAfter', _PrivateKeyUsagePeriod_notAfter),
        ])
    PrivateKeyUsagePeriod._ext = None
    
    #-----< id-ce-certificatePolicies >-----#
    id_ce_certificatePolicies = OID(name='id-ce-certificatePolicies', mode=MODE_VALUE)
    id_ce_certificatePolicies._val = (2, 5, 29, 32)
    
    #-----< anyPolicy >-----#
    anyPolicy = OID(name='anyPolicy', mode=MODE_VALUE)
    anyPolicy._val = (2, 5, 29, 32, 0)
    
    #-----< CertificatePolicies >-----#
    CertificatePolicies = SEQ_OF(name='CertificatePolicies', mode=MODE_TYPE)
    _CertificatePolicies__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'PolicyInformation')))
    CertificatePolicies._cont = _CertificatePolicies__item_
    CertificatePolicies._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< PolicyInformation >-----#
    PolicyInformation = SEQ(name='PolicyInformation', mode=MODE_TYPE)
    _PolicyInformation_policyIdentifier = OID(name='policyIdentifier', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'CertPolicyId')))
    _PolicyInformation_policyQualifiers = SEQ_OF(name='policyQualifiers', mode=MODE_TYPE, opt=True)
    __PolicyInformation_policyQualifiers__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'PolicyQualifierInfo')))
    _PolicyInformation_policyQualifiers._cont = __PolicyInformation_policyQualifiers__item_
    _PolicyInformation_policyQualifiers._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    PolicyInformation._cont = ASN1Dict([
        ('policyIdentifier', _PolicyInformation_policyIdentifier),
        ('policyQualifiers', _PolicyInformation_policyQualifiers),
        ])
    PolicyInformation._ext = None
    
    #-----< CertPolicyId >-----#
    CertPolicyId = OID(name='CertPolicyId', mode=MODE_TYPE)
    
    #-----< PolicyQualifierInfo >-----#
    PolicyQualifierInfo = SEQ(name='PolicyQualifierInfo', mode=MODE_TYPE)
    _PolicyQualifierInfo_policyQualifierId = OID(name='policyQualifierId', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'PolicyQualifierId')))
    _PolicyQualifierInfo_qualifier = ANY(name='qualifier', mode=MODE_TYPE, defby='policyQualifierId')
    PolicyQualifierInfo._cont = ASN1Dict([
        ('policyQualifierId', _PolicyQualifierInfo_policyQualifierId),
        ('qualifier', _PolicyQualifierInfo_qualifier),
        ])
    PolicyQualifierInfo._ext = None
    
    #-----< PolicyQualifierId >-----#
    PolicyQualifierId = OID(name='PolicyQualifierId', mode=MODE_TYPE)
    PolicyQualifierId._const_val = ASN1Set(rv=[(1, 3, 6, 1, 5, 5, 7, 2, 1), (1, 3, 6, 1, 5, 5, 7, 2, 2)], rr=[], ev=None, er=[])
    
    #-----< CPSuri >-----#
    CPSuri = STR_IA5(name='CPSuri', mode=MODE_TYPE)
    
    #-----< UserNotice >-----#
    UserNotice = SEQ(name='UserNotice', mode=MODE_TYPE)
    _UserNotice_noticeRef = SEQ(name='noticeRef', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'NoticeReference')), opt=True)
    _UserNotice_explicitText = CHOICE(name='explicitText', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'DisplayText')), opt=True)
    UserNotice._cont = ASN1Dict([
        ('noticeRef', _UserNotice_noticeRef),
        ('explicitText', _UserNotice_explicitText),
        ])
    UserNotice._ext = None
    
    #-----< NoticeReference >-----#
    NoticeReference = SEQ(name='NoticeReference', mode=MODE_TYPE)
    _NoticeReference_organization = CHOICE(name='organization', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'DisplayText')))
    _NoticeReference_noticeNumbers = SEQ_OF(name='noticeNumbers', mode=MODE_TYPE)
    __NoticeReference_noticeNumbers__item_ = INT(name='_item_', mode=MODE_TYPE)
    _NoticeReference_noticeNumbers._cont = __NoticeReference_noticeNumbers__item_
    NoticeReference._cont = ASN1Dict([
        ('organization', _NoticeReference_organization),
        ('noticeNumbers', _NoticeReference_noticeNumbers),
        ])
    NoticeReference._ext = None
    
    #-----< DisplayText >-----#
    DisplayText = CHOICE(name='DisplayText', mode=MODE_TYPE)
    _DisplayText_ia5String = STR_IA5(name='ia5String', mode=MODE_TYPE)
    _DisplayText_ia5String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=200)], ev=None, er=[])
    _DisplayText_visibleString = STR_VIS(name='visibleString', mode=MODE_TYPE)
    _DisplayText_visibleString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=200)], ev=None, er=[])
    _DisplayText_bmpString = STR_BMP(name='bmpString', mode=MODE_TYPE)
    _DisplayText_bmpString._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=200)], ev=None, er=[])
    _DisplayText_utf8String = STR_UTF8(name='utf8String', mode=MODE_TYPE)
    _DisplayText_utf8String._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=200)], ev=None, er=[])
    DisplayText._cont = ASN1Dict([
        ('ia5String', _DisplayText_ia5String),
        ('visibleString', _DisplayText_visibleString),
        ('bmpString', _DisplayText_bmpString),
        ('utf8String', _DisplayText_utf8String),
        ])
    DisplayText._ext = None
    
    #-----< id-ce-policyMappings >-----#
    id_ce_policyMappings = OID(name='id-ce-policyMappings', mode=MODE_VALUE)
    id_ce_policyMappings._val = (2, 5, 29, 33)
    
    #-----< PolicyMappings >-----#
    PolicyMappings = SEQ_OF(name='PolicyMappings', mode=MODE_TYPE)
    _PolicyMappings__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __PolicyMappings__item__issuerDomainPolicy = OID(name='issuerDomainPolicy', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'CertPolicyId')))
    __PolicyMappings__item__subjectDomainPolicy = OID(name='subjectDomainPolicy', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'CertPolicyId')))
    _PolicyMappings__item_._cont = ASN1Dict([
        ('issuerDomainPolicy', __PolicyMappings__item__issuerDomainPolicy),
        ('subjectDomainPolicy', __PolicyMappings__item__subjectDomainPolicy),
        ])
    _PolicyMappings__item_._ext = None
    PolicyMappings._cont = _PolicyMappings__item_
    PolicyMappings._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< id-ce-subjectAltName >-----#
    id_ce_subjectAltName = OID(name='id-ce-subjectAltName', mode=MODE_VALUE)
    id_ce_subjectAltName._val = (2, 5, 29, 17)
    
    #-----< SubjectAltName >-----#
    SubjectAltName = SEQ_OF(name='SubjectAltName', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralNames')))
    
    #-----< GeneralNames >-----#
    GeneralNames = SEQ_OF(name='GeneralNames', mode=MODE_TYPE)
    _GeneralNames__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralName')))
    GeneralNames._cont = _GeneralNames__item_
    GeneralNames._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< GeneralName >-----#
    GeneralName = CHOICE(name='GeneralName', mode=MODE_TYPE)
    _GeneralName_otherName = SEQ(name='otherName', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'AnotherName')))
    _GeneralName_rfc822Name = STR_IA5(name='rfc822Name', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GeneralName_dNSName = STR_IA5(name='dNSName', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GeneralName_x400Address = SEQ(name='x400Address', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'ORAddress')))
    _GeneralName_directoryName = CHOICE(name='directoryName', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Name')))
    _GeneralName_ediPartyName = SEQ(name='ediPartyName', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'EDIPartyName')))
    _GeneralName_uniformResourceIdentifier = STR_IA5(name='uniformResourceIdentifier', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GeneralName_iPAddress = OCT_STR(name='iPAddress', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GeneralName_registeredID = OID(name='registeredID', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GeneralName._cont = ASN1Dict([
        ('otherName', _GeneralName_otherName),
        ('rfc822Name', _GeneralName_rfc822Name),
        ('dNSName', _GeneralName_dNSName),
        ('x400Address', _GeneralName_x400Address),
        ('directoryName', _GeneralName_directoryName),
        ('ediPartyName', _GeneralName_ediPartyName),
        ('uniformResourceIdentifier', _GeneralName_uniformResourceIdentifier),
        ('iPAddress', _GeneralName_iPAddress),
        ('registeredID', _GeneralName_registeredID),
        ])
    GeneralName._ext = None
    
    #-----< AnotherName >-----#
    AnotherName = SEQ(name='AnotherName', mode=MODE_TYPE)
    _AnotherName_type_id = OID(name='type-id', mode=MODE_TYPE)
    _AnotherName_value = ANY(name='value', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), defby='type-id')
    AnotherName._cont = ASN1Dict([
        ('type-id', _AnotherName_type_id),
        ('value', _AnotherName_value),
        ])
    AnotherName._ext = None
    
    #-----< EDIPartyName >-----#
    EDIPartyName = SEQ(name='EDIPartyName', mode=MODE_TYPE)
    _EDIPartyName_nameAssigner = CHOICE(name='nameAssigner', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'DirectoryString')), opt=True)
    _EDIPartyName_partyName = CHOICE(name='partyName', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'DirectoryString')))
    EDIPartyName._cont = ASN1Dict([
        ('nameAssigner', _EDIPartyName_nameAssigner),
        ('partyName', _EDIPartyName_partyName),
        ])
    EDIPartyName._ext = None
    
    #-----< id-ce-issuerAltName >-----#
    id_ce_issuerAltName = OID(name='id-ce-issuerAltName', mode=MODE_VALUE)
    id_ce_issuerAltName._val = (2, 5, 29, 18)
    
    #-----< IssuerAltName >-----#
    IssuerAltName = SEQ_OF(name='IssuerAltName', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralNames')))
    
    #-----< id-ce-subjectDirectoryAttributes >-----#
    id_ce_subjectDirectoryAttributes = OID(name='id-ce-subjectDirectoryAttributes', mode=MODE_VALUE)
    id_ce_subjectDirectoryAttributes._val = (2, 5, 29, 9)
    
    #-----< SubjectDirectoryAttributes >-----#
    SubjectDirectoryAttributes = SEQ_OF(name='SubjectDirectoryAttributes', mode=MODE_TYPE)
    _SubjectDirectoryAttributes__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Attribute')))
    SubjectDirectoryAttributes._cont = _SubjectDirectoryAttributes__item_
    SubjectDirectoryAttributes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< id-ce-basicConstraints >-----#
    id_ce_basicConstraints = OID(name='id-ce-basicConstraints', mode=MODE_VALUE)
    id_ce_basicConstraints._val = (2, 5, 29, 19)
    
    #-----< BasicConstraints >-----#
    BasicConstraints = SEQ(name='BasicConstraints', mode=MODE_TYPE)
    _BasicConstraints_cA = BOOL(name='cA', mode=MODE_TYPE, default=False)
    _BasicConstraints_pathLenConstraint = INT(name='pathLenConstraint', mode=MODE_TYPE, opt=True)
    _BasicConstraints_pathLenConstraint._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=None)], ev=None, er=[])
    BasicConstraints._cont = ASN1Dict([
        ('cA', _BasicConstraints_cA),
        ('pathLenConstraint', _BasicConstraints_pathLenConstraint),
        ])
    BasicConstraints._ext = None
    
    #-----< id-ce-nameConstraints >-----#
    id_ce_nameConstraints = OID(name='id-ce-nameConstraints', mode=MODE_VALUE)
    id_ce_nameConstraints._val = (2, 5, 29, 30)
    
    #-----< NameConstraints >-----#
    NameConstraints = SEQ(name='NameConstraints', mode=MODE_TYPE)
    _NameConstraints_permittedSubtrees = SEQ_OF(name='permittedSubtrees', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralSubtrees')), opt=True)
    _NameConstraints_excludedSubtrees = SEQ_OF(name='excludedSubtrees', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralSubtrees')), opt=True)
    NameConstraints._cont = ASN1Dict([
        ('permittedSubtrees', _NameConstraints_permittedSubtrees),
        ('excludedSubtrees', _NameConstraints_excludedSubtrees),
        ])
    NameConstraints._ext = None
    
    #-----< GeneralSubtrees >-----#
    GeneralSubtrees = SEQ_OF(name='GeneralSubtrees', mode=MODE_TYPE)
    _GeneralSubtrees__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralSubtree')))
    GeneralSubtrees._cont = _GeneralSubtrees__item_
    GeneralSubtrees._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< GeneralSubtree >-----#
    GeneralSubtree = SEQ(name='GeneralSubtree', mode=MODE_TYPE)
    _GeneralSubtree_base = CHOICE(name='base', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralName')))
    _GeneralSubtree_minimum = INT(name='minimum', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'BaseDistance')), default=0)
    _GeneralSubtree_maximum = INT(name='maximum', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'BaseDistance')), opt=True)
    GeneralSubtree._cont = ASN1Dict([
        ('base', _GeneralSubtree_base),
        ('minimum', _GeneralSubtree_minimum),
        ('maximum', _GeneralSubtree_maximum),
        ])
    GeneralSubtree._ext = None
    
    #-----< BaseDistance >-----#
    BaseDistance = INT(name='BaseDistance', mode=MODE_TYPE)
    BaseDistance._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=None)], ev=None, er=[])
    
    #-----< id-ce-policyConstraints >-----#
    id_ce_policyConstraints = OID(name='id-ce-policyConstraints', mode=MODE_VALUE)
    id_ce_policyConstraints._val = (2, 5, 29, 36)
    
    #-----< PolicyConstraints >-----#
    PolicyConstraints = SEQ(name='PolicyConstraints', mode=MODE_TYPE)
    _PolicyConstraints_requireExplicitPolicy = INT(name='requireExplicitPolicy', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'SkipCerts')), opt=True)
    _PolicyConstraints_inhibitPolicyMapping = INT(name='inhibitPolicyMapping', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'SkipCerts')), opt=True)
    PolicyConstraints._cont = ASN1Dict([
        ('requireExplicitPolicy', _PolicyConstraints_requireExplicitPolicy),
        ('inhibitPolicyMapping', _PolicyConstraints_inhibitPolicyMapping),
        ])
    PolicyConstraints._ext = None
    
    #-----< SkipCerts >-----#
    SkipCerts = INT(name='SkipCerts', mode=MODE_TYPE)
    SkipCerts._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=None)], ev=None, er=[])
    
    #-----< id-ce-cRLDistributionPoints >-----#
    id_ce_cRLDistributionPoints = OID(name='id-ce-cRLDistributionPoints', mode=MODE_VALUE)
    id_ce_cRLDistributionPoints._val = (2, 5, 29, 31)
    
    #-----< CRLDistributionPoints >-----#
    CRLDistributionPoints = SEQ_OF(name='CRLDistributionPoints', mode=MODE_TYPE)
    _CRLDistributionPoints__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'DistributionPoint')))
    CRLDistributionPoints._cont = _CRLDistributionPoints__item_
    CRLDistributionPoints._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< DistributionPoint >-----#
    DistributionPoint = SEQ(name='DistributionPoint', mode=MODE_TYPE)
    _DistributionPoint_distributionPoint = CHOICE(name='distributionPoint', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'DistributionPointName')), opt=True)
    _DistributionPoint_reasons = BIT_STR(name='reasons', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'ReasonFlags')), opt=True)
    _DistributionPoint_cRLIssuer = SEQ_OF(name='cRLIssuer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralNames')), opt=True)
    DistributionPoint._cont = ASN1Dict([
        ('distributionPoint', _DistributionPoint_distributionPoint),
        ('reasons', _DistributionPoint_reasons),
        ('cRLIssuer', _DistributionPoint_cRLIssuer),
        ])
    DistributionPoint._ext = None
    
    #-----< DistributionPointName >-----#
    DistributionPointName = CHOICE(name='DistributionPointName', mode=MODE_TYPE)
    _DistributionPointName_fullName = SEQ_OF(name='fullName', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralNames')))
    _DistributionPointName_nameRelativeToCRLIssuer = SET_OF(name='nameRelativeToCRLIssuer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'RelativeDistinguishedName')))
    DistributionPointName._cont = ASN1Dict([
        ('fullName', _DistributionPointName_fullName),
        ('nameRelativeToCRLIssuer', _DistributionPointName_nameRelativeToCRLIssuer),
        ])
    DistributionPointName._ext = None
    
    #-----< ReasonFlags >-----#
    ReasonFlags = BIT_STR(name='ReasonFlags', mode=MODE_TYPE)
    ReasonFlags._cont = ASN1Dict([('unused', 0), ('keyCompromise', 1), ('cACompromise', 2), ('affiliationChanged', 3), ('superseded', 4), ('cessationOfOperation', 5), ('certificateHold', 6), ('privilegeWithdrawn', 7), ('aACompromise', 8)])
    
    #-----< id-ce-extKeyUsage >-----#
    id_ce_extKeyUsage = OID(name='id-ce-extKeyUsage', mode=MODE_VALUE)
    id_ce_extKeyUsage._val = (2, 5, 29, 37)
    
    #-----< ExtKeyUsageSyntax >-----#
    ExtKeyUsageSyntax = SEQ_OF(name='ExtKeyUsageSyntax', mode=MODE_TYPE)
    _ExtKeyUsageSyntax__item_ = OID(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'KeyPurposeId')))
    ExtKeyUsageSyntax._cont = _ExtKeyUsageSyntax__item_
    ExtKeyUsageSyntax._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< KeyPurposeId >-----#
    KeyPurposeId = OID(name='KeyPurposeId', mode=MODE_TYPE)
    
    #-----< anyExtendedKeyUsage >-----#
    anyExtendedKeyUsage = OID(name='anyExtendedKeyUsage', mode=MODE_VALUE)
    anyExtendedKeyUsage._val = (2, 5, 29, 37, 0)
    
    #-----< id-kp-serverAuth >-----#
    id_kp_serverAuth = OID(name='id-kp-serverAuth', mode=MODE_VALUE)
    id_kp_serverAuth._val = (1, 3, 6, 1, 5, 5, 7, 3, 1)
    
    #-----< id-kp-clientAuth >-----#
    id_kp_clientAuth = OID(name='id-kp-clientAuth', mode=MODE_VALUE)
    id_kp_clientAuth._val = (1, 3, 6, 1, 5, 5, 7, 3, 2)
    
    #-----< id-kp-codeSigning >-----#
    id_kp_codeSigning = OID(name='id-kp-codeSigning', mode=MODE_VALUE)
    id_kp_codeSigning._val = (1, 3, 6, 1, 5, 5, 7, 3, 3)
    
    #-----< id-kp-emailProtection >-----#
    id_kp_emailProtection = OID(name='id-kp-emailProtection', mode=MODE_VALUE)
    id_kp_emailProtection._val = (1, 3, 6, 1, 5, 5, 7, 3, 4)
    
    #-----< id-kp-timeStamping >-----#
    id_kp_timeStamping = OID(name='id-kp-timeStamping', mode=MODE_VALUE)
    id_kp_timeStamping._val = (1, 3, 6, 1, 5, 5, 7, 3, 8)
    
    #-----< id-kp-OCSPSigning >-----#
    id_kp_OCSPSigning = OID(name='id-kp-OCSPSigning', mode=MODE_VALUE)
    id_kp_OCSPSigning._val = (1, 3, 6, 1, 5, 5, 7, 3, 9)
    
    #-----< id-ce-inhibitAnyPolicy >-----#
    id_ce_inhibitAnyPolicy = OID(name='id-ce-inhibitAnyPolicy', mode=MODE_VALUE)
    id_ce_inhibitAnyPolicy._val = (2, 5, 29, 54)
    
    #-----< InhibitAnyPolicy >-----#
    InhibitAnyPolicy = INT(name='InhibitAnyPolicy', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SkipCerts')))
    
    #-----< id-ce-freshestCRL >-----#
    id_ce_freshestCRL = OID(name='id-ce-freshestCRL', mode=MODE_VALUE)
    id_ce_freshestCRL._val = (2, 5, 29, 46)
    
    #-----< FreshestCRL >-----#
    FreshestCRL = SEQ_OF(name='FreshestCRL', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'CRLDistributionPoints')))
    
    #-----< id-pe-authorityInfoAccess >-----#
    id_pe_authorityInfoAccess = OID(name='id-pe-authorityInfoAccess', mode=MODE_VALUE)
    id_pe_authorityInfoAccess._val = (1, 3, 6, 1, 5, 5, 7, 1, 1)
    
    #-----< AuthorityInfoAccessSyntax >-----#
    AuthorityInfoAccessSyntax = SEQ_OF(name='AuthorityInfoAccessSyntax', mode=MODE_TYPE)
    _AuthorityInfoAccessSyntax__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'AccessDescription')))
    AuthorityInfoAccessSyntax._cont = _AuthorityInfoAccessSyntax__item_
    AuthorityInfoAccessSyntax._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< AccessDescription >-----#
    AccessDescription = SEQ(name='AccessDescription', mode=MODE_TYPE)
    _AccessDescription_accessMethod = OID(name='accessMethod', mode=MODE_TYPE)
    _AccessDescription_accessLocation = CHOICE(name='accessLocation', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralName')))
    AccessDescription._cont = ASN1Dict([
        ('accessMethod', _AccessDescription_accessMethod),
        ('accessLocation', _AccessDescription_accessLocation),
        ])
    AccessDescription._ext = None
    
    #-----< id-pe-subjectInfoAccess >-----#
    id_pe_subjectInfoAccess = OID(name='id-pe-subjectInfoAccess', mode=MODE_VALUE)
    id_pe_subjectInfoAccess._val = (1, 3, 6, 1, 5, 5, 7, 1, 11)
    
    #-----< SubjectInfoAccessSyntax >-----#
    SubjectInfoAccessSyntax = SEQ_OF(name='SubjectInfoAccessSyntax', mode=MODE_TYPE)
    _SubjectInfoAccessSyntax__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'AccessDescription')))
    SubjectInfoAccessSyntax._cont = _SubjectInfoAccessSyntax__item_
    SubjectInfoAccessSyntax._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< id-ce-cRLNumber >-----#
    id_ce_cRLNumber = OID(name='id-ce-cRLNumber', mode=MODE_VALUE)
    id_ce_cRLNumber._val = (2, 5, 29, 20)
    
    #-----< CRLNumber >-----#
    CRLNumber = INT(name='CRLNumber', mode=MODE_TYPE)
    CRLNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=None)], ev=None, er=[])
    
    #-----< id-ce-issuingDistributionPoint >-----#
    id_ce_issuingDistributionPoint = OID(name='id-ce-issuingDistributionPoint', mode=MODE_VALUE)
    id_ce_issuingDistributionPoint._val = (2, 5, 29, 28)
    
    #-----< IssuingDistributionPoint >-----#
    IssuingDistributionPoint = SEQ(name='IssuingDistributionPoint', mode=MODE_TYPE)
    _IssuingDistributionPoint_distributionPoint = CHOICE(name='distributionPoint', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'DistributionPointName')), opt=True)
    _IssuingDistributionPoint_onlyContainsUserCerts = BOOL(name='onlyContainsUserCerts', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _IssuingDistributionPoint_onlyContainsCACerts = BOOL(name='onlyContainsCACerts', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _IssuingDistributionPoint_onlySomeReasons = BIT_STR(name='onlySomeReasons', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'ReasonFlags')), opt=True)
    _IssuingDistributionPoint_indirectCRL = BOOL(name='indirectCRL', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    _IssuingDistributionPoint_onlyContainsAttributeCerts = BOOL(name='onlyContainsAttributeCerts', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=False)
    IssuingDistributionPoint._cont = ASN1Dict([
        ('distributionPoint', _IssuingDistributionPoint_distributionPoint),
        ('onlyContainsUserCerts', _IssuingDistributionPoint_onlyContainsUserCerts),
        ('onlyContainsCACerts', _IssuingDistributionPoint_onlyContainsCACerts),
        ('onlySomeReasons', _IssuingDistributionPoint_onlySomeReasons),
        ('indirectCRL', _IssuingDistributionPoint_indirectCRL),
        ('onlyContainsAttributeCerts', _IssuingDistributionPoint_onlyContainsAttributeCerts),
        ])
    IssuingDistributionPoint._ext = None
    
    #-----< id-ce-deltaCRLIndicator >-----#
    id_ce_deltaCRLIndicator = OID(name='id-ce-deltaCRLIndicator', mode=MODE_VALUE)
    id_ce_deltaCRLIndicator._val = (2, 5, 29, 27)
    
    #-----< BaseCRLNumber >-----#
    BaseCRLNumber = INT(name='BaseCRLNumber', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'CRLNumber')))
    
    #-----< id-ce-cRLReasons >-----#
    id_ce_cRLReasons = OID(name='id-ce-cRLReasons', mode=MODE_VALUE)
    id_ce_cRLReasons._val = (2, 5, 29, 21)
    
    #-----< CRLReason >-----#
    CRLReason = ENUM(name='CRLReason', mode=MODE_TYPE)
    CRLReason._cont = ASN1Dict([('unspecified', 0), ('keyCompromise', 1), ('cACompromise', 2), ('affiliationChanged', 3), ('superseded', 4), ('cessationOfOperation', 5), ('certificateHold', 6), ('removeFromCRL', 8), ('privilegeWithdrawn', 9), ('aACompromise', 10)])
    CRLReason._ext = None
    
    #-----< id-ce-certificateIssuer >-----#
    id_ce_certificateIssuer = OID(name='id-ce-certificateIssuer', mode=MODE_VALUE)
    id_ce_certificateIssuer._val = (2, 5, 29, 29)
    
    #-----< CertificateIssuer >-----#
    CertificateIssuer = SEQ_OF(name='CertificateIssuer', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'GeneralNames')))
    
    #-----< id-ce-holdInstructionCode >-----#
    id_ce_holdInstructionCode = OID(name='id-ce-holdInstructionCode', mode=MODE_VALUE)
    id_ce_holdInstructionCode._val = (2, 5, 29, 23)
    
    #-----< HoldInstructionCode >-----#
    HoldInstructionCode = OID(name='HoldInstructionCode', mode=MODE_TYPE)
    
    #-----< holdInstruction >-----#
    holdInstruction = OID(name='holdInstruction', mode=MODE_VALUE)
    holdInstruction._val = (2, 2, 840, 10040, 2)
    
    #-----< id-holdinstruction-none >-----#
    id_holdinstruction_none = OID(name='id-holdinstruction-none', mode=MODE_VALUE)
    id_holdinstruction_none._val = (2, 2, 840, 10040, 2, 1)
    
    #-----< id-holdinstruction-callissuer >-----#
    id_holdinstruction_callissuer = OID(name='id-holdinstruction-callissuer', mode=MODE_VALUE)
    id_holdinstruction_callissuer._val = (2, 2, 840, 10040, 2, 2)
    
    #-----< id-holdinstruction-reject >-----#
    id_holdinstruction_reject = OID(name='id-holdinstruction-reject', mode=MODE_VALUE)
    id_holdinstruction_reject._val = (2, 2, 840, 10040, 2, 3)
    
    #-----< id-ce-invalidityDate >-----#
    id_ce_invalidityDate = OID(name='id-ce-invalidityDate', mode=MODE_VALUE)
    id_ce_invalidityDate._val = (2, 5, 29, 24)
    
    #-----< InvalidityDate >-----#
    InvalidityDate = TIME_GEN(name='InvalidityDate', mode=MODE_TYPE)
    
    _all_ = [
        id_ce,
        id_ce_authorityKeyIdentifier,
        _AuthorityKeyIdentifier_keyIdentifier,
        _AuthorityKeyIdentifier_authorityCertIssuer,
        _AuthorityKeyIdentifier_authorityCertSerialNumber,
        AuthorityKeyIdentifier,
        KeyIdentifier,
        id_ce_subjectKeyIdentifier,
        SubjectKeyIdentifier,
        id_ce_keyUsage,
        KeyUsage,
        id_ce_privateKeyUsagePeriod,
        _PrivateKeyUsagePeriod_notBefore,
        _PrivateKeyUsagePeriod_notAfter,
        PrivateKeyUsagePeriod,
        id_ce_certificatePolicies,
        anyPolicy,
        _CertificatePolicies__item_,
        CertificatePolicies,
        _PolicyInformation_policyIdentifier,
        __PolicyInformation_policyQualifiers__item_,
        _PolicyInformation_policyQualifiers,
        PolicyInformation,
        CertPolicyId,
        _PolicyQualifierInfo_policyQualifierId,
        _PolicyQualifierInfo_qualifier,
        PolicyQualifierInfo,
        PolicyQualifierId,
        CPSuri,
        _UserNotice_noticeRef,
        _UserNotice_explicitText,
        UserNotice,
        _NoticeReference_organization,
        __NoticeReference_noticeNumbers__item_,
        _NoticeReference_noticeNumbers,
        NoticeReference,
        _DisplayText_ia5String,
        _DisplayText_visibleString,
        _DisplayText_bmpString,
        _DisplayText_utf8String,
        DisplayText,
        id_ce_policyMappings,
        __PolicyMappings__item__issuerDomainPolicy,
        __PolicyMappings__item__subjectDomainPolicy,
        _PolicyMappings__item_,
        PolicyMappings,
        id_ce_subjectAltName,
        SubjectAltName,
        _GeneralNames__item_,
        GeneralNames,
        _GeneralName_otherName,
        _GeneralName_rfc822Name,
        _GeneralName_dNSName,
        _GeneralName_x400Address,
        _GeneralName_directoryName,
        _GeneralName_ediPartyName,
        _GeneralName_uniformResourceIdentifier,
        _GeneralName_iPAddress,
        _GeneralName_registeredID,
        GeneralName,
        _AnotherName_type_id,
        _AnotherName_value,
        AnotherName,
        _EDIPartyName_nameAssigner,
        _EDIPartyName_partyName,
        EDIPartyName,
        id_ce_issuerAltName,
        IssuerAltName,
        id_ce_subjectDirectoryAttributes,
        _SubjectDirectoryAttributes__item_,
        SubjectDirectoryAttributes,
        id_ce_basicConstraints,
        _BasicConstraints_cA,
        _BasicConstraints_pathLenConstraint,
        BasicConstraints,
        id_ce_nameConstraints,
        _NameConstraints_permittedSubtrees,
        _NameConstraints_excludedSubtrees,
        NameConstraints,
        _GeneralSubtrees__item_,
        GeneralSubtrees,
        _GeneralSubtree_base,
        _GeneralSubtree_minimum,
        _GeneralSubtree_maximum,
        GeneralSubtree,
        BaseDistance,
        id_ce_policyConstraints,
        _PolicyConstraints_requireExplicitPolicy,
        _PolicyConstraints_inhibitPolicyMapping,
        PolicyConstraints,
        SkipCerts,
        id_ce_cRLDistributionPoints,
        _CRLDistributionPoints__item_,
        CRLDistributionPoints,
        _DistributionPoint_distributionPoint,
        _DistributionPoint_reasons,
        _DistributionPoint_cRLIssuer,
        DistributionPoint,
        _DistributionPointName_fullName,
        _DistributionPointName_nameRelativeToCRLIssuer,
        DistributionPointName,
        ReasonFlags,
        id_ce_extKeyUsage,
        _ExtKeyUsageSyntax__item_,
        ExtKeyUsageSyntax,
        KeyPurposeId,
        anyExtendedKeyUsage,
        id_kp_serverAuth,
        id_kp_clientAuth,
        id_kp_codeSigning,
        id_kp_emailProtection,
        id_kp_timeStamping,
        id_kp_OCSPSigning,
        id_ce_inhibitAnyPolicy,
        InhibitAnyPolicy,
        id_ce_freshestCRL,
        FreshestCRL,
        id_pe_authorityInfoAccess,
        _AuthorityInfoAccessSyntax__item_,
        AuthorityInfoAccessSyntax,
        _AccessDescription_accessMethod,
        _AccessDescription_accessLocation,
        AccessDescription,
        id_pe_subjectInfoAccess,
        _SubjectInfoAccessSyntax__item_,
        SubjectInfoAccessSyntax,
        id_ce_cRLNumber,
        CRLNumber,
        id_ce_issuingDistributionPoint,
        _IssuingDistributionPoint_distributionPoint,
        _IssuingDistributionPoint_onlyContainsUserCerts,
        _IssuingDistributionPoint_onlyContainsCACerts,
        _IssuingDistributionPoint_onlySomeReasons,
        _IssuingDistributionPoint_indirectCRL,
        _IssuingDistributionPoint_onlyContainsAttributeCerts,
        IssuingDistributionPoint,
        id_ce_deltaCRLIndicator,
        BaseCRLNumber,
        id_ce_cRLReasons,
        CRLReason,
        id_ce_certificateIssuer,
        CertificateIssuer,
        id_ce_holdInstructionCode,
        HoldInstructionCode,
        holdInstruction,
        id_holdinstruction_none,
        id_holdinstruction_callissuer,
        id_holdinstruction_reject,
        id_ce_invalidityDate,
        InvalidityDate,
    ]

class RSPDefinitions:

    _name_  = 'RSPDefinitions'
    _oid_   = [2, 23, 146, 1, 1, 2]
    
    _obj_ = [
        'id-rsp',
        'Octet8',
        'Octet4',
        'Octet16',
        'OctetTo16',
        'Octet32',
        'Octet1',
        'Octet2',
        'VersionType',
        'Iccid',
        'RemoteOpId',
        'TransactionId',
        'GetEuiccInfo1Request',
        'EUICCInfo1',
        'GetEuiccInfo2Request',
        'EUICCInfo2',
        'RspCapability',
        'CertificationDataObject',
        'CertificateInfo',
        'DeviceInfo',
        'DeviceCapabilities',
        'DeviceAdditionalFeatureSupport',
        'CatSupportedClasses',
        'EuiccFormFactorType',
        'ProfileInfoListRequest',
        'ProfileInfoListResponse',
        'ProfileInfo',
        'PprIds',
        'OperatorId',
        'ProfileInfoListError',
        'StoreMetadataRequest',
        'NotificationEvent',
        'NotificationConfigurationInformation',
        'OPENTYPE',
        'VendorSpecificExtension',
        'IconType',
        'ProfileState',
        'ProfileClass',
        'UpdateMetadataRequest',
        'PrepareDownloadRequest',
        'SmdpSigned2',
        'PrepareDownloadResponse',
        'PrepareDownloadResponseOk',
        'EUICCSigned2',
        'PrepareDownloadResponseError',
        'DownloadErrorCode',
        'AuthenticateServerRequest',
        'ServerSigned1',
        'CtxParams1',
        'CtxParamsForCommonAuthentication',
        'AuthenticateServerResponse',
        'AuthenticateResponseOk',
        'EuiccSigned1',
        'AuthenticateResponseError',
        'AuthenticateErrorCode',
        'CancelSessionRequest',
        'CancelSessionReason',
        'CancelSessionResponse',
        'CancelSessionResponseOk',
        'EuiccCancelSessionSigned',
        'BoundProfilePackage',
        'GetEuiccChallengeRequest',
        'GetEuiccChallengeResponse',
        'ProfileInstallationResult',
        'ProfileInstallationResultData',
        'EuiccSignPIR',
        'SuccessResult',
        'ErrorResult',
        'BppCommandId',
        'ErrorReason',
        'ListNotificationRequest',
        'ListNotificationResponse',
        'NotificationMetadata',
        'SetNicknameRequest',
        'SetNicknameResponse',
        'id-rsp-cert-objects',
        'id-rspExt',
        'id-rspRole',
        'id-rspRole-ci',
        'id-rspRole-euicc',
        'id-rspRole-eum',
        'id-rspRole-dp-tls',
        'id-rspRole-dp-auth',
        'id-rspRole-dp-pb',
        'id-rspRole-ds-tls',
        'id-rspRole-ds-auth',
        'InitialiseSecureChannelRequest',
        'ControlRefTemplate',
        'ConfigureISDPRequest',
        'DpProprietaryData',
        'ReplaceSessionKeysRequest',
        'RetrieveNotificationsListRequest',
        'RetrieveNotificationsListResponse',
        'PendingNotification',
        'OtherSignedNotification',
        'NotificationSentRequest',
        'NotificationSentResponse',
        'EnableProfileRequest',
        'EnableProfileResponse',
        'DisableProfileRequest',
        'DisableProfileResponse',
        'DeleteProfileRequest',
        'DeleteProfileResponse',
        'EuiccMemoryResetRequest',
        'EuiccMemoryResetResponse',
        'GetEuiccDataRequest',
        'GetEuiccDataResponse',
        'GetRatRequest',
        'GetRatResponse',
        'RulesAuthorisationTable',
        'ProfilePolicyAuthorisationRule',
        'SegmentedCrlList',
        'LoadCRLRequest',
        'LoadCRLResponse',
        'LoadCRLResponseOk',
        'LoadCRLResponseError',
        'id-rsp-expDate',
        'ExpirationDate',
        'id-rsp-totalPartialCrlNumber',
        'TotalPartialCrlNumber',
        'id-rsp-partialCrlNumber',
        'PartialCrlNumber',
        'RemoteProfileProvisioningRequest',
        'RemoteProfileProvisioningResponse',
        'InitiateAuthenticationRequest',
        'InitiateAuthenticationResponse',
        'InitiateAuthenticationOkEs9',
        'AuthenticateClientRequest',
        'AuthenticateClientResponseEs9',
        'AuthenticateClientOk',
        'GetBoundProfilePackageRequest',
        'GetBoundProfilePackageResponse',
        'GetBoundProfilePackageOk',
        'HandleNotification',
        'CancelSessionRequestEs9',
        'CancelSessionResponseEs9',
        'CancelSessionOk',
        'EuiccConfiguredAddressesRequest',
        'EuiccConfiguredAddressesResponse',
        'ISDRProprietaryApplicationTemplate',
        'LpaeActivationRequest',
        'LpaeActivationResponse',
        'SetDefaultDpAddressRequest',
        'SetDefaultDpAddressResponse',
        'AuthenticateClientResponseEs11',
        'AuthenticateClientOkEs11',
        'EventEntries',
        ]
    _type_ = [
        'Octet8',
        'Octet4',
        'Octet16',
        'OctetTo16',
        'Octet32',
        'Octet1',
        'Octet2',
        'VersionType',
        'Iccid',
        'RemoteOpId',
        'TransactionId',
        'GetEuiccInfo1Request',
        'EUICCInfo1',
        'GetEuiccInfo2Request',
        'EUICCInfo2',
        'RspCapability',
        'CertificationDataObject',
        'CertificateInfo',
        'DeviceInfo',
        'DeviceCapabilities',
        'DeviceAdditionalFeatureSupport',
        'CatSupportedClasses',
        'EuiccFormFactorType',
        'ProfileInfoListRequest',
        'ProfileInfoListResponse',
        'ProfileInfo',
        'PprIds',
        'OperatorId',
        'ProfileInfoListError',
        'StoreMetadataRequest',
        'NotificationEvent',
        'NotificationConfigurationInformation',
        'OPENTYPE',
        'VendorSpecificExtension',
        'IconType',
        'ProfileState',
        'ProfileClass',
        'UpdateMetadataRequest',
        'PrepareDownloadRequest',
        'SmdpSigned2',
        'PrepareDownloadResponse',
        'PrepareDownloadResponseOk',
        'EUICCSigned2',
        'PrepareDownloadResponseError',
        'DownloadErrorCode',
        'AuthenticateServerRequest',
        'ServerSigned1',
        'CtxParams1',
        'CtxParamsForCommonAuthentication',
        'AuthenticateServerResponse',
        'AuthenticateResponseOk',
        'EuiccSigned1',
        'AuthenticateResponseError',
        'AuthenticateErrorCode',
        'CancelSessionRequest',
        'CancelSessionReason',
        'CancelSessionResponse',
        'CancelSessionResponseOk',
        'EuiccCancelSessionSigned',
        'BoundProfilePackage',
        'GetEuiccChallengeRequest',
        'GetEuiccChallengeResponse',
        'ProfileInstallationResult',
        'ProfileInstallationResultData',
        'EuiccSignPIR',
        'SuccessResult',
        'ErrorResult',
        'BppCommandId',
        'ErrorReason',
        'ListNotificationRequest',
        'ListNotificationResponse',
        'NotificationMetadata',
        'SetNicknameRequest',
        'SetNicknameResponse',
        'InitialiseSecureChannelRequest',
        'ControlRefTemplate',
        'ConfigureISDPRequest',
        'DpProprietaryData',
        'ReplaceSessionKeysRequest',
        'RetrieveNotificationsListRequest',
        'RetrieveNotificationsListResponse',
        'PendingNotification',
        'OtherSignedNotification',
        'NotificationSentRequest',
        'NotificationSentResponse',
        'EnableProfileRequest',
        'EnableProfileResponse',
        'DisableProfileRequest',
        'DisableProfileResponse',
        'DeleteProfileRequest',
        'DeleteProfileResponse',
        'EuiccMemoryResetRequest',
        'EuiccMemoryResetResponse',
        'GetEuiccDataRequest',
        'GetEuiccDataResponse',
        'GetRatRequest',
        'GetRatResponse',
        'RulesAuthorisationTable',
        'ProfilePolicyAuthorisationRule',
        'SegmentedCrlList',
        'LoadCRLRequest',
        'LoadCRLResponse',
        'LoadCRLResponseOk',
        'LoadCRLResponseError',
        'ExpirationDate',
        'TotalPartialCrlNumber',
        'PartialCrlNumber',
        'RemoteProfileProvisioningRequest',
        'RemoteProfileProvisioningResponse',
        'InitiateAuthenticationRequest',
        'InitiateAuthenticationResponse',
        'InitiateAuthenticationOkEs9',
        'AuthenticateClientRequest',
        'AuthenticateClientResponseEs9',
        'AuthenticateClientOk',
        'GetBoundProfilePackageRequest',
        'GetBoundProfilePackageResponse',
        'GetBoundProfilePackageOk',
        'HandleNotification',
        'CancelSessionRequestEs9',
        'CancelSessionResponseEs9',
        'CancelSessionOk',
        'EuiccConfiguredAddressesRequest',
        'EuiccConfiguredAddressesResponse',
        'ISDRProprietaryApplicationTemplate',
        'LpaeActivationRequest',
        'LpaeActivationResponse',
        'SetDefaultDpAddressRequest',
        'SetDefaultDpAddressResponse',
        'AuthenticateClientResponseEs11',
        'AuthenticateClientOkEs11',
        'EventEntries',
        ]
    _set_ = [
        ]
    _val_ = [
        'id-rsp',
        'id-rsp-cert-objects',
        'id-rspExt',
        'id-rspRole',
        'id-rspRole-ci',
        'id-rspRole-euicc',
        'id-rspRole-eum',
        'id-rspRole-dp-tls',
        'id-rspRole-dp-auth',
        'id-rspRole-dp-pb',
        'id-rspRole-ds-tls',
        'id-rspRole-ds-auth',
        'id-rsp-expDate',
        'id-rsp-totalPartialCrlNumber',
        'id-rsp-partialCrlNumber',
        ]
    _class_ = [
        'OPENTYPE',
        ]
    _param_ = [
        ]
    
    #-----< id-rsp >-----#
    id_rsp = OID(name='id-rsp', mode=MODE_VALUE)
    id_rsp._val = (2, 23, 146, 1)
    
    #-----< Octet8 >-----#
    Octet8 = OCT_STR(name='Octet8', mode=MODE_TYPE)
    Octet8._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< Octet4 >-----#
    Octet4 = OCT_STR(name='Octet4', mode=MODE_TYPE)
    Octet4._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< Octet16 >-----#
    Octet16 = OCT_STR(name='Octet16', mode=MODE_TYPE)
    Octet16._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    
    #-----< OctetTo16 >-----#
    OctetTo16 = OCT_STR(name='OctetTo16', mode=MODE_TYPE)
    OctetTo16._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< Octet32 >-----#
    Octet32 = OCT_STR(name='Octet32', mode=MODE_TYPE)
    Octet32._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    
    #-----< Octet1 >-----#
    Octet1 = OCT_STR(name='Octet1', mode=MODE_TYPE)
    Octet1._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    
    #-----< Octet2 >-----#
    Octet2 = OCT_STR(name='Octet2', mode=MODE_TYPE)
    Octet2._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< VersionType >-----#
    VersionType = OCT_STR(name='VersionType', mode=MODE_TYPE)
    VersionType._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    
    #-----< Iccid >-----#
    Iccid = OCT_STR(name='Iccid', mode=MODE_TYPE, tag=(26, TAG_APPLICATION, TAG_IMPLICIT))
    Iccid._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    
    #-----< RemoteOpId >-----#
    RemoteOpId = INT(name='RemoteOpId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    RemoteOpId._cont = ASN1Dict([('installBoundProfilePackage', 1)])
    
    #-----< TransactionId >-----#
    TransactionId = OCT_STR(name='TransactionId', mode=MODE_TYPE)
    TransactionId._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< GetEuiccInfo1Request >-----#
    GetEuiccInfo1Request = SEQ(name='GetEuiccInfo1Request', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GetEuiccInfo1Request._cont = ASN1Dict([
        ])
    GetEuiccInfo1Request._ext = []
    
    #-----< EUICCInfo1 >-----#
    EUICCInfo1 = SEQ(name='EUICCInfo1', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EUICCInfo1_svn = OCT_STR(name='svn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo1_euiccCiPKIdListForVerification = SEQ_OF(name='euiccCiPKIdListForVerification', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUICCInfo1_euiccCiPKIdListForVerification__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')))
    _EUICCInfo1_euiccCiPKIdListForVerification._cont = __EUICCInfo1_euiccCiPKIdListForVerification__item_
    _EUICCInfo1_euiccCiPKIdListForSigning = SEQ_OF(name='euiccCiPKIdListForSigning', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUICCInfo1_euiccCiPKIdListForSigning__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')))
    _EUICCInfo1_euiccCiPKIdListForSigning._cont = __EUICCInfo1_euiccCiPKIdListForSigning__item_
    EUICCInfo1._cont = ASN1Dict([
        ('svn', _EUICCInfo1_svn),
        ('euiccCiPKIdListForVerification', _EUICCInfo1_euiccCiPKIdListForVerification),
        ('euiccCiPKIdListForSigning', _EUICCInfo1_euiccCiPKIdListForSigning),
        ])
    EUICCInfo1._ext = []
    
    #-----< GetEuiccInfo2Request >-----#
    GetEuiccInfo2Request = SEQ(name='GetEuiccInfo2Request', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GetEuiccInfo2Request._cont = ASN1Dict([
        ])
    GetEuiccInfo2Request._ext = []
    
    #-----< EUICCInfo2 >-----#
    EUICCInfo2 = SEQ(name='EUICCInfo2', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EUICCInfo2_profileVersion = OCT_STR(name='profileVersion', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo2_svn = OCT_STR(name='svn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo2_euiccFirmwareVer = OCT_STR(name='euiccFirmwareVer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo2_extCardResource = OCT_STR(name='extCardResource', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EUICCInfo2_uiccCapability = BIT_STR(name='uiccCapability', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UICCCapability')))
    _EUICCInfo2_ts102241Version = OCT_STR(name='ts102241Version', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _EUICCInfo2_globalplatformVersion = OCT_STR(name='globalplatformVersion', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _EUICCInfo2_rspCapability = BIT_STR(name='rspCapability', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'RspCapability')))
    _EUICCInfo2_euiccCiPKIdListForVerification = SEQ_OF(name='euiccCiPKIdListForVerification', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUICCInfo2_euiccCiPKIdListForVerification__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')))
    _EUICCInfo2_euiccCiPKIdListForVerification._cont = __EUICCInfo2_euiccCiPKIdListForVerification__item_
    _EUICCInfo2_euiccCiPKIdListForSigning = SEQ_OF(name='euiccCiPKIdListForSigning', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUICCInfo2_euiccCiPKIdListForSigning__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')))
    _EUICCInfo2_euiccCiPKIdListForSigning._cont = __EUICCInfo2_euiccCiPKIdListForSigning__item_
    _EUICCInfo2_euiccCategory = INT(name='euiccCategory', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EUICCInfo2_euiccCategory._cont = ASN1Dict([('other', 0), ('basicEuicc', 1), ('mediumEuicc', 2), ('contactlessEuicc', 3)])
    _EUICCInfo2_forbiddenProfilePolicyRules = BIT_STR(name='forbiddenProfilePolicyRules', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PprIds')), opt=True)
    _EUICCInfo2_ppVersion = OCT_STR(name='ppVersion', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo2_sasAcreditationNumber = STR_UTF8(name='sasAcreditationNumber', mode=MODE_TYPE)
    _EUICCInfo2_sasAcreditationNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64)], ev=None, er=[])
    _EUICCInfo2_certificationDataObject = SEQ(name='certificationDataObject', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CertificationDataObject')), opt=True)
    _EUICCInfo2_treProperties = BIT_STR(name='treProperties', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EUICCInfo2_treProperties._cont = ASN1Dict([('isDiscrete', 0), ('isIntegrated', 1), ('usesRemoteMemory', 2)])
    _EUICCInfo2_treProductReference = STR_UTF8(name='treProductReference', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EUICCInfo2_additionalEuiccProfilePackageVersions = SEQ_OF(name='additionalEuiccProfilePackageVersions', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EUICCInfo2_additionalEuiccProfilePackageVersions__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo2_additionalEuiccProfilePackageVersions._cont = __EUICCInfo2_additionalEuiccProfilePackageVersions__item_
    EUICCInfo2._cont = ASN1Dict([
        ('profileVersion', _EUICCInfo2_profileVersion),
        ('svn', _EUICCInfo2_svn),
        ('euiccFirmwareVer', _EUICCInfo2_euiccFirmwareVer),
        ('extCardResource', _EUICCInfo2_extCardResource),
        ('uiccCapability', _EUICCInfo2_uiccCapability),
        ('ts102241Version', _EUICCInfo2_ts102241Version),
        ('globalplatformVersion', _EUICCInfo2_globalplatformVersion),
        ('rspCapability', _EUICCInfo2_rspCapability),
        ('euiccCiPKIdListForVerification', _EUICCInfo2_euiccCiPKIdListForVerification),
        ('euiccCiPKIdListForSigning', _EUICCInfo2_euiccCiPKIdListForSigning),
        ('euiccCategory', _EUICCInfo2_euiccCategory),
        ('forbiddenProfilePolicyRules', _EUICCInfo2_forbiddenProfilePolicyRules),
        ('ppVersion', _EUICCInfo2_ppVersion),
        ('sasAcreditationNumber', _EUICCInfo2_sasAcreditationNumber),
        ('certificationDataObject', _EUICCInfo2_certificationDataObject),
        ('treProperties', _EUICCInfo2_treProperties),
        ('treProductReference', _EUICCInfo2_treProductReference),
        ('additionalEuiccProfilePackageVersions', _EUICCInfo2_additionalEuiccProfilePackageVersions),
        ])
    EUICCInfo2._ext = []
    
    #-----< RspCapability >-----#
    RspCapability = BIT_STR(name='RspCapability', mode=MODE_TYPE)
    RspCapability._cont = ASN1Dict([('additionalProfile', 0), ('crlSupport', 1), ('rpmSupport', 2), ('testProfileSupport', 3), ('deviceInfoExtensibilitySupport', 4), ('serviceSpecificDataSupport', 5)])
    
    #-----< CertificationDataObject >-----#
    CertificationDataObject = SEQ(name='CertificationDataObject', mode=MODE_TYPE)
    _CertificationDataObject_platformLabel = STR_UTF8(name='platformLabel', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CertificationDataObject_discoveryBaseURL = STR_UTF8(name='discoveryBaseURL', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    CertificationDataObject._cont = ASN1Dict([
        ('platformLabel', _CertificationDataObject_platformLabel),
        ('discoveryBaseURL', _CertificationDataObject_discoveryBaseURL),
        ])
    CertificationDataObject._ext = []
    
    #-----< CertificateInfo >-----#
    CertificateInfo = BIT_STR(name='CertificateInfo', mode=MODE_TYPE)
    CertificateInfo._cont = ASN1Dict([('reserved', 0), ('certSigningX509', 1), ('rfu2', 2), ('rfu3', 3), ('reserved2', 4), ('certVerificationX509', 5)])
    
    #-----< DeviceInfo >-----#
    DeviceInfo = SEQ(name='DeviceInfo', mode=MODE_TYPE)
    _DeviceInfo_tac = OCT_STR(name='tac', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet4')))
    _DeviceInfo_deviceCapabilities = SEQ(name='deviceCapabilities', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'DeviceCapabilities')))
    _DeviceInfo_imei = OCT_STR(name='imei', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet8')), opt=True)
    DeviceInfo._cont = ASN1Dict([
        ('tac', _DeviceInfo_tac),
        ('deviceCapabilities', _DeviceInfo_deviceCapabilities),
        ('imei', _DeviceInfo_imei),
        ])
    DeviceInfo._ext = []
    
    #-----< DeviceCapabilities >-----#
    DeviceCapabilities = SEQ(name='DeviceCapabilities', mode=MODE_TYPE)
    _DeviceCapabilities_gsmSupportedRelease = OCT_STR(name='gsmSupportedRelease', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_utranSupportedRelease = OCT_STR(name='utranSupportedRelease', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_cdma2000onexSupportedRelease = OCT_STR(name='cdma2000onexSupportedRelease', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_cdma2000hrpdSupportedRelease = OCT_STR(name='cdma2000hrpdSupportedRelease', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_cdma2000ehrpdSupportedRelease = OCT_STR(name='cdma2000ehrpdSupportedRelease', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_eutranEpcSupportedRelease = OCT_STR(name='eutranEpcSupportedRelease', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_contactlessSupportedRelease = OCT_STR(name='contactlessSupportedRelease', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_rspCrlSupportedVersion = OCT_STR(name='rspCrlSupportedVersion', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_nrEpcSupportedRelease = OCT_STR(name='nrEpcSupportedRelease', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_nr5gcSupportedRelease = OCT_STR(name='nr5gcSupportedRelease', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_eutran5gcSupportedRelease = OCT_STR(name='eutran5gcSupportedRelease', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_lpaSvn = OCT_STR(name='lpaSvn', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _DeviceCapabilities_catSupportedClasses = BIT_STR(name='catSupportedClasses', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CatSupportedClasses')), opt=True)
    _DeviceCapabilities_euiccFormFactorType = INT(name='euiccFormFactorType', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'EuiccFormFactorType')), opt=True)
    _DeviceCapabilities_deviceAdditionalFeatureSupport = SEQ(name='deviceAdditionalFeatureSupport', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'DeviceAdditionalFeatureSupport')), opt=True)
    DeviceCapabilities._cont = ASN1Dict([
        ('gsmSupportedRelease', _DeviceCapabilities_gsmSupportedRelease),
        ('utranSupportedRelease', _DeviceCapabilities_utranSupportedRelease),
        ('cdma2000onexSupportedRelease', _DeviceCapabilities_cdma2000onexSupportedRelease),
        ('cdma2000hrpdSupportedRelease', _DeviceCapabilities_cdma2000hrpdSupportedRelease),
        ('cdma2000ehrpdSupportedRelease', _DeviceCapabilities_cdma2000ehrpdSupportedRelease),
        ('eutranEpcSupportedRelease', _DeviceCapabilities_eutranEpcSupportedRelease),
        ('contactlessSupportedRelease', _DeviceCapabilities_contactlessSupportedRelease),
        ('rspCrlSupportedVersion', _DeviceCapabilities_rspCrlSupportedVersion),
        ('nrEpcSupportedRelease', _DeviceCapabilities_nrEpcSupportedRelease),
        ('nr5gcSupportedRelease', _DeviceCapabilities_nr5gcSupportedRelease),
        ('eutran5gcSupportedRelease', _DeviceCapabilities_eutran5gcSupportedRelease),
        ('lpaSvn', _DeviceCapabilities_lpaSvn),
        ('catSupportedClasses', _DeviceCapabilities_catSupportedClasses),
        ('euiccFormFactorType', _DeviceCapabilities_euiccFormFactorType),
        ('deviceAdditionalFeatureSupport', _DeviceCapabilities_deviceAdditionalFeatureSupport),
        ])
    DeviceCapabilities._ext = []
    
    #-----< DeviceAdditionalFeatureSupport >-----#
    DeviceAdditionalFeatureSupport = SEQ(name='DeviceAdditionalFeatureSupport', mode=MODE_TYPE)
    _DeviceAdditionalFeatureSupport_naiSupport = OCT_STR(name='naiSupport', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    DeviceAdditionalFeatureSupport._cont = ASN1Dict([
        ('naiSupport', _DeviceAdditionalFeatureSupport_naiSupport),
        ])
    DeviceAdditionalFeatureSupport._ext = []
    
    #-----< CatSupportedClasses >-----#
    CatSupportedClasses = BIT_STR(name='CatSupportedClasses', mode=MODE_TYPE)
    
    #-----< EuiccFormFactorType >-----#
    EuiccFormFactorType = INT(name='EuiccFormFactorType', mode=MODE_TYPE)
    
    #-----< ProfileInfoListRequest >-----#
    ProfileInfoListRequest = SEQ(name='ProfileInfoListRequest', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileInfoListRequest_searchCriteria = CHOICE(name='searchCriteria', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ProfileInfoListRequest_searchCriteria_isdpAid = OCT_STR(name='isdpAid', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'OctetTo16')))
    __ProfileInfoListRequest_searchCriteria_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Iccid')))
    __ProfileInfoListRequest_searchCriteria_profileClass = INT(name='profileClass', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ProfileClass')))
    _ProfileInfoListRequest_searchCriteria._cont = ASN1Dict([
        ('isdpAid', __ProfileInfoListRequest_searchCriteria_isdpAid),
        ('iccid', __ProfileInfoListRequest_searchCriteria_iccid),
        ('profileClass', __ProfileInfoListRequest_searchCriteria_profileClass),
        ])
    _ProfileInfoListRequest_searchCriteria._ext = []
    _ProfileInfoListRequest_tagList = OCT_STR(name='tagList', mode=MODE_TYPE, tag=(28, TAG_APPLICATION, TAG_IMPLICIT), opt=True)
    ProfileInfoListRequest._cont = ASN1Dict([
        ('searchCriteria', _ProfileInfoListRequest_searchCriteria),
        ('tagList', _ProfileInfoListRequest_tagList),
        ])
    ProfileInfoListRequest._ext = []
    
    #-----< ProfileInfoListResponse >-----#
    ProfileInfoListResponse = CHOICE(name='ProfileInfoListResponse', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileInfoListResponse_profileInfoListOk = SEQ_OF(name='profileInfoListOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ProfileInfoListResponse_profileInfoListOk__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'ProfileInfo')))
    _ProfileInfoListResponse_profileInfoListOk._cont = __ProfileInfoListResponse_profileInfoListOk__item_
    _ProfileInfoListResponse_profileInfoListError = INT(name='profileInfoListError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ProfileInfoListError')))
    ProfileInfoListResponse._cont = ASN1Dict([
        ('profileInfoListOk', _ProfileInfoListResponse_profileInfoListOk),
        ('profileInfoListError', _ProfileInfoListResponse_profileInfoListError),
        ])
    ProfileInfoListResponse._ext = []
    
    #-----< ProfileInfo >-----#
    ProfileInfo = SEQ(name='ProfileInfo', mode=MODE_TYPE, tag=(3, TAG_PRIVATE, TAG_IMPLICIT))
    _ProfileInfo_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Iccid')), opt=True)
    _ProfileInfo_isdpAid = OCT_STR(name='isdpAid', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'OctetTo16')), opt=True)
    _ProfileInfo_profileState = INT(name='profileState', mode=MODE_TYPE, tag=(112, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ProfileState')), opt=True)
    _ProfileInfo_profileNickname = STR_UTF8(name='profileNickname', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProfileInfo_profileNickname._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64)], ev=None, er=[])
    _ProfileInfo_serviceProviderName = STR_UTF8(name='serviceProviderName', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProfileInfo_serviceProviderName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32)], ev=None, er=[])
    _ProfileInfo_profileName = STR_UTF8(name='profileName', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProfileInfo_profileName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64)], ev=None, er=[])
    _ProfileInfo_iconType = INT(name='iconType', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'IconType')), opt=True)
    _ProfileInfo_icon = OCT_STR(name='icon', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProfileInfo_icon._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1024)], ev=None, er=[])
    _ProfileInfo_profileClass = INT(name='profileClass', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ProfileClass')), opt=True)
    _ProfileInfo_notificationConfigurationInfo = SEQ_OF(name='notificationConfigurationInfo', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ProfileInfo_notificationConfigurationInfo__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'NotificationConfigurationInformation')))
    _ProfileInfo_notificationConfigurationInfo._cont = __ProfileInfo_notificationConfigurationInfo__item_
    _ProfileInfo_profileOwner = SEQ(name='profileOwner', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'OperatorId')), opt=True)
    _ProfileInfo_dpProprietaryData = SEQ(name='dpProprietaryData', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'DpProprietaryData')), opt=True)
    _ProfileInfo_profilePolicyRules = BIT_STR(name='profilePolicyRules', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PprIds')), opt=True)
    _ProfileInfo_serviceSpecificDataStoredInEuicc = SEQ_OF(name='serviceSpecificDataStoredInEuicc', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VendorSpecificExtension')), opt=True)
    ProfileInfo._cont = ASN1Dict([
        ('iccid', _ProfileInfo_iccid),
        ('isdpAid', _ProfileInfo_isdpAid),
        ('profileState', _ProfileInfo_profileState),
        ('profileNickname', _ProfileInfo_profileNickname),
        ('serviceProviderName', _ProfileInfo_serviceProviderName),
        ('profileName', _ProfileInfo_profileName),
        ('iconType', _ProfileInfo_iconType),
        ('icon', _ProfileInfo_icon),
        ('profileClass', _ProfileInfo_profileClass),
        ('notificationConfigurationInfo', _ProfileInfo_notificationConfigurationInfo),
        ('profileOwner', _ProfileInfo_profileOwner),
        ('dpProprietaryData', _ProfileInfo_dpProprietaryData),
        ('profilePolicyRules', _ProfileInfo_profilePolicyRules),
        ('serviceSpecificDataStoredInEuicc', _ProfileInfo_serviceSpecificDataStoredInEuicc),
        ])
    ProfileInfo._ext = []
    
    #-----< PprIds >-----#
    PprIds = BIT_STR(name='PprIds', mode=MODE_TYPE)
    PprIds._cont = ASN1Dict([('pprUpdateControl', 0), ('ppr1', 1), ('ppr2', 2)])
    
    #-----< OperatorId >-----#
    OperatorId = SEQ(name='OperatorId', mode=MODE_TYPE)
    _OperatorId_mccMnc = OCT_STR(name='mccMnc', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _OperatorId_mccMnc._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _OperatorId_gid1 = OCT_STR(name='gid1', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _OperatorId_gid2 = OCT_STR(name='gid2', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    OperatorId._cont = ASN1Dict([
        ('mccMnc', _OperatorId_mccMnc),
        ('gid1', _OperatorId_gid1),
        ('gid2', _OperatorId_gid2),
        ])
    OperatorId._ext = []
    
    #-----< ProfileInfoListError >-----#
    ProfileInfoListError = INT(name='ProfileInfoListError', mode=MODE_TYPE)
    ProfileInfoListError._cont = ASN1Dict([('incorrectInputValues', 1), ('undefinedError', 127)])
    
    #-----< StoreMetadataRequest >-----#
    StoreMetadataRequest = SEQ(name='StoreMetadataRequest', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _StoreMetadataRequest_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Iccid')))
    _StoreMetadataRequest_serviceProviderName = STR_UTF8(name='serviceProviderName', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _StoreMetadataRequest_serviceProviderName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32)], ev=None, er=[])
    _StoreMetadataRequest_profileName = STR_UTF8(name='profileName', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _StoreMetadataRequest_profileName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64)], ev=None, er=[])
    _StoreMetadataRequest_iconType = INT(name='iconType', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'IconType')), opt=True)
    _StoreMetadataRequest_icon = OCT_STR(name='icon', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _StoreMetadataRequest_icon._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1024)], ev=None, er=[])
    _StoreMetadataRequest_profileClass = INT(name='profileClass', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ProfileClass')), default=2)
    _StoreMetadataRequest_notificationConfigurationInfo = SEQ_OF(name='notificationConfigurationInfo', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __StoreMetadataRequest_notificationConfigurationInfo__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'NotificationConfigurationInformation')))
    _StoreMetadataRequest_notificationConfigurationInfo._cont = __StoreMetadataRequest_notificationConfigurationInfo__item_
    _StoreMetadataRequest_profileOwner = SEQ(name='profileOwner', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'OperatorId')), opt=True)
    _StoreMetadataRequest_profilePolicyRules = BIT_STR(name='profilePolicyRules', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PprIds')), opt=True)
    _StoreMetadataRequest_serviceSpecificDataStoredInEuicc = SEQ_OF(name='serviceSpecificDataStoredInEuicc', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VendorSpecificExtension')), opt=True)
    _StoreMetadataRequest_serviceSpecificDataNotStoredInEuicc = SEQ_OF(name='serviceSpecificDataNotStoredInEuicc', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VendorSpecificExtension')), opt=True)
    StoreMetadataRequest._cont = ASN1Dict([
        ('iccid', _StoreMetadataRequest_iccid),
        ('serviceProviderName', _StoreMetadataRequest_serviceProviderName),
        ('profileName', _StoreMetadataRequest_profileName),
        ('iconType', _StoreMetadataRequest_iconType),
        ('icon', _StoreMetadataRequest_icon),
        ('profileClass', _StoreMetadataRequest_profileClass),
        ('notificationConfigurationInfo', _StoreMetadataRequest_notificationConfigurationInfo),
        ('profileOwner', _StoreMetadataRequest_profileOwner),
        ('profilePolicyRules', _StoreMetadataRequest_profilePolicyRules),
        ('serviceSpecificDataStoredInEuicc', _StoreMetadataRequest_serviceSpecificDataStoredInEuicc),
        ('serviceSpecificDataNotStoredInEuicc', _StoreMetadataRequest_serviceSpecificDataNotStoredInEuicc),
        ])
    StoreMetadataRequest._ext = []
    
    #-----< NotificationEvent >-----#
    NotificationEvent = BIT_STR(name='NotificationEvent', mode=MODE_TYPE)
    NotificationEvent._cont = ASN1Dict([('notificationInstall', 0), ('notificationEnable', 1), ('notificationDisable', 2), ('notificationDelete', 3)])
    
    #-----< NotificationConfigurationInformation >-----#
    NotificationConfigurationInformation = SEQ(name='NotificationConfigurationInformation', mode=MODE_TYPE)
    _NotificationConfigurationInformation_profileManagementOperation = BIT_STR(name='profileManagementOperation', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'NotificationEvent')))
    _NotificationConfigurationInformation_notificationAddress = STR_UTF8(name='notificationAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    NotificationConfigurationInformation._cont = ASN1Dict([
        ('profileManagementOperation', _NotificationConfigurationInformation_profileManagementOperation),
        ('notificationAddress', _NotificationConfigurationInformation_notificationAddress),
        ])
    NotificationConfigurationInformation._ext = []
    
    #-----< OPENTYPE >-----#
    OPENTYPE = CLASS(name='OPENTYPE', mode=MODE_TYPE)
    _OPENTYPE_typeId = OID(name='typeId', mode=MODE_VALUE)
    _OPENTYPE_Type = OPEN(name='Type', mode=MODE_TYPE)
    OPENTYPE._cont = ASN1Dict([
        ('typeId', _OPENTYPE_typeId),
        ('Type', _OPENTYPE_Type),
        ])
    
    #-----< VendorSpecificExtension >-----#
    VendorSpecificExtension = SEQ_OF(name='VendorSpecificExtension', mode=MODE_TYPE)
    _VendorSpecificExtension__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    __VendorSpecificExtension__item__vendorOid = OID(name='vendorOid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('RSPDefinitions', 'OPENTYPE'), ['typeId']))
    __VendorSpecificExtension__item__vendorSpecificData = OPEN(name='vendorSpecificData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefClassField(('RSPDefinitions', 'OPENTYPE'), ['Type']))
    _VendorSpecificExtension__item_._cont = ASN1Dict([
        ('vendorOid', __VendorSpecificExtension__item__vendorOid),
        ('vendorSpecificData', __VendorSpecificExtension__item__vendorSpecificData),
        ])
    _VendorSpecificExtension__item_._ext = []
    VendorSpecificExtension._cont = _VendorSpecificExtension__item_
    
    #-----< IconType >-----#
    IconType = INT(name='IconType', mode=MODE_TYPE)
    IconType._cont = ASN1Dict([('jpg', 0), ('png', 1)])
    
    #-----< ProfileState >-----#
    ProfileState = INT(name='ProfileState', mode=MODE_TYPE)
    ProfileState._cont = ASN1Dict([('disabled', 0), ('enabled', 1)])
    
    #-----< ProfileClass >-----#
    ProfileClass = INT(name='ProfileClass', mode=MODE_TYPE)
    ProfileClass._cont = ASN1Dict([('test', 0), ('provisioning', 1), ('operational', 2)])
    
    #-----< UpdateMetadataRequest >-----#
    UpdateMetadataRequest = SEQ(name='UpdateMetadataRequest', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _UpdateMetadataRequest_serviceProviderName = STR_UTF8(name='serviceProviderName', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateMetadataRequest_serviceProviderName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32)], ev=None, er=[])
    _UpdateMetadataRequest_profileName = STR_UTF8(name='profileName', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateMetadataRequest_profileName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64)], ev=None, er=[])
    _UpdateMetadataRequest_iconType = INT(name='iconType', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'IconType')), opt=True)
    _UpdateMetadataRequest_icon = OCT_STR(name='icon', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UpdateMetadataRequest_icon._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1024)], ev=None, er=[])
    _UpdateMetadataRequest_profilePolicyRules = BIT_STR(name='profilePolicyRules', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PprIds')), opt=True)
    _UpdateMetadataRequest_serviceSpecificDataStoredInEuicc = SEQ_OF(name='serviceSpecificDataStoredInEuicc', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VendorSpecificExtension')), opt=True)
    UpdateMetadataRequest._cont = ASN1Dict([
        ('serviceProviderName', _UpdateMetadataRequest_serviceProviderName),
        ('profileName', _UpdateMetadataRequest_profileName),
        ('iconType', _UpdateMetadataRequest_iconType),
        ('icon', _UpdateMetadataRequest_icon),
        ('profilePolicyRules', _UpdateMetadataRequest_profilePolicyRules),
        ('serviceSpecificDataStoredInEuicc', _UpdateMetadataRequest_serviceSpecificDataStoredInEuicc),
        ])
    UpdateMetadataRequest._ext = []
    
    #-----< PrepareDownloadRequest >-----#
    PrepareDownloadRequest = SEQ(name='PrepareDownloadRequest', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareDownloadRequest_smdpSigned2 = SEQ(name='smdpSigned2', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'SmdpSigned2')))
    _PrepareDownloadRequest_smdpSignature2 = OCT_STR(name='smdpSignature2', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    _PrepareDownloadRequest_hashCc = OCT_STR(name='hashCc', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Octet32')), opt=True)
    _PrepareDownloadRequest_smdpCertificate = SEQ(name='smdpCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    PrepareDownloadRequest._cont = ASN1Dict([
        ('smdpSigned2', _PrepareDownloadRequest_smdpSigned2),
        ('smdpSignature2', _PrepareDownloadRequest_smdpSignature2),
        ('hashCc', _PrepareDownloadRequest_hashCc),
        ('smdpCertificate', _PrepareDownloadRequest_smdpCertificate),
        ])
    PrepareDownloadRequest._ext = []
    
    #-----< SmdpSigned2 >-----#
    SmdpSigned2 = SEQ(name='SmdpSigned2', mode=MODE_TYPE)
    _SmdpSigned2_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _SmdpSigned2_ccRequiredFlag = BOOL(name='ccRequiredFlag', mode=MODE_TYPE)
    _SmdpSigned2_bppEuiccOtpk = OCT_STR(name='bppEuiccOtpk', mode=MODE_TYPE, tag=(73, TAG_APPLICATION, TAG_IMPLICIT), opt=True)
    SmdpSigned2._cont = ASN1Dict([
        ('transactionId', _SmdpSigned2_transactionId),
        ('ccRequiredFlag', _SmdpSigned2_ccRequiredFlag),
        ('bppEuiccOtpk', _SmdpSigned2_bppEuiccOtpk),
        ])
    SmdpSigned2._ext = []
    
    #-----< PrepareDownloadResponse >-----#
    PrepareDownloadResponse = CHOICE(name='PrepareDownloadResponse', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareDownloadResponse_downloadResponseOk = SEQ(name='downloadResponseOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PrepareDownloadResponseOk')))
    _PrepareDownloadResponse_downloadResponseError = SEQ(name='downloadResponseError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PrepareDownloadResponseError')))
    PrepareDownloadResponse._cont = ASN1Dict([
        ('downloadResponseOk', _PrepareDownloadResponse_downloadResponseOk),
        ('downloadResponseError', _PrepareDownloadResponse_downloadResponseError),
        ])
    PrepareDownloadResponse._ext = []
    
    #-----< PrepareDownloadResponseOk >-----#
    PrepareDownloadResponseOk = SEQ(name='PrepareDownloadResponseOk', mode=MODE_TYPE)
    _PrepareDownloadResponseOk_euiccSigned2 = SEQ(name='euiccSigned2', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'EUICCSigned2')))
    _PrepareDownloadResponseOk_euiccSignature2 = OCT_STR(name='euiccSignature2', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    PrepareDownloadResponseOk._cont = ASN1Dict([
        ('euiccSigned2', _PrepareDownloadResponseOk_euiccSigned2),
        ('euiccSignature2', _PrepareDownloadResponseOk_euiccSignature2),
        ])
    PrepareDownloadResponseOk._ext = []
    
    #-----< EUICCSigned2 >-----#
    EUICCSigned2 = SEQ(name='EUICCSigned2', mode=MODE_TYPE)
    _EUICCSigned2_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _EUICCSigned2_euiccOtpk = OCT_STR(name='euiccOtpk', mode=MODE_TYPE, tag=(73, TAG_APPLICATION, TAG_IMPLICIT))
    _EUICCSigned2_hashCc = OCT_STR(name='hashCc', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Octet32')), opt=True)
    EUICCSigned2._cont = ASN1Dict([
        ('transactionId', _EUICCSigned2_transactionId),
        ('euiccOtpk', _EUICCSigned2_euiccOtpk),
        ('hashCc', _EUICCSigned2_hashCc),
        ])
    EUICCSigned2._ext = []
    
    #-----< PrepareDownloadResponseError >-----#
    PrepareDownloadResponseError = SEQ(name='PrepareDownloadResponseError', mode=MODE_TYPE)
    _PrepareDownloadResponseError_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _PrepareDownloadResponseError_downloadErrorCode = INT(name='downloadErrorCode', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'DownloadErrorCode')))
    PrepareDownloadResponseError._cont = ASN1Dict([
        ('transactionId', _PrepareDownloadResponseError_transactionId),
        ('downloadErrorCode', _PrepareDownloadResponseError_downloadErrorCode),
        ])
    PrepareDownloadResponseError._ext = []
    
    #-----< DownloadErrorCode >-----#
    DownloadErrorCode = INT(name='DownloadErrorCode', mode=MODE_TYPE)
    DownloadErrorCode._cont = ASN1Dict([('invalidCertificate', 1), ('invalidSignature', 2), ('unsupportedCurve', 3), ('noSessionContext', 4), ('invalidTransactionId', 5), ('undefinedError', 127)])
    
    #-----< AuthenticateServerRequest >-----#
    AuthenticateServerRequest = SEQ(name='AuthenticateServerRequest', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateServerRequest_serverSigned1 = SEQ(name='serverSigned1', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'ServerSigned1')))
    _AuthenticateServerRequest_serverSignature1 = OCT_STR(name='serverSignature1', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    _AuthenticateServerRequest_euiccCiPKIdToBeUsed = OCT_STR(name='euiccCiPKIdToBeUsed', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')))
    _AuthenticateServerRequest_serverCertificate = SEQ(name='serverCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    _AuthenticateServerRequest_ctxParams1 = CHOICE(name='ctxParams1', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'CtxParams1')))
    AuthenticateServerRequest._cont = ASN1Dict([
        ('serverSigned1', _AuthenticateServerRequest_serverSigned1),
        ('serverSignature1', _AuthenticateServerRequest_serverSignature1),
        ('euiccCiPKIdToBeUsed', _AuthenticateServerRequest_euiccCiPKIdToBeUsed),
        ('serverCertificate', _AuthenticateServerRequest_serverCertificate),
        ('ctxParams1', _AuthenticateServerRequest_ctxParams1),
        ])
    AuthenticateServerRequest._ext = []
    
    #-----< ServerSigned1 >-----#
    ServerSigned1 = SEQ(name='ServerSigned1', mode=MODE_TYPE)
    _ServerSigned1_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _ServerSigned1_euiccChallenge = OCT_STR(name='euiccChallenge', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet16')))
    _ServerSigned1_serverAddress = STR_UTF8(name='serverAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ServerSigned1_serverChallenge = OCT_STR(name='serverChallenge', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet16')))
    ServerSigned1._cont = ASN1Dict([
        ('transactionId', _ServerSigned1_transactionId),
        ('euiccChallenge', _ServerSigned1_euiccChallenge),
        ('serverAddress', _ServerSigned1_serverAddress),
        ('serverChallenge', _ServerSigned1_serverChallenge),
        ])
    ServerSigned1._ext = []
    
    #-----< CtxParams1 >-----#
    CtxParams1 = CHOICE(name='CtxParams1', mode=MODE_TYPE)
    _CtxParams1_ctxParamsForCommonAuthentication = SEQ(name='ctxParamsForCommonAuthentication', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CtxParamsForCommonAuthentication')))
    CtxParams1._cont = ASN1Dict([
        ('ctxParamsForCommonAuthentication', _CtxParams1_ctxParamsForCommonAuthentication),
        ])
    CtxParams1._ext = []
    
    #-----< CtxParamsForCommonAuthentication >-----#
    CtxParamsForCommonAuthentication = SEQ(name='CtxParamsForCommonAuthentication', mode=MODE_TYPE)
    _CtxParamsForCommonAuthentication_matchingId = STR_UTF8(name='matchingId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _CtxParamsForCommonAuthentication_deviceInfo = SEQ(name='deviceInfo', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'DeviceInfo')))
    CtxParamsForCommonAuthentication._cont = ASN1Dict([
        ('matchingId', _CtxParamsForCommonAuthentication_matchingId),
        ('deviceInfo', _CtxParamsForCommonAuthentication_deviceInfo),
        ])
    CtxParamsForCommonAuthentication._ext = []
    
    #-----< AuthenticateServerResponse >-----#
    AuthenticateServerResponse = CHOICE(name='AuthenticateServerResponse', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateServerResponse_authenticateResponseOk = SEQ(name='authenticateResponseOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateResponseOk')))
    _AuthenticateServerResponse_authenticateResponseError = SEQ(name='authenticateResponseError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateResponseError')))
    AuthenticateServerResponse._cont = ASN1Dict([
        ('authenticateResponseOk', _AuthenticateServerResponse_authenticateResponseOk),
        ('authenticateResponseError', _AuthenticateServerResponse_authenticateResponseError),
        ])
    AuthenticateServerResponse._ext = []
    
    #-----< AuthenticateResponseOk >-----#
    AuthenticateResponseOk = SEQ(name='AuthenticateResponseOk', mode=MODE_TYPE)
    _AuthenticateResponseOk_euiccSigned1 = SEQ(name='euiccSigned1', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'EuiccSigned1')))
    _AuthenticateResponseOk_euiccSignature1 = OCT_STR(name='euiccSignature1', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    _AuthenticateResponseOk_euiccCertificate = SEQ(name='euiccCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    _AuthenticateResponseOk_eumCertificate = SEQ(name='eumCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    AuthenticateResponseOk._cont = ASN1Dict([
        ('euiccSigned1', _AuthenticateResponseOk_euiccSigned1),
        ('euiccSignature1', _AuthenticateResponseOk_euiccSignature1),
        ('euiccCertificate', _AuthenticateResponseOk_euiccCertificate),
        ('eumCertificate', _AuthenticateResponseOk_eumCertificate),
        ])
    AuthenticateResponseOk._ext = []
    
    #-----< EuiccSigned1 >-----#
    EuiccSigned1 = SEQ(name='EuiccSigned1', mode=MODE_TYPE)
    _EuiccSigned1_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _EuiccSigned1_serverAddress = STR_UTF8(name='serverAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccSigned1_serverChallenge = OCT_STR(name='serverChallenge', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet16')))
    _EuiccSigned1_euiccInfo2 = SEQ(name='euiccInfo2', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'EUICCInfo2')))
    _EuiccSigned1_ctxParams1 = CHOICE(name='ctxParams1', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'CtxParams1')))
    EuiccSigned1._cont = ASN1Dict([
        ('transactionId', _EuiccSigned1_transactionId),
        ('serverAddress', _EuiccSigned1_serverAddress),
        ('serverChallenge', _EuiccSigned1_serverChallenge),
        ('euiccInfo2', _EuiccSigned1_euiccInfo2),
        ('ctxParams1', _EuiccSigned1_ctxParams1),
        ])
    EuiccSigned1._ext = []
    
    #-----< AuthenticateResponseError >-----#
    AuthenticateResponseError = SEQ(name='AuthenticateResponseError', mode=MODE_TYPE)
    _AuthenticateResponseError_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _AuthenticateResponseError_authenticateErrorCode = INT(name='authenticateErrorCode', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateErrorCode')))
    AuthenticateResponseError._cont = ASN1Dict([
        ('transactionId', _AuthenticateResponseError_transactionId),
        ('authenticateErrorCode', _AuthenticateResponseError_authenticateErrorCode),
        ])
    AuthenticateResponseError._ext = []
    
    #-----< AuthenticateErrorCode >-----#
    AuthenticateErrorCode = INT(name='AuthenticateErrorCode', mode=MODE_TYPE)
    AuthenticateErrorCode._cont = ASN1Dict([('invalidCertificate', 1), ('invalidSignature', 2), ('unsupportedCurve', 3), ('noSessionContext', 4), ('invalidOid', 5), ('euiccChallengeMismatch', 6), ('ciPKUnknown', 7), ('undefinedError', 127)])
    
    #-----< CancelSessionRequest >-----#
    CancelSessionRequest = SEQ(name='CancelSessionRequest', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionRequest_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _CancelSessionRequest_reason = INT(name='reason', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CancelSessionReason')))
    CancelSessionRequest._cont = ASN1Dict([
        ('transactionId', _CancelSessionRequest_transactionId),
        ('reason', _CancelSessionRequest_reason),
        ])
    CancelSessionRequest._ext = []
    
    #-----< CancelSessionReason >-----#
    CancelSessionReason = INT(name='CancelSessionReason', mode=MODE_TYPE)
    CancelSessionReason._cont = ASN1Dict([('endUserRejection', 0), ('postponed', 1), ('timeout', 2), ('pprNotAllowed', 3), ('metadataMismatch', 4), ('loadBppExecutionError', 5), ('undefinedReason', 127)])
    
    #-----< CancelSessionResponse >-----#
    CancelSessionResponse = CHOICE(name='CancelSessionResponse', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionResponse_cancelSessionResponseOk = SEQ(name='cancelSessionResponseOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CancelSessionResponseOk')))
    _CancelSessionResponse_cancelSessionResponseError = INT(name='cancelSessionResponseError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionResponse_cancelSessionResponseError._cont = ASN1Dict([('invalidTransactionId', 5), ('undefinedError', 127)])
    CancelSessionResponse._cont = ASN1Dict([
        ('cancelSessionResponseOk', _CancelSessionResponse_cancelSessionResponseOk),
        ('cancelSessionResponseError', _CancelSessionResponse_cancelSessionResponseError),
        ])
    CancelSessionResponse._ext = []
    
    #-----< CancelSessionResponseOk >-----#
    CancelSessionResponseOk = SEQ(name='CancelSessionResponseOk', mode=MODE_TYPE)
    _CancelSessionResponseOk_euiccCancelSessionSigned = SEQ(name='euiccCancelSessionSigned', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'EuiccCancelSessionSigned')))
    _CancelSessionResponseOk_euiccCancelSessionSignature = OCT_STR(name='euiccCancelSessionSignature', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    CancelSessionResponseOk._cont = ASN1Dict([
        ('euiccCancelSessionSigned', _CancelSessionResponseOk_euiccCancelSessionSigned),
        ('euiccCancelSessionSignature', _CancelSessionResponseOk_euiccCancelSessionSignature),
        ])
    CancelSessionResponseOk._ext = []
    
    #-----< EuiccCancelSessionSigned >-----#
    EuiccCancelSessionSigned = SEQ(name='EuiccCancelSessionSigned', mode=MODE_TYPE)
    _EuiccCancelSessionSigned_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _EuiccCancelSessionSigned_smdpOid = OID(name='smdpOid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccCancelSessionSigned_reason = INT(name='reason', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CancelSessionReason')))
    EuiccCancelSessionSigned._cont = ASN1Dict([
        ('transactionId', _EuiccCancelSessionSigned_transactionId),
        ('smdpOid', _EuiccCancelSessionSigned_smdpOid),
        ('reason', _EuiccCancelSessionSigned_reason),
        ])
    EuiccCancelSessionSigned._ext = []
    
    #-----< BoundProfilePackage >-----#
    BoundProfilePackage = SEQ(name='BoundProfilePackage', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BoundProfilePackage_initialiseSecureChannelRequest = SEQ(name='initialiseSecureChannelRequest', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'InitialiseSecureChannelRequest')))
    _BoundProfilePackage_firstSequenceOf87 = SEQ_OF(name='firstSequenceOf87', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BoundProfilePackage_firstSequenceOf87__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BoundProfilePackage_firstSequenceOf87._cont = __BoundProfilePackage_firstSequenceOf87__item_
    _BoundProfilePackage_sequenceOf88 = SEQ_OF(name='sequenceOf88', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BoundProfilePackage_sequenceOf88__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BoundProfilePackage_sequenceOf88._cont = __BoundProfilePackage_sequenceOf88__item_
    _BoundProfilePackage_secondSequenceOf87 = SEQ_OF(name='secondSequenceOf87', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __BoundProfilePackage_secondSequenceOf87__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BoundProfilePackage_secondSequenceOf87._cont = __BoundProfilePackage_secondSequenceOf87__item_
    _BoundProfilePackage_sequenceOf86 = SEQ_OF(name='sequenceOf86', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __BoundProfilePackage_sequenceOf86__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _BoundProfilePackage_sequenceOf86._cont = __BoundProfilePackage_sequenceOf86__item_
    BoundProfilePackage._cont = ASN1Dict([
        ('initialiseSecureChannelRequest', _BoundProfilePackage_initialiseSecureChannelRequest),
        ('firstSequenceOf87', _BoundProfilePackage_firstSequenceOf87),
        ('sequenceOf88', _BoundProfilePackage_sequenceOf88),
        ('secondSequenceOf87', _BoundProfilePackage_secondSequenceOf87),
        ('sequenceOf86', _BoundProfilePackage_sequenceOf86),
        ])
    BoundProfilePackage._ext = []
    
    #-----< GetEuiccChallengeRequest >-----#
    GetEuiccChallengeRequest = SEQ(name='GetEuiccChallengeRequest', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GetEuiccChallengeRequest._cont = ASN1Dict([
        ])
    GetEuiccChallengeRequest._ext = []
    
    #-----< GetEuiccChallengeResponse >-----#
    GetEuiccChallengeResponse = SEQ(name='GetEuiccChallengeResponse', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetEuiccChallengeResponse_euiccChallenge = OCT_STR(name='euiccChallenge', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet16')))
    GetEuiccChallengeResponse._cont = ASN1Dict([
        ('euiccChallenge', _GetEuiccChallengeResponse_euiccChallenge),
        ])
    GetEuiccChallengeResponse._ext = []
    
    #-----< ProfileInstallationResult >-----#
    ProfileInstallationResult = SEQ(name='ProfileInstallationResult', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileInstallationResult_profileInstallationResultData = SEQ(name='profileInstallationResultData', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ProfileInstallationResultData')))
    _ProfileInstallationResult_euiccSignPIR = OCT_STR(name='euiccSignPIR', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'EuiccSignPIR')))
    ProfileInstallationResult._cont = ASN1Dict([
        ('profileInstallationResultData', _ProfileInstallationResult_profileInstallationResultData),
        ('euiccSignPIR', _ProfileInstallationResult_euiccSignPIR),
        ])
    ProfileInstallationResult._ext = []
    
    #-----< ProfileInstallationResultData >-----#
    ProfileInstallationResultData = SEQ(name='ProfileInstallationResultData', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileInstallationResultData_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _ProfileInstallationResultData_notificationMetadata = SEQ(name='notificationMetadata', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'NotificationMetadata')))
    _ProfileInstallationResultData_smdpOid = OID(name='smdpOid', mode=MODE_TYPE)
    _ProfileInstallationResultData_finalResult = CHOICE(name='finalResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ProfileInstallationResultData_finalResult_successResult = SEQ(name='successResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'SuccessResult')))
    __ProfileInstallationResultData_finalResult_errorResult = SEQ(name='errorResult', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ErrorResult')))
    _ProfileInstallationResultData_finalResult._cont = ASN1Dict([
        ('successResult', __ProfileInstallationResultData_finalResult_successResult),
        ('errorResult', __ProfileInstallationResultData_finalResult_errorResult),
        ])
    _ProfileInstallationResultData_finalResult._ext = []
    ProfileInstallationResultData._cont = ASN1Dict([
        ('transactionId', _ProfileInstallationResultData_transactionId),
        ('notificationMetadata', _ProfileInstallationResultData_notificationMetadata),
        ('smdpOid', _ProfileInstallationResultData_smdpOid),
        ('finalResult', _ProfileInstallationResultData_finalResult),
        ])
    ProfileInstallationResultData._ext = []
    
    #-----< EuiccSignPIR >-----#
    EuiccSignPIR = OCT_STR(name='EuiccSignPIR', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    
    #-----< SuccessResult >-----#
    SuccessResult = SEQ(name='SuccessResult', mode=MODE_TYPE)
    _SuccessResult_aid = OCT_STR(name='aid', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT))
    _SuccessResult_aid._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=16)], ev=None, er=[])
    _SuccessResult_simaResponse = OCT_STR(name='simaResponse', mode=MODE_TYPE)
    SuccessResult._cont = ASN1Dict([
        ('aid', _SuccessResult_aid),
        ('simaResponse', _SuccessResult_simaResponse),
        ])
    SuccessResult._ext = []
    
    #-----< ErrorResult >-----#
    ErrorResult = SEQ(name='ErrorResult', mode=MODE_TYPE)
    _ErrorResult_bppCommandId = INT(name='bppCommandId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'BppCommandId')))
    _ErrorResult_errorReason = INT(name='errorReason', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ErrorReason')))
    _ErrorResult_simaResponse = OCT_STR(name='simaResponse', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ErrorResult._cont = ASN1Dict([
        ('bppCommandId', _ErrorResult_bppCommandId),
        ('errorReason', _ErrorResult_errorReason),
        ('simaResponse', _ErrorResult_simaResponse),
        ])
    ErrorResult._ext = []
    
    #-----< BppCommandId >-----#
    BppCommandId = INT(name='BppCommandId', mode=MODE_TYPE)
    BppCommandId._cont = ASN1Dict([('initialiseSecureChannel', 0), ('configureISDP', 1), ('storeMetadata', 2), ('storeMetadata2', 3), ('replaceSessionKeys', 4), ('loadProfileElements', 5)])
    
    #-----< ErrorReason >-----#
    ErrorReason = INT(name='ErrorReason', mode=MODE_TYPE)
    ErrorReason._cont = ASN1Dict([('incorrectInputValues', 1), ('invalidSignature', 2), ('invalidTransactionId', 3), ('unsupportedCrtValues', 4), ('unsupportedRemoteOperationType', 5), ('unsupportedProfileClass', 6), ('scp03tStructureError', 7), ('scp03tSecurityError', 8), ('installFailedDueToIccidAlreadyExistsOnEuicc', 9), ('installFailedDueToInsufficientMemoryForProfile', 10), ('installFailedDueToInterruption', 11), ('installFailedDueToPEProcessingError', 12), ('installFailedDueToDataMismatch', 13), ('testProfileInstallFailedDueToInvalidNaaKey', 14), ('pprNotAllowed', 15), ('installFailedDueToUnknownError', 127)])
    
    #-----< ListNotificationRequest >-----#
    ListNotificationRequest = SEQ(name='ListNotificationRequest', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ListNotificationRequest_profileManagementOperation = BIT_STR(name='profileManagementOperation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'NotificationEvent')), opt=True)
    ListNotificationRequest._cont = ASN1Dict([
        ('profileManagementOperation', _ListNotificationRequest_profileManagementOperation),
        ])
    ListNotificationRequest._ext = []
    
    #-----< ListNotificationResponse >-----#
    ListNotificationResponse = CHOICE(name='ListNotificationResponse', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ListNotificationResponse_notificationMetadataList = SEQ_OF(name='notificationMetadataList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ListNotificationResponse_notificationMetadataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'NotificationMetadata')))
    _ListNotificationResponse_notificationMetadataList._cont = __ListNotificationResponse_notificationMetadataList__item_
    _ListNotificationResponse_listNotificationsResultError = INT(name='listNotificationsResultError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ListNotificationResponse_listNotificationsResultError._cont = ASN1Dict([('undefinedError', 127)])
    ListNotificationResponse._cont = ASN1Dict([
        ('notificationMetadataList', _ListNotificationResponse_notificationMetadataList),
        ('listNotificationsResultError', _ListNotificationResponse_listNotificationsResultError),
        ])
    ListNotificationResponse._ext = []
    
    #-----< NotificationMetadata >-----#
    NotificationMetadata = SEQ(name='NotificationMetadata', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NotificationMetadata_seqNumber = INT(name='seqNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NotificationMetadata_profileManagementOperation = BIT_STR(name='profileManagementOperation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'NotificationEvent')))
    _NotificationMetadata_notificationAddress = STR_UTF8(name='notificationAddress', mode=MODE_TYPE)
    _NotificationMetadata_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Iccid')), opt=True)
    NotificationMetadata._cont = ASN1Dict([
        ('seqNumber', _NotificationMetadata_seqNumber),
        ('profileManagementOperation', _NotificationMetadata_profileManagementOperation),
        ('notificationAddress', _NotificationMetadata_notificationAddress),
        ('iccid', _NotificationMetadata_iccid),
        ])
    NotificationMetadata._ext = []
    
    #-----< SetNicknameRequest >-----#
    SetNicknameRequest = SEQ(name='SetNicknameRequest', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SetNicknameRequest_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Iccid')))
    _SetNicknameRequest_profileNickname = STR_UTF8(name='profileNickname', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SetNicknameRequest_profileNickname._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64)], ev=None, er=[])
    SetNicknameRequest._cont = ASN1Dict([
        ('iccid', _SetNicknameRequest_iccid),
        ('profileNickname', _SetNicknameRequest_profileNickname),
        ])
    SetNicknameRequest._ext = []
    
    #-----< SetNicknameResponse >-----#
    SetNicknameResponse = SEQ(name='SetNicknameResponse', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SetNicknameResponse_setNicknameResult = INT(name='setNicknameResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SetNicknameResponse_setNicknameResult._cont = ASN1Dict([('ok', 0), ('iccidNotFound', 1), ('undefinedError', 127)])
    SetNicknameResponse._cont = ASN1Dict([
        ('setNicknameResult', _SetNicknameResponse_setNicknameResult),
        ])
    SetNicknameResponse._ext = []
    
    #-----< id-rsp-cert-objects >-----#
    id_rsp_cert_objects = OID(name='id-rsp-cert-objects', mode=MODE_VALUE)
    id_rsp_cert_objects._val = (2, 23, 146, 1, 2)
    
    #-----< id-rspExt >-----#
    id_rspExt = OID(name='id-rspExt', mode=MODE_VALUE)
    id_rspExt._val = (2, 23, 146, 1, 2, 0)
    
    #-----< id-rspRole >-----#
    id_rspRole = OID(name='id-rspRole', mode=MODE_VALUE)
    id_rspRole._val = (2, 23, 146, 1, 2, 1)
    
    #-----< id-rspRole-ci >-----#
    id_rspRole_ci = OID(name='id-rspRole-ci', mode=MODE_VALUE)
    id_rspRole_ci._val = (2, 23, 146, 1, 2, 1, 0)
    
    #-----< id-rspRole-euicc >-----#
    id_rspRole_euicc = OID(name='id-rspRole-euicc', mode=MODE_VALUE)
    id_rspRole_euicc._val = (2, 23, 146, 1, 2, 1, 1)
    
    #-----< id-rspRole-eum >-----#
    id_rspRole_eum = OID(name='id-rspRole-eum', mode=MODE_VALUE)
    id_rspRole_eum._val = (2, 23, 146, 1, 2, 1, 2)
    
    #-----< id-rspRole-dp-tls >-----#
    id_rspRole_dp_tls = OID(name='id-rspRole-dp-tls', mode=MODE_VALUE)
    id_rspRole_dp_tls._val = (2, 23, 146, 1, 2, 1, 3)
    
    #-----< id-rspRole-dp-auth >-----#
    id_rspRole_dp_auth = OID(name='id-rspRole-dp-auth', mode=MODE_VALUE)
    id_rspRole_dp_auth._val = (2, 23, 146, 1, 2, 1, 4)
    
    #-----< id-rspRole-dp-pb >-----#
    id_rspRole_dp_pb = OID(name='id-rspRole-dp-pb', mode=MODE_VALUE)
    id_rspRole_dp_pb._val = (2, 23, 146, 1, 2, 1, 5)
    
    #-----< id-rspRole-ds-tls >-----#
    id_rspRole_ds_tls = OID(name='id-rspRole-ds-tls', mode=MODE_VALUE)
    id_rspRole_ds_tls._val = (2, 23, 146, 1, 2, 1, 6)
    
    #-----< id-rspRole-ds-auth >-----#
    id_rspRole_ds_auth = OID(name='id-rspRole-ds-auth', mode=MODE_VALUE)
    id_rspRole_ds_auth._val = (2, 23, 146, 1, 2, 1, 7)
    
    #-----< InitialiseSecureChannelRequest >-----#
    InitialiseSecureChannelRequest = SEQ(name='InitialiseSecureChannelRequest', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _InitialiseSecureChannelRequest_remoteOpId = INT(name='remoteOpId', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'RemoteOpId')))
    _InitialiseSecureChannelRequest_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _InitialiseSecureChannelRequest_controlRefTemplate = SEQ(name='controlRefTemplate', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ControlRefTemplate')))
    _InitialiseSecureChannelRequest_smdpOtpk = OCT_STR(name='smdpOtpk', mode=MODE_TYPE, tag=(73, TAG_APPLICATION, TAG_IMPLICIT))
    _InitialiseSecureChannelRequest_smdpSign = OCT_STR(name='smdpSign', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    InitialiseSecureChannelRequest._cont = ASN1Dict([
        ('remoteOpId', _InitialiseSecureChannelRequest_remoteOpId),
        ('transactionId', _InitialiseSecureChannelRequest_transactionId),
        ('controlRefTemplate', _InitialiseSecureChannelRequest_controlRefTemplate),
        ('smdpOtpk', _InitialiseSecureChannelRequest_smdpOtpk),
        ('smdpSign', _InitialiseSecureChannelRequest_smdpSign),
        ])
    InitialiseSecureChannelRequest._ext = []
    
    #-----< ControlRefTemplate >-----#
    ControlRefTemplate = SEQ(name='ControlRefTemplate', mode=MODE_TYPE)
    _ControlRefTemplate_keyType = OCT_STR(name='keyType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet1')))
    _ControlRefTemplate_keyLen = OCT_STR(name='keyLen', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet1')))
    _ControlRefTemplate_hostId = OCT_STR(name='hostId', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'OctetTo16')))
    ControlRefTemplate._cont = ASN1Dict([
        ('keyType', _ControlRefTemplate_keyType),
        ('keyLen', _ControlRefTemplate_keyLen),
        ('hostId', _ControlRefTemplate_hostId),
        ])
    ControlRefTemplate._ext = []
    
    #-----< ConfigureISDPRequest >-----#
    ConfigureISDPRequest = SEQ(name='ConfigureISDPRequest', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfigureISDPRequest_dpProprietaryData = SEQ(name='dpProprietaryData', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'DpProprietaryData')), opt=True)
    ConfigureISDPRequest._cont = ASN1Dict([
        ('dpProprietaryData', _ConfigureISDPRequest_dpProprietaryData),
        ])
    ConfigureISDPRequest._ext = []
    
    #-----< DpProprietaryData >-----#
    DpProprietaryData = SEQ(name='DpProprietaryData', mode=MODE_TYPE)
    _DpProprietaryData_dpOid = OID(name='dpOid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    DpProprietaryData._cont = ASN1Dict([
        ('dpOid', _DpProprietaryData_dpOid),
        ])
    DpProprietaryData._ext = []
    
    #-----< ReplaceSessionKeysRequest >-----#
    ReplaceSessionKeysRequest = SEQ(name='ReplaceSessionKeysRequest', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReplaceSessionKeysRequest_initialMacChainingValue = OCT_STR(name='initialMacChainingValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReplaceSessionKeysRequest_ppkEnc = OCT_STR(name='ppkEnc', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ReplaceSessionKeysRequest_ppkCmac = OCT_STR(name='ppkCmac', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ReplaceSessionKeysRequest._cont = ASN1Dict([
        ('initialMacChainingValue', _ReplaceSessionKeysRequest_initialMacChainingValue),
        ('ppkEnc', _ReplaceSessionKeysRequest_ppkEnc),
        ('ppkCmac', _ReplaceSessionKeysRequest_ppkCmac),
        ])
    ReplaceSessionKeysRequest._ext = []
    
    #-----< RetrieveNotificationsListRequest >-----#
    RetrieveNotificationsListRequest = SEQ(name='RetrieveNotificationsListRequest', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RetrieveNotificationsListRequest_searchCriteria = CHOICE(name='searchCriteria', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), opt=True)
    __RetrieveNotificationsListRequest_searchCriteria_seqNumber = INT(name='seqNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RetrieveNotificationsListRequest_searchCriteria_profileManagementOperation = BIT_STR(name='profileManagementOperation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'NotificationEvent')))
    _RetrieveNotificationsListRequest_searchCriteria._cont = ASN1Dict([
        ('seqNumber', __RetrieveNotificationsListRequest_searchCriteria_seqNumber),
        ('profileManagementOperation', __RetrieveNotificationsListRequest_searchCriteria_profileManagementOperation),
        ])
    _RetrieveNotificationsListRequest_searchCriteria._ext = []
    RetrieveNotificationsListRequest._cont = ASN1Dict([
        ('searchCriteria', _RetrieveNotificationsListRequest_searchCriteria),
        ])
    RetrieveNotificationsListRequest._ext = []
    
    #-----< RetrieveNotificationsListResponse >-----#
    RetrieveNotificationsListResponse = CHOICE(name='RetrieveNotificationsListResponse', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RetrieveNotificationsListResponse_notificationList = SEQ_OF(name='notificationList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RetrieveNotificationsListResponse_notificationList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'PendingNotification')))
    _RetrieveNotificationsListResponse_notificationList._cont = __RetrieveNotificationsListResponse_notificationList__item_
    _RetrieveNotificationsListResponse_notificationsListResultError = INT(name='notificationsListResultError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RetrieveNotificationsListResponse_notificationsListResultError._cont = ASN1Dict([('undefinedError', 127)])
    RetrieveNotificationsListResponse._cont = ASN1Dict([
        ('notificationList', _RetrieveNotificationsListResponse_notificationList),
        ('notificationsListResultError', _RetrieveNotificationsListResponse_notificationsListResultError),
        ])
    RetrieveNotificationsListResponse._ext = []
    
    #-----< PendingNotification >-----#
    PendingNotification = CHOICE(name='PendingNotification', mode=MODE_TYPE)
    _PendingNotification_profileInstallationResult = SEQ(name='profileInstallationResult', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ProfileInstallationResult')))
    _PendingNotification_otherSignedNotification = SEQ(name='otherSignedNotification', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'OtherSignedNotification')))
    PendingNotification._cont = ASN1Dict([
        ('profileInstallationResult', _PendingNotification_profileInstallationResult),
        ('otherSignedNotification', _PendingNotification_otherSignedNotification),
        ])
    PendingNotification._ext = []
    
    #-----< OtherSignedNotification >-----#
    OtherSignedNotification = SEQ(name='OtherSignedNotification', mode=MODE_TYPE)
    _OtherSignedNotification_tbsOtherNotification = SEQ(name='tbsOtherNotification', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'NotificationMetadata')))
    _OtherSignedNotification_euiccNotificationSignature = OCT_STR(name='euiccNotificationSignature', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    _OtherSignedNotification_euiccCertificate = SEQ(name='euiccCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    _OtherSignedNotification_eumCertificate = SEQ(name='eumCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    OtherSignedNotification._cont = ASN1Dict([
        ('tbsOtherNotification', _OtherSignedNotification_tbsOtherNotification),
        ('euiccNotificationSignature', _OtherSignedNotification_euiccNotificationSignature),
        ('euiccCertificate', _OtherSignedNotification_euiccCertificate),
        ('eumCertificate', _OtherSignedNotification_eumCertificate),
        ])
    OtherSignedNotification._ext = []
    
    #-----< NotificationSentRequest >-----#
    NotificationSentRequest = SEQ(name='NotificationSentRequest', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NotificationSentRequest_seqNumber = INT(name='seqNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    NotificationSentRequest._cont = ASN1Dict([
        ('seqNumber', _NotificationSentRequest_seqNumber),
        ])
    NotificationSentRequest._ext = []
    
    #-----< NotificationSentResponse >-----#
    NotificationSentResponse = SEQ(name='NotificationSentResponse', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NotificationSentResponse_deleteNotificationStatus = INT(name='deleteNotificationStatus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _NotificationSentResponse_deleteNotificationStatus._cont = ASN1Dict([('ok', 0), ('nothingToDelete', 1), ('undefinedError', 127)])
    NotificationSentResponse._cont = ASN1Dict([
        ('deleteNotificationStatus', _NotificationSentResponse_deleteNotificationStatus),
        ])
    NotificationSentResponse._ext = []
    
    #-----< EnableProfileRequest >-----#
    EnableProfileRequest = SEQ(name='EnableProfileRequest', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EnableProfileRequest_profileIdentifier = CHOICE(name='profileIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __EnableProfileRequest_profileIdentifier_isdpAid = OCT_STR(name='isdpAid', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'OctetTo16')))
    __EnableProfileRequest_profileIdentifier_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Iccid')))
    _EnableProfileRequest_profileIdentifier._cont = ASN1Dict([
        ('isdpAid', __EnableProfileRequest_profileIdentifier_isdpAid),
        ('iccid', __EnableProfileRequest_profileIdentifier_iccid),
        ])
    _EnableProfileRequest_profileIdentifier._ext = []
    _EnableProfileRequest_refreshFlag = BOOL(name='refreshFlag', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    EnableProfileRequest._cont = ASN1Dict([
        ('profileIdentifier', _EnableProfileRequest_profileIdentifier),
        ('refreshFlag', _EnableProfileRequest_refreshFlag),
        ])
    EnableProfileRequest._ext = []
    
    #-----< EnableProfileResponse >-----#
    EnableProfileResponse = SEQ(name='EnableProfileResponse', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EnableProfileResponse_enableResult = INT(name='enableResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EnableProfileResponse_enableResult._cont = ASN1Dict([('ok', 0), ('iccidOrAidNotFound', 1), ('profileNotInDisabledState', 2), ('disallowedByPolicy', 3), ('wrongProfileReenabling', 4), ('catBusy', 5), ('undefinedError', 127)])
    EnableProfileResponse._cont = ASN1Dict([
        ('enableResult', _EnableProfileResponse_enableResult),
        ])
    EnableProfileResponse._ext = []
    
    #-----< DisableProfileRequest >-----#
    DisableProfileRequest = SEQ(name='DisableProfileRequest', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DisableProfileRequest_profileIdentifier = CHOICE(name='profileIdentifier', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __DisableProfileRequest_profileIdentifier_isdpAid = OCT_STR(name='isdpAid', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'OctetTo16')))
    __DisableProfileRequest_profileIdentifier_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Iccid')))
    _DisableProfileRequest_profileIdentifier._cont = ASN1Dict([
        ('isdpAid', __DisableProfileRequest_profileIdentifier_isdpAid),
        ('iccid', __DisableProfileRequest_profileIdentifier_iccid),
        ])
    _DisableProfileRequest_profileIdentifier._ext = []
    _DisableProfileRequest_refreshFlag = BOOL(name='refreshFlag', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    DisableProfileRequest._cont = ASN1Dict([
        ('profileIdentifier', _DisableProfileRequest_profileIdentifier),
        ('refreshFlag', _DisableProfileRequest_refreshFlag),
        ])
    DisableProfileRequest._ext = []
    
    #-----< DisableProfileResponse >-----#
    DisableProfileResponse = SEQ(name='DisableProfileResponse', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DisableProfileResponse_disableResult = INT(name='disableResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DisableProfileResponse_disableResult._cont = ASN1Dict([('ok', 0), ('iccidOrAidNotFound', 1), ('profileNotInEnabledState', 2), ('disallowedByPolicy', 3), ('catBusy', 5), ('undefinedError', 127)])
    DisableProfileResponse._cont = ASN1Dict([
        ('disableResult', _DisableProfileResponse_disableResult),
        ])
    DisableProfileResponse._ext = []
    
    #-----< DeleteProfileRequest >-----#
    DeleteProfileRequest = CHOICE(name='DeleteProfileRequest', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DeleteProfileRequest_isdpAid = OCT_STR(name='isdpAid', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'OctetTo16')))
    _DeleteProfileRequest_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Iccid')))
    DeleteProfileRequest._cont = ASN1Dict([
        ('isdpAid', _DeleteProfileRequest_isdpAid),
        ('iccid', _DeleteProfileRequest_iccid),
        ])
    DeleteProfileRequest._ext = []
    
    #-----< DeleteProfileResponse >-----#
    DeleteProfileResponse = SEQ(name='DeleteProfileResponse', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DeleteProfileResponse_deleteResult = INT(name='deleteResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DeleteProfileResponse_deleteResult._cont = ASN1Dict([('ok', 0), ('iccidOrAidNotFound', 1), ('profileNotInDisabledState', 2), ('disallowedByPolicy', 3), ('undefinedError', 127)])
    DeleteProfileResponse._cont = ASN1Dict([
        ('deleteResult', _DeleteProfileResponse_deleteResult),
        ])
    DeleteProfileResponse._ext = []
    
    #-----< EuiccMemoryResetRequest >-----#
    EuiccMemoryResetRequest = SEQ(name='EuiccMemoryResetRequest', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccMemoryResetRequest_resetOptions = BIT_STR(name='resetOptions', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccMemoryResetRequest_resetOptions._cont = ASN1Dict([('deleteOperationalProfiles', 0), ('deleteFieldLoadedTestProfiles', 1), ('resetDefaultSmdpAddress', 2)])
    EuiccMemoryResetRequest._cont = ASN1Dict([
        ('resetOptions', _EuiccMemoryResetRequest_resetOptions),
        ])
    EuiccMemoryResetRequest._ext = []
    
    #-----< EuiccMemoryResetResponse >-----#
    EuiccMemoryResetResponse = SEQ(name='EuiccMemoryResetResponse', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccMemoryResetResponse_resetResult = INT(name='resetResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccMemoryResetResponse_resetResult._cont = ASN1Dict([('ok', 0), ('nothingToDelete', 1), ('catBusy', 5), ('undefinedError', 127)])
    EuiccMemoryResetResponse._cont = ASN1Dict([
        ('resetResult', _EuiccMemoryResetResponse_resetResult),
        ])
    EuiccMemoryResetResponse._ext = []
    
    #-----< GetEuiccDataRequest >-----#
    GetEuiccDataRequest = SEQ(name='GetEuiccDataRequest', mode=MODE_TYPE, tag=(62, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetEuiccDataRequest_tagList = OCT_STR(name='tagList', mode=MODE_TYPE, tag=(28, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet1')))
    GetEuiccDataRequest._cont = ASN1Dict([
        ('tagList', _GetEuiccDataRequest_tagList),
        ])
    GetEuiccDataRequest._ext = []
    
    #-----< GetEuiccDataResponse >-----#
    GetEuiccDataResponse = SEQ(name='GetEuiccDataResponse', mode=MODE_TYPE, tag=(62, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetEuiccDataResponse_eidValue = OCT_STR(name='eidValue', mode=MODE_TYPE, tag=(26, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet16')))
    GetEuiccDataResponse._cont = ASN1Dict([
        ('eidValue', _GetEuiccDataResponse_eidValue),
        ])
    GetEuiccDataResponse._ext = []
    
    #-----< GetRatRequest >-----#
    GetRatRequest = SEQ(name='GetRatRequest', mode=MODE_TYPE, tag=(67, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GetRatRequest._cont = ASN1Dict([
        ])
    GetRatRequest._ext = []
    
    #-----< GetRatResponse >-----#
    GetRatResponse = SEQ(name='GetRatResponse', mode=MODE_TYPE, tag=(67, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetRatResponse_rat = SEQ_OF(name='rat', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'RulesAuthorisationTable')))
    GetRatResponse._cont = ASN1Dict([
        ('rat', _GetRatResponse_rat),
        ])
    GetRatResponse._ext = []
    
    #-----< RulesAuthorisationTable >-----#
    RulesAuthorisationTable = SEQ_OF(name='RulesAuthorisationTable', mode=MODE_TYPE)
    _RulesAuthorisationTable__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'ProfilePolicyAuthorisationRule')))
    RulesAuthorisationTable._cont = _RulesAuthorisationTable__item_
    
    #-----< ProfilePolicyAuthorisationRule >-----#
    ProfilePolicyAuthorisationRule = SEQ(name='ProfilePolicyAuthorisationRule', mode=MODE_TYPE)
    _ProfilePolicyAuthorisationRule_pprIds = BIT_STR(name='pprIds', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PprIds')))
    _ProfilePolicyAuthorisationRule_allowedOperators = SEQ_OF(name='allowedOperators', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ProfilePolicyAuthorisationRule_allowedOperators__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'OperatorId')))
    _ProfilePolicyAuthorisationRule_allowedOperators._cont = __ProfilePolicyAuthorisationRule_allowedOperators__item_
    _ProfilePolicyAuthorisationRule_pprFlags = BIT_STR(name='pprFlags', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfilePolicyAuthorisationRule_pprFlags._cont = ASN1Dict([('consentRequired', 0)])
    ProfilePolicyAuthorisationRule._cont = ASN1Dict([
        ('pprIds', _ProfilePolicyAuthorisationRule_pprIds),
        ('allowedOperators', _ProfilePolicyAuthorisationRule_allowedOperators),
        ('pprFlags', _ProfilePolicyAuthorisationRule_pprFlags),
        ])
    ProfilePolicyAuthorisationRule._ext = []
    
    #-----< SegmentedCrlList >-----#
    SegmentedCrlList = SEQ_OF(name='SegmentedCrlList', mode=MODE_TYPE)
    _SegmentedCrlList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'CertificateList')))
    SegmentedCrlList._cont = _SegmentedCrlList__item_
    
    #-----< LoadCRLRequest >-----#
    LoadCRLRequest = SEQ(name='LoadCRLRequest', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LoadCRLRequest_crl = SEQ(name='crl', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'CertificateList')))
    LoadCRLRequest._cont = ASN1Dict([
        ('crl', _LoadCRLRequest_crl),
        ])
    LoadCRLRequest._ext = []
    
    #-----< LoadCRLResponse >-----#
    LoadCRLResponse = CHOICE(name='LoadCRLResponse', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LoadCRLResponse_loadCRLResponseOk = SEQ(name='loadCRLResponseOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'LoadCRLResponseOk')))
    _LoadCRLResponse_loadCRLResponseError = INT(name='loadCRLResponseError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'LoadCRLResponseError')))
    LoadCRLResponse._cont = ASN1Dict([
        ('loadCRLResponseOk', _LoadCRLResponse_loadCRLResponseOk),
        ('loadCRLResponseError', _LoadCRLResponse_loadCRLResponseError),
        ])
    LoadCRLResponse._ext = []
    
    #-----< LoadCRLResponseOk >-----#
    LoadCRLResponseOk = SEQ(name='LoadCRLResponseOk', mode=MODE_TYPE)
    _LoadCRLResponseOk_missingParts = SEQ_OF(name='missingParts', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __LoadCRLResponseOk_missingParts__item_ = INT(name='_item_', mode=MODE_TYPE)
    _LoadCRLResponseOk_missingParts._cont = __LoadCRLResponseOk_missingParts__item_
    LoadCRLResponseOk._cont = ASN1Dict([
        ('missingParts', _LoadCRLResponseOk_missingParts),
        ])
    LoadCRLResponseOk._ext = []
    
    #-----< LoadCRLResponseError >-----#
    LoadCRLResponseError = INT(name='LoadCRLResponseError', mode=MODE_TYPE)
    LoadCRLResponseError._cont = ASN1Dict([('invalidSignature', 1), ('invalidCRLFormat', 2), ('notEnoughMemorySpace', 3), ('verificationKeyNotFound', 4), ('fresherCrlAlreadyLoaded', 5), ('baseCrlMissing', 6), ('undefinedError', 127)])
    
    #-----< id-rsp-expDate >-----#
    id_rsp_expDate = OID(name='id-rsp-expDate', mode=MODE_VALUE)
    id_rsp_expDate._val = (2, 23, 146, 1, 2, 0, 1)
    
    #-----< ExpirationDate >-----#
    ExpirationDate = CHOICE(name='ExpirationDate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Time')))
    
    #-----< id-rsp-totalPartialCrlNumber >-----#
    id_rsp_totalPartialCrlNumber = OID(name='id-rsp-totalPartialCrlNumber', mode=MODE_VALUE)
    id_rsp_totalPartialCrlNumber._val = (2, 23, 146, 1, 2, 0, 2)
    
    #-----< TotalPartialCrlNumber >-----#
    TotalPartialCrlNumber = INT(name='TotalPartialCrlNumber', mode=MODE_TYPE)
    
    #-----< id-rsp-partialCrlNumber >-----#
    id_rsp_partialCrlNumber = OID(name='id-rsp-partialCrlNumber', mode=MODE_VALUE)
    id_rsp_partialCrlNumber._val = (2, 23, 146, 1, 2, 0, 3)
    
    #-----< PartialCrlNumber >-----#
    PartialCrlNumber = INT(name='PartialCrlNumber', mode=MODE_TYPE)
    
    #-----< RemoteProfileProvisioningRequest >-----#
    RemoteProfileProvisioningRequest = CHOICE(name='RemoteProfileProvisioningRequest', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RemoteProfileProvisioningRequest_initiateAuthenticationRequest = SEQ(name='initiateAuthenticationRequest', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'InitiateAuthenticationRequest')))
    _RemoteProfileProvisioningRequest_authenticateClientRequest = SEQ(name='authenticateClientRequest', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateClientRequest')))
    _RemoteProfileProvisioningRequest_getBoundProfilePackageRequest = SEQ(name='getBoundProfilePackageRequest', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'GetBoundProfilePackageRequest')))
    _RemoteProfileProvisioningRequest_cancelSessionRequestEs9 = SEQ(name='cancelSessionRequestEs9', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CancelSessionRequestEs9')))
    _RemoteProfileProvisioningRequest_handleNotification = SEQ(name='handleNotification', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'HandleNotification')))
    RemoteProfileProvisioningRequest._cont = ASN1Dict([
        ('initiateAuthenticationRequest', _RemoteProfileProvisioningRequest_initiateAuthenticationRequest),
        ('authenticateClientRequest', _RemoteProfileProvisioningRequest_authenticateClientRequest),
        ('getBoundProfilePackageRequest', _RemoteProfileProvisioningRequest_getBoundProfilePackageRequest),
        ('cancelSessionRequestEs9', _RemoteProfileProvisioningRequest_cancelSessionRequestEs9),
        ('handleNotification', _RemoteProfileProvisioningRequest_handleNotification),
        ])
    RemoteProfileProvisioningRequest._ext = []
    
    #-----< RemoteProfileProvisioningResponse >-----#
    RemoteProfileProvisioningResponse = CHOICE(name='RemoteProfileProvisioningResponse', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RemoteProfileProvisioningResponse_initiateAuthenticationResponse = CHOICE(name='initiateAuthenticationResponse', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'InitiateAuthenticationResponse')))
    _RemoteProfileProvisioningResponse_authenticateClientResponseEs9 = CHOICE(name='authenticateClientResponseEs9', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateClientResponseEs9')))
    _RemoteProfileProvisioningResponse_getBoundProfilePackageResponse = CHOICE(name='getBoundProfilePackageResponse', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'GetBoundProfilePackageResponse')))
    _RemoteProfileProvisioningResponse_cancelSessionResponseEs9 = CHOICE(name='cancelSessionResponseEs9', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CancelSessionResponseEs9')))
    _RemoteProfileProvisioningResponse_authenticateClientResponseEs11 = CHOICE(name='authenticateClientResponseEs11', mode=MODE_TYPE, tag=(64, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateClientResponseEs11')))
    RemoteProfileProvisioningResponse._cont = ASN1Dict([
        ('initiateAuthenticationResponse', _RemoteProfileProvisioningResponse_initiateAuthenticationResponse),
        ('authenticateClientResponseEs9', _RemoteProfileProvisioningResponse_authenticateClientResponseEs9),
        ('getBoundProfilePackageResponse', _RemoteProfileProvisioningResponse_getBoundProfilePackageResponse),
        ('cancelSessionResponseEs9', _RemoteProfileProvisioningResponse_cancelSessionResponseEs9),
        ('authenticateClientResponseEs11', _RemoteProfileProvisioningResponse_authenticateClientResponseEs11),
        ])
    RemoteProfileProvisioningResponse._ext = []
    
    #-----< InitiateAuthenticationRequest >-----#
    InitiateAuthenticationRequest = SEQ(name='InitiateAuthenticationRequest', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _InitiateAuthenticationRequest_euiccChallenge = OCT_STR(name='euiccChallenge', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet16')))
    _InitiateAuthenticationRequest_smdpAddress = STR_UTF8(name='smdpAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _InitiateAuthenticationRequest_euiccInfo1 = SEQ(name='euiccInfo1', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'EUICCInfo1')))
    InitiateAuthenticationRequest._cont = ASN1Dict([
        ('euiccChallenge', _InitiateAuthenticationRequest_euiccChallenge),
        ('smdpAddress', _InitiateAuthenticationRequest_smdpAddress),
        ('euiccInfo1', _InitiateAuthenticationRequest_euiccInfo1),
        ])
    InitiateAuthenticationRequest._ext = []
    
    #-----< InitiateAuthenticationResponse >-----#
    InitiateAuthenticationResponse = CHOICE(name='InitiateAuthenticationResponse', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _InitiateAuthenticationResponse_initiateAuthenticationOk = SEQ(name='initiateAuthenticationOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'InitiateAuthenticationOkEs9')))
    _InitiateAuthenticationResponse_initiateAuthenticationError = INT(name='initiateAuthenticationError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _InitiateAuthenticationResponse_initiateAuthenticationError._cont = ASN1Dict([('invalidDpAddress', 1), ('euiccVersionNotSupportedByDp', 2), ('ciPKNotSupported', 3)])
    InitiateAuthenticationResponse._cont = ASN1Dict([
        ('initiateAuthenticationOk', _InitiateAuthenticationResponse_initiateAuthenticationOk),
        ('initiateAuthenticationError', _InitiateAuthenticationResponse_initiateAuthenticationError),
        ])
    InitiateAuthenticationResponse._ext = []
    
    #-----< InitiateAuthenticationOkEs9 >-----#
    InitiateAuthenticationOkEs9 = SEQ(name='InitiateAuthenticationOkEs9', mode=MODE_TYPE)
    _InitiateAuthenticationOkEs9_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _InitiateAuthenticationOkEs9_serverSigned1 = SEQ(name='serverSigned1', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'ServerSigned1')))
    _InitiateAuthenticationOkEs9_serverSignature1 = OCT_STR(name='serverSignature1', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    _InitiateAuthenticationOkEs9_euiccCiPKIdToBeUsed = OCT_STR(name='euiccCiPKIdToBeUsed', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')))
    _InitiateAuthenticationOkEs9_serverCertificate = SEQ(name='serverCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    InitiateAuthenticationOkEs9._cont = ASN1Dict([
        ('transactionId', _InitiateAuthenticationOkEs9_transactionId),
        ('serverSigned1', _InitiateAuthenticationOkEs9_serverSigned1),
        ('serverSignature1', _InitiateAuthenticationOkEs9_serverSignature1),
        ('euiccCiPKIdToBeUsed', _InitiateAuthenticationOkEs9_euiccCiPKIdToBeUsed),
        ('serverCertificate', _InitiateAuthenticationOkEs9_serverCertificate),
        ])
    InitiateAuthenticationOkEs9._ext = []
    
    #-----< AuthenticateClientRequest >-----#
    AuthenticateClientRequest = SEQ(name='AuthenticateClientRequest', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateClientRequest_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _AuthenticateClientRequest_authenticateServerResponse = CHOICE(name='authenticateServerResponse', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateServerResponse')))
    AuthenticateClientRequest._cont = ASN1Dict([
        ('transactionId', _AuthenticateClientRequest_transactionId),
        ('authenticateServerResponse', _AuthenticateClientRequest_authenticateServerResponse),
        ])
    AuthenticateClientRequest._ext = []
    
    #-----< AuthenticateClientResponseEs9 >-----#
    AuthenticateClientResponseEs9 = CHOICE(name='AuthenticateClientResponseEs9', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateClientResponseEs9_authenticateClientOk = SEQ(name='authenticateClientOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateClientOk')))
    _AuthenticateClientResponseEs9_authenticateClientError = INT(name='authenticateClientError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateClientResponseEs9_authenticateClientError._cont = ASN1Dict([('eumCertificateInvalid', 1), ('eumCertificateExpired', 2), ('euiccCertificateInvalid', 3), ('euiccCertificateExpired', 4), ('euiccSignatureInvalid', 5), ('matchingIdRefused', 6), ('eidMismatch', 7), ('noEligibleProfile', 8), ('ciPKUnknown', 9), ('invalidTransactionId', 10), ('insufficientMemory', 11), ('undefinedError', 127)])
    AuthenticateClientResponseEs9._cont = ASN1Dict([
        ('authenticateClientOk', _AuthenticateClientResponseEs9_authenticateClientOk),
        ('authenticateClientError', _AuthenticateClientResponseEs9_authenticateClientError),
        ])
    AuthenticateClientResponseEs9._ext = []
    
    #-----< AuthenticateClientOk >-----#
    AuthenticateClientOk = SEQ(name='AuthenticateClientOk', mode=MODE_TYPE)
    _AuthenticateClientOk_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _AuthenticateClientOk_profileMetaData = SEQ(name='profileMetaData', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'StoreMetadataRequest')))
    _AuthenticateClientOk_smdpSigned2 = SEQ(name='smdpSigned2', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'SmdpSigned2')))
    _AuthenticateClientOk_smdpSignature2 = OCT_STR(name='smdpSignature2', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    _AuthenticateClientOk_smdpCertificate = SEQ(name='smdpCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    AuthenticateClientOk._cont = ASN1Dict([
        ('transactionId', _AuthenticateClientOk_transactionId),
        ('profileMetaData', _AuthenticateClientOk_profileMetaData),
        ('smdpSigned2', _AuthenticateClientOk_smdpSigned2),
        ('smdpSignature2', _AuthenticateClientOk_smdpSignature2),
        ('smdpCertificate', _AuthenticateClientOk_smdpCertificate),
        ])
    AuthenticateClientOk._ext = []
    
    #-----< GetBoundProfilePackageRequest >-----#
    GetBoundProfilePackageRequest = SEQ(name='GetBoundProfilePackageRequest', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetBoundProfilePackageRequest_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _GetBoundProfilePackageRequest_prepareDownloadResponse = CHOICE(name='prepareDownloadResponse', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PrepareDownloadResponse')))
    GetBoundProfilePackageRequest._cont = ASN1Dict([
        ('transactionId', _GetBoundProfilePackageRequest_transactionId),
        ('prepareDownloadResponse', _GetBoundProfilePackageRequest_prepareDownloadResponse),
        ])
    GetBoundProfilePackageRequest._ext = []
    
    #-----< GetBoundProfilePackageResponse >-----#
    GetBoundProfilePackageResponse = CHOICE(name='GetBoundProfilePackageResponse', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetBoundProfilePackageResponse_getBoundProfilePackageOk = SEQ(name='getBoundProfilePackageOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'GetBoundProfilePackageOk')))
    _GetBoundProfilePackageResponse_getBoundProfilePackageError = INT(name='getBoundProfilePackageError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetBoundProfilePackageResponse_getBoundProfilePackageError._cont = ASN1Dict([('euiccSignatureInvalid', 1), ('confirmationCodeMissing', 2), ('confirmationCodeRefused', 3), ('confirmationCodeRetriesExceeded', 4), ('bppRebindingRefused', 5), ('downloadOrderExpired', 6), ('invalidTransactionId', 95), ('undefinedError', 127)])
    GetBoundProfilePackageResponse._cont = ASN1Dict([
        ('getBoundProfilePackageOk', _GetBoundProfilePackageResponse_getBoundProfilePackageOk),
        ('getBoundProfilePackageError', _GetBoundProfilePackageResponse_getBoundProfilePackageError),
        ])
    GetBoundProfilePackageResponse._ext = []
    
    #-----< GetBoundProfilePackageOk >-----#
    GetBoundProfilePackageOk = SEQ(name='GetBoundProfilePackageOk', mode=MODE_TYPE)
    _GetBoundProfilePackageOk_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _GetBoundProfilePackageOk_boundProfilePackage = SEQ(name='boundProfilePackage', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'BoundProfilePackage')))
    GetBoundProfilePackageOk._cont = ASN1Dict([
        ('transactionId', _GetBoundProfilePackageOk_transactionId),
        ('boundProfilePackage', _GetBoundProfilePackageOk_boundProfilePackage),
        ])
    GetBoundProfilePackageOk._ext = []
    
    #-----< HandleNotification >-----#
    HandleNotification = SEQ(name='HandleNotification', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HandleNotification_pendingNotification = CHOICE(name='pendingNotification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PendingNotification')))
    HandleNotification._cont = ASN1Dict([
        ('pendingNotification', _HandleNotification_pendingNotification),
        ])
    HandleNotification._ext = []
    
    #-----< CancelSessionRequestEs9 >-----#
    CancelSessionRequestEs9 = SEQ(name='CancelSessionRequestEs9', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionRequestEs9_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _CancelSessionRequestEs9_cancelSessionResponse = CHOICE(name='cancelSessionResponse', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CancelSessionResponse')))
    CancelSessionRequestEs9._cont = ASN1Dict([
        ('transactionId', _CancelSessionRequestEs9_transactionId),
        ('cancelSessionResponse', _CancelSessionRequestEs9_cancelSessionResponse),
        ])
    CancelSessionRequestEs9._ext = []
    
    #-----< CancelSessionResponseEs9 >-----#
    CancelSessionResponseEs9 = CHOICE(name='CancelSessionResponseEs9', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionResponseEs9_cancelSessionOk = SEQ(name='cancelSessionOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CancelSessionOk')))
    _CancelSessionResponseEs9_cancelSessionError = INT(name='cancelSessionError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionResponseEs9_cancelSessionError._cont = ASN1Dict([('invalidTransactionId', 1), ('euiccSignatureInvalid', 2), ('undefinedError', 127)])
    CancelSessionResponseEs9._cont = ASN1Dict([
        ('cancelSessionOk', _CancelSessionResponseEs9_cancelSessionOk),
        ('cancelSessionError', _CancelSessionResponseEs9_cancelSessionError),
        ])
    CancelSessionResponseEs9._ext = []
    
    #-----< CancelSessionOk >-----#
    CancelSessionOk = SEQ(name='CancelSessionOk', mode=MODE_TYPE)
    CancelSessionOk._cont = ASN1Dict([
        ])
    CancelSessionOk._ext = []
    
    #-----< EuiccConfiguredAddressesRequest >-----#
    EuiccConfiguredAddressesRequest = SEQ(name='EuiccConfiguredAddressesRequest', mode=MODE_TYPE, tag=(60, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    EuiccConfiguredAddressesRequest._cont = ASN1Dict([
        ])
    EuiccConfiguredAddressesRequest._ext = []
    
    #-----< EuiccConfiguredAddressesResponse >-----#
    EuiccConfiguredAddressesResponse = SEQ(name='EuiccConfiguredAddressesResponse', mode=MODE_TYPE, tag=(60, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccConfiguredAddressesResponse_defaultDpAddress = STR_UTF8(name='defaultDpAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EuiccConfiguredAddressesResponse_rootDsAddress = STR_UTF8(name='rootDsAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    EuiccConfiguredAddressesResponse._cont = ASN1Dict([
        ('defaultDpAddress', _EuiccConfiguredAddressesResponse_defaultDpAddress),
        ('rootDsAddress', _EuiccConfiguredAddressesResponse_rootDsAddress),
        ])
    EuiccConfiguredAddressesResponse._ext = []
    
    #-----< ISDRProprietaryApplicationTemplate >-----#
    ISDRProprietaryApplicationTemplate = SEQ(name='ISDRProprietaryApplicationTemplate', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT))
    _ISDRProprietaryApplicationTemplate_svn = OCT_STR(name='svn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _ISDRProprietaryApplicationTemplate_lpaeSupport = BIT_STR(name='lpaeSupport', mode=MODE_TYPE, opt=True)
    _ISDRProprietaryApplicationTemplate_lpaeSupport._cont = ASN1Dict([('lpaeUsingCat', 0), ('lpaeUsingScws', 1)])
    ISDRProprietaryApplicationTemplate._cont = ASN1Dict([
        ('svn', _ISDRProprietaryApplicationTemplate_svn),
        ('lpaeSupport', _ISDRProprietaryApplicationTemplate_lpaeSupport),
        ])
    ISDRProprietaryApplicationTemplate._ext = []
    
    #-----< LpaeActivationRequest >-----#
    LpaeActivationRequest = SEQ(name='LpaeActivationRequest', mode=MODE_TYPE, tag=(66, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LpaeActivationRequest_lpaeOption = BIT_STR(name='lpaeOption', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LpaeActivationRequest_lpaeOption._cont = ASN1Dict([('activateCatBasedLpae', 0), ('activateScwsBasedLpae', 1)])
    LpaeActivationRequest._cont = ASN1Dict([
        ('lpaeOption', _LpaeActivationRequest_lpaeOption),
        ])
    LpaeActivationRequest._ext = []
    
    #-----< LpaeActivationResponse >-----#
    LpaeActivationResponse = SEQ(name='LpaeActivationResponse', mode=MODE_TYPE, tag=(66, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LpaeActivationResponse_lpaeActivationResult = INT(name='lpaeActivationResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _LpaeActivationResponse_lpaeActivationResult._cont = ASN1Dict([('ok', 0), ('notSupported', 1)])
    LpaeActivationResponse._cont = ASN1Dict([
        ('lpaeActivationResult', _LpaeActivationResponse_lpaeActivationResult),
        ])
    LpaeActivationResponse._ext = []
    
    #-----< SetDefaultDpAddressRequest >-----#
    SetDefaultDpAddressRequest = SEQ(name='SetDefaultDpAddressRequest', mode=MODE_TYPE, tag=(63, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SetDefaultDpAddressRequest_defaultDpAddress = STR_UTF8(name='defaultDpAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    SetDefaultDpAddressRequest._cont = ASN1Dict([
        ('defaultDpAddress', _SetDefaultDpAddressRequest_defaultDpAddress),
        ])
    SetDefaultDpAddressRequest._ext = []
    
    #-----< SetDefaultDpAddressResponse >-----#
    SetDefaultDpAddressResponse = SEQ(name='SetDefaultDpAddressResponse', mode=MODE_TYPE, tag=(63, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SetDefaultDpAddressResponse_setDefaultDpAddressResult = INT(name='setDefaultDpAddressResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _SetDefaultDpAddressResponse_setDefaultDpAddressResult._cont = ASN1Dict([('ok', 0), ('undefinedError', 127)])
    SetDefaultDpAddressResponse._cont = ASN1Dict([
        ('setDefaultDpAddressResult', _SetDefaultDpAddressResponse_setDefaultDpAddressResult),
        ])
    SetDefaultDpAddressResponse._ext = []
    
    #-----< AuthenticateClientResponseEs11 >-----#
    AuthenticateClientResponseEs11 = CHOICE(name='AuthenticateClientResponseEs11', mode=MODE_TYPE, tag=(64, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateClientResponseEs11_authenticateClientOk = SEQ(name='authenticateClientOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateClientOkEs11')))
    _AuthenticateClientResponseEs11_authenticateClientError = INT(name='authenticateClientError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateClientResponseEs11_authenticateClientError._cont = ASN1Dict([('eumCertificateInvalid', 1), ('eumCertificateExpired', 2), ('euiccCertificateInvalid', 3), ('euiccCertificateExpired', 4), ('euiccSignatureInvalid', 5), ('eventIdUnknown', 6), ('invalidTransactionId', 7), ('undefinedError', 127)])
    AuthenticateClientResponseEs11._cont = ASN1Dict([
        ('authenticateClientOk', _AuthenticateClientResponseEs11_authenticateClientOk),
        ('authenticateClientError', _AuthenticateClientResponseEs11_authenticateClientError),
        ])
    AuthenticateClientResponseEs11._ext = []
    
    #-----< AuthenticateClientOkEs11 >-----#
    AuthenticateClientOkEs11 = SEQ(name='AuthenticateClientOkEs11', mode=MODE_TYPE)
    _AuthenticateClientOkEs11_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _AuthenticateClientOkEs11_eventEntries = SEQ_OF(name='eventEntries', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AuthenticateClientOkEs11_eventEntries__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'EventEntries')))
    _AuthenticateClientOkEs11_eventEntries._cont = __AuthenticateClientOkEs11_eventEntries__item_
    AuthenticateClientOkEs11._cont = ASN1Dict([
        ('transactionId', _AuthenticateClientOkEs11_transactionId),
        ('eventEntries', _AuthenticateClientOkEs11_eventEntries),
        ])
    AuthenticateClientOkEs11._ext = []
    
    #-----< EventEntries >-----#
    EventEntries = SEQ(name='EventEntries', mode=MODE_TYPE)
    _EventEntries_eventId = STR_UTF8(name='eventId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EventEntries_rspServerAddress = STR_UTF8(name='rspServerAddress', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    EventEntries._cont = ASN1Dict([
        ('eventId', _EventEntries_eventId),
        ('rspServerAddress', _EventEntries_rspServerAddress),
        ])
    EventEntries._ext = []
    
    _all_ = [
        id_rsp,
        Octet8,
        Octet4,
        Octet16,
        OctetTo16,
        Octet32,
        Octet1,
        Octet2,
        VersionType,
        Iccid,
        RemoteOpId,
        TransactionId,
        GetEuiccInfo1Request,
        _EUICCInfo1_svn,
        __EUICCInfo1_euiccCiPKIdListForVerification__item_,
        _EUICCInfo1_euiccCiPKIdListForVerification,
        __EUICCInfo1_euiccCiPKIdListForSigning__item_,
        _EUICCInfo1_euiccCiPKIdListForSigning,
        EUICCInfo1,
        GetEuiccInfo2Request,
        _EUICCInfo2_profileVersion,
        _EUICCInfo2_svn,
        _EUICCInfo2_euiccFirmwareVer,
        _EUICCInfo2_extCardResource,
        _EUICCInfo2_uiccCapability,
        _EUICCInfo2_ts102241Version,
        _EUICCInfo2_globalplatformVersion,
        _EUICCInfo2_rspCapability,
        __EUICCInfo2_euiccCiPKIdListForVerification__item_,
        _EUICCInfo2_euiccCiPKIdListForVerification,
        __EUICCInfo2_euiccCiPKIdListForSigning__item_,
        _EUICCInfo2_euiccCiPKIdListForSigning,
        _EUICCInfo2_euiccCategory,
        _EUICCInfo2_forbiddenProfilePolicyRules,
        _EUICCInfo2_ppVersion,
        _EUICCInfo2_sasAcreditationNumber,
        _EUICCInfo2_certificationDataObject,
        _EUICCInfo2_treProperties,
        _EUICCInfo2_treProductReference,
        __EUICCInfo2_additionalEuiccProfilePackageVersions__item_,
        _EUICCInfo2_additionalEuiccProfilePackageVersions,
        EUICCInfo2,
        RspCapability,
        _CertificationDataObject_platformLabel,
        _CertificationDataObject_discoveryBaseURL,
        CertificationDataObject,
        CertificateInfo,
        _DeviceInfo_tac,
        _DeviceInfo_deviceCapabilities,
        _DeviceInfo_imei,
        DeviceInfo,
        _DeviceCapabilities_gsmSupportedRelease,
        _DeviceCapabilities_utranSupportedRelease,
        _DeviceCapabilities_cdma2000onexSupportedRelease,
        _DeviceCapabilities_cdma2000hrpdSupportedRelease,
        _DeviceCapabilities_cdma2000ehrpdSupportedRelease,
        _DeviceCapabilities_eutranEpcSupportedRelease,
        _DeviceCapabilities_contactlessSupportedRelease,
        _DeviceCapabilities_rspCrlSupportedVersion,
        _DeviceCapabilities_nrEpcSupportedRelease,
        _DeviceCapabilities_nr5gcSupportedRelease,
        _DeviceCapabilities_eutran5gcSupportedRelease,
        _DeviceCapabilities_lpaSvn,
        _DeviceCapabilities_catSupportedClasses,
        _DeviceCapabilities_euiccFormFactorType,
        _DeviceCapabilities_deviceAdditionalFeatureSupport,
        DeviceCapabilities,
        _DeviceAdditionalFeatureSupport_naiSupport,
        DeviceAdditionalFeatureSupport,
        CatSupportedClasses,
        EuiccFormFactorType,
        __ProfileInfoListRequest_searchCriteria_isdpAid,
        __ProfileInfoListRequest_searchCriteria_iccid,
        __ProfileInfoListRequest_searchCriteria_profileClass,
        _ProfileInfoListRequest_searchCriteria,
        _ProfileInfoListRequest_tagList,
        ProfileInfoListRequest,
        __ProfileInfoListResponse_profileInfoListOk__item_,
        _ProfileInfoListResponse_profileInfoListOk,
        _ProfileInfoListResponse_profileInfoListError,
        ProfileInfoListResponse,
        _ProfileInfo_iccid,
        _ProfileInfo_isdpAid,
        _ProfileInfo_profileState,
        _ProfileInfo_profileNickname,
        _ProfileInfo_serviceProviderName,
        _ProfileInfo_profileName,
        _ProfileInfo_iconType,
        _ProfileInfo_icon,
        _ProfileInfo_profileClass,
        __ProfileInfo_notificationConfigurationInfo__item_,
        _ProfileInfo_notificationConfigurationInfo,
        _ProfileInfo_profileOwner,
        _ProfileInfo_dpProprietaryData,
        _ProfileInfo_profilePolicyRules,
        _ProfileInfo_serviceSpecificDataStoredInEuicc,
        ProfileInfo,
        PprIds,
        _OperatorId_mccMnc,
        _OperatorId_gid1,
        _OperatorId_gid2,
        OperatorId,
        ProfileInfoListError,
        _StoreMetadataRequest_iccid,
        _StoreMetadataRequest_serviceProviderName,
        _StoreMetadataRequest_profileName,
        _StoreMetadataRequest_iconType,
        _StoreMetadataRequest_icon,
        _StoreMetadataRequest_profileClass,
        __StoreMetadataRequest_notificationConfigurationInfo__item_,
        _StoreMetadataRequest_notificationConfigurationInfo,
        _StoreMetadataRequest_profileOwner,
        _StoreMetadataRequest_profilePolicyRules,
        _StoreMetadataRequest_serviceSpecificDataStoredInEuicc,
        _StoreMetadataRequest_serviceSpecificDataNotStoredInEuicc,
        StoreMetadataRequest,
        NotificationEvent,
        _NotificationConfigurationInformation_profileManagementOperation,
        _NotificationConfigurationInformation_notificationAddress,
        NotificationConfigurationInformation,
        _OPENTYPE_typeId,
        _OPENTYPE_Type,
        OPENTYPE,
        __VendorSpecificExtension__item__vendorOid,
        __VendorSpecificExtension__item__vendorSpecificData,
        _VendorSpecificExtension__item_,
        VendorSpecificExtension,
        IconType,
        ProfileState,
        ProfileClass,
        _UpdateMetadataRequest_serviceProviderName,
        _UpdateMetadataRequest_profileName,
        _UpdateMetadataRequest_iconType,
        _UpdateMetadataRequest_icon,
        _UpdateMetadataRequest_profilePolicyRules,
        _UpdateMetadataRequest_serviceSpecificDataStoredInEuicc,
        UpdateMetadataRequest,
        _PrepareDownloadRequest_smdpSigned2,
        _PrepareDownloadRequest_smdpSignature2,
        _PrepareDownloadRequest_hashCc,
        _PrepareDownloadRequest_smdpCertificate,
        PrepareDownloadRequest,
        _SmdpSigned2_transactionId,
        _SmdpSigned2_ccRequiredFlag,
        _SmdpSigned2_bppEuiccOtpk,
        SmdpSigned2,
        _PrepareDownloadResponse_downloadResponseOk,
        _PrepareDownloadResponse_downloadResponseError,
        PrepareDownloadResponse,
        _PrepareDownloadResponseOk_euiccSigned2,
        _PrepareDownloadResponseOk_euiccSignature2,
        PrepareDownloadResponseOk,
        _EUICCSigned2_transactionId,
        _EUICCSigned2_euiccOtpk,
        _EUICCSigned2_hashCc,
        EUICCSigned2,
        _PrepareDownloadResponseError_transactionId,
        _PrepareDownloadResponseError_downloadErrorCode,
        PrepareDownloadResponseError,
        DownloadErrorCode,
        _AuthenticateServerRequest_serverSigned1,
        _AuthenticateServerRequest_serverSignature1,
        _AuthenticateServerRequest_euiccCiPKIdToBeUsed,
        _AuthenticateServerRequest_serverCertificate,
        _AuthenticateServerRequest_ctxParams1,
        AuthenticateServerRequest,
        _ServerSigned1_transactionId,
        _ServerSigned1_euiccChallenge,
        _ServerSigned1_serverAddress,
        _ServerSigned1_serverChallenge,
        ServerSigned1,
        _CtxParams1_ctxParamsForCommonAuthentication,
        CtxParams1,
        _CtxParamsForCommonAuthentication_matchingId,
        _CtxParamsForCommonAuthentication_deviceInfo,
        CtxParamsForCommonAuthentication,
        _AuthenticateServerResponse_authenticateResponseOk,
        _AuthenticateServerResponse_authenticateResponseError,
        AuthenticateServerResponse,
        _AuthenticateResponseOk_euiccSigned1,
        _AuthenticateResponseOk_euiccSignature1,
        _AuthenticateResponseOk_euiccCertificate,
        _AuthenticateResponseOk_eumCertificate,
        AuthenticateResponseOk,
        _EuiccSigned1_transactionId,
        _EuiccSigned1_serverAddress,
        _EuiccSigned1_serverChallenge,
        _EuiccSigned1_euiccInfo2,
        _EuiccSigned1_ctxParams1,
        EuiccSigned1,
        _AuthenticateResponseError_transactionId,
        _AuthenticateResponseError_authenticateErrorCode,
        AuthenticateResponseError,
        AuthenticateErrorCode,
        _CancelSessionRequest_transactionId,
        _CancelSessionRequest_reason,
        CancelSessionRequest,
        CancelSessionReason,
        _CancelSessionResponse_cancelSessionResponseOk,
        _CancelSessionResponse_cancelSessionResponseError,
        CancelSessionResponse,
        _CancelSessionResponseOk_euiccCancelSessionSigned,
        _CancelSessionResponseOk_euiccCancelSessionSignature,
        CancelSessionResponseOk,
        _EuiccCancelSessionSigned_transactionId,
        _EuiccCancelSessionSigned_smdpOid,
        _EuiccCancelSessionSigned_reason,
        EuiccCancelSessionSigned,
        _BoundProfilePackage_initialiseSecureChannelRequest,
        __BoundProfilePackage_firstSequenceOf87__item_,
        _BoundProfilePackage_firstSequenceOf87,
        __BoundProfilePackage_sequenceOf88__item_,
        _BoundProfilePackage_sequenceOf88,
        __BoundProfilePackage_secondSequenceOf87__item_,
        _BoundProfilePackage_secondSequenceOf87,
        __BoundProfilePackage_sequenceOf86__item_,
        _BoundProfilePackage_sequenceOf86,
        BoundProfilePackage,
        GetEuiccChallengeRequest,
        _GetEuiccChallengeResponse_euiccChallenge,
        GetEuiccChallengeResponse,
        _ProfileInstallationResult_profileInstallationResultData,
        _ProfileInstallationResult_euiccSignPIR,
        ProfileInstallationResult,
        _ProfileInstallationResultData_transactionId,
        _ProfileInstallationResultData_notificationMetadata,
        _ProfileInstallationResultData_smdpOid,
        __ProfileInstallationResultData_finalResult_successResult,
        __ProfileInstallationResultData_finalResult_errorResult,
        _ProfileInstallationResultData_finalResult,
        ProfileInstallationResultData,
        EuiccSignPIR,
        _SuccessResult_aid,
        _SuccessResult_simaResponse,
        SuccessResult,
        _ErrorResult_bppCommandId,
        _ErrorResult_errorReason,
        _ErrorResult_simaResponse,
        ErrorResult,
        BppCommandId,
        ErrorReason,
        _ListNotificationRequest_profileManagementOperation,
        ListNotificationRequest,
        __ListNotificationResponse_notificationMetadataList__item_,
        _ListNotificationResponse_notificationMetadataList,
        _ListNotificationResponse_listNotificationsResultError,
        ListNotificationResponse,
        _NotificationMetadata_seqNumber,
        _NotificationMetadata_profileManagementOperation,
        _NotificationMetadata_notificationAddress,
        _NotificationMetadata_iccid,
        NotificationMetadata,
        _SetNicknameRequest_iccid,
        _SetNicknameRequest_profileNickname,
        SetNicknameRequest,
        _SetNicknameResponse_setNicknameResult,
        SetNicknameResponse,
        id_rsp_cert_objects,
        id_rspExt,
        id_rspRole,
        id_rspRole_ci,
        id_rspRole_euicc,
        id_rspRole_eum,
        id_rspRole_dp_tls,
        id_rspRole_dp_auth,
        id_rspRole_dp_pb,
        id_rspRole_ds_tls,
        id_rspRole_ds_auth,
        _InitialiseSecureChannelRequest_remoteOpId,
        _InitialiseSecureChannelRequest_transactionId,
        _InitialiseSecureChannelRequest_controlRefTemplate,
        _InitialiseSecureChannelRequest_smdpOtpk,
        _InitialiseSecureChannelRequest_smdpSign,
        InitialiseSecureChannelRequest,
        _ControlRefTemplate_keyType,
        _ControlRefTemplate_keyLen,
        _ControlRefTemplate_hostId,
        ControlRefTemplate,
        _ConfigureISDPRequest_dpProprietaryData,
        ConfigureISDPRequest,
        _DpProprietaryData_dpOid,
        DpProprietaryData,
        _ReplaceSessionKeysRequest_initialMacChainingValue,
        _ReplaceSessionKeysRequest_ppkEnc,
        _ReplaceSessionKeysRequest_ppkCmac,
        ReplaceSessionKeysRequest,
        __RetrieveNotificationsListRequest_searchCriteria_seqNumber,
        __RetrieveNotificationsListRequest_searchCriteria_profileManagementOperation,
        _RetrieveNotificationsListRequest_searchCriteria,
        RetrieveNotificationsListRequest,
        __RetrieveNotificationsListResponse_notificationList__item_,
        _RetrieveNotificationsListResponse_notificationList,
        _RetrieveNotificationsListResponse_notificationsListResultError,
        RetrieveNotificationsListResponse,
        _PendingNotification_profileInstallationResult,
        _PendingNotification_otherSignedNotification,
        PendingNotification,
        _OtherSignedNotification_tbsOtherNotification,
        _OtherSignedNotification_euiccNotificationSignature,
        _OtherSignedNotification_euiccCertificate,
        _OtherSignedNotification_eumCertificate,
        OtherSignedNotification,
        _NotificationSentRequest_seqNumber,
        NotificationSentRequest,
        _NotificationSentResponse_deleteNotificationStatus,
        NotificationSentResponse,
        __EnableProfileRequest_profileIdentifier_isdpAid,
        __EnableProfileRequest_profileIdentifier_iccid,
        _EnableProfileRequest_profileIdentifier,
        _EnableProfileRequest_refreshFlag,
        EnableProfileRequest,
        _EnableProfileResponse_enableResult,
        EnableProfileResponse,
        __DisableProfileRequest_profileIdentifier_isdpAid,
        __DisableProfileRequest_profileIdentifier_iccid,
        _DisableProfileRequest_profileIdentifier,
        _DisableProfileRequest_refreshFlag,
        DisableProfileRequest,
        _DisableProfileResponse_disableResult,
        DisableProfileResponse,
        _DeleteProfileRequest_isdpAid,
        _DeleteProfileRequest_iccid,
        DeleteProfileRequest,
        _DeleteProfileResponse_deleteResult,
        DeleteProfileResponse,
        _EuiccMemoryResetRequest_resetOptions,
        EuiccMemoryResetRequest,
        _EuiccMemoryResetResponse_resetResult,
        EuiccMemoryResetResponse,
        _GetEuiccDataRequest_tagList,
        GetEuiccDataRequest,
        _GetEuiccDataResponse_eidValue,
        GetEuiccDataResponse,
        GetRatRequest,
        _GetRatResponse_rat,
        GetRatResponse,
        _RulesAuthorisationTable__item_,
        RulesAuthorisationTable,
        _ProfilePolicyAuthorisationRule_pprIds,
        __ProfilePolicyAuthorisationRule_allowedOperators__item_,
        _ProfilePolicyAuthorisationRule_allowedOperators,
        _ProfilePolicyAuthorisationRule_pprFlags,
        ProfilePolicyAuthorisationRule,
        _SegmentedCrlList__item_,
        SegmentedCrlList,
        _LoadCRLRequest_crl,
        LoadCRLRequest,
        _LoadCRLResponse_loadCRLResponseOk,
        _LoadCRLResponse_loadCRLResponseError,
        LoadCRLResponse,
        __LoadCRLResponseOk_missingParts__item_,
        _LoadCRLResponseOk_missingParts,
        LoadCRLResponseOk,
        LoadCRLResponseError,
        id_rsp_expDate,
        ExpirationDate,
        id_rsp_totalPartialCrlNumber,
        TotalPartialCrlNumber,
        id_rsp_partialCrlNumber,
        PartialCrlNumber,
        _RemoteProfileProvisioningRequest_initiateAuthenticationRequest,
        _RemoteProfileProvisioningRequest_authenticateClientRequest,
        _RemoteProfileProvisioningRequest_getBoundProfilePackageRequest,
        _RemoteProfileProvisioningRequest_cancelSessionRequestEs9,
        _RemoteProfileProvisioningRequest_handleNotification,
        RemoteProfileProvisioningRequest,
        _RemoteProfileProvisioningResponse_initiateAuthenticationResponse,
        _RemoteProfileProvisioningResponse_authenticateClientResponseEs9,
        _RemoteProfileProvisioningResponse_getBoundProfilePackageResponse,
        _RemoteProfileProvisioningResponse_cancelSessionResponseEs9,
        _RemoteProfileProvisioningResponse_authenticateClientResponseEs11,
        RemoteProfileProvisioningResponse,
        _InitiateAuthenticationRequest_euiccChallenge,
        _InitiateAuthenticationRequest_smdpAddress,
        _InitiateAuthenticationRequest_euiccInfo1,
        InitiateAuthenticationRequest,
        _InitiateAuthenticationResponse_initiateAuthenticationOk,
        _InitiateAuthenticationResponse_initiateAuthenticationError,
        InitiateAuthenticationResponse,
        _InitiateAuthenticationOkEs9_transactionId,
        _InitiateAuthenticationOkEs9_serverSigned1,
        _InitiateAuthenticationOkEs9_serverSignature1,
        _InitiateAuthenticationOkEs9_euiccCiPKIdToBeUsed,
        _InitiateAuthenticationOkEs9_serverCertificate,
        InitiateAuthenticationOkEs9,
        _AuthenticateClientRequest_transactionId,
        _AuthenticateClientRequest_authenticateServerResponse,
        AuthenticateClientRequest,
        _AuthenticateClientResponseEs9_authenticateClientOk,
        _AuthenticateClientResponseEs9_authenticateClientError,
        AuthenticateClientResponseEs9,
        _AuthenticateClientOk_transactionId,
        _AuthenticateClientOk_profileMetaData,
        _AuthenticateClientOk_smdpSigned2,
        _AuthenticateClientOk_smdpSignature2,
        _AuthenticateClientOk_smdpCertificate,
        AuthenticateClientOk,
        _GetBoundProfilePackageRequest_transactionId,
        _GetBoundProfilePackageRequest_prepareDownloadResponse,
        GetBoundProfilePackageRequest,
        _GetBoundProfilePackageResponse_getBoundProfilePackageOk,
        _GetBoundProfilePackageResponse_getBoundProfilePackageError,
        GetBoundProfilePackageResponse,
        _GetBoundProfilePackageOk_transactionId,
        _GetBoundProfilePackageOk_boundProfilePackage,
        GetBoundProfilePackageOk,
        _HandleNotification_pendingNotification,
        HandleNotification,
        _CancelSessionRequestEs9_transactionId,
        _CancelSessionRequestEs9_cancelSessionResponse,
        CancelSessionRequestEs9,
        _CancelSessionResponseEs9_cancelSessionOk,
        _CancelSessionResponseEs9_cancelSessionError,
        CancelSessionResponseEs9,
        CancelSessionOk,
        EuiccConfiguredAddressesRequest,
        _EuiccConfiguredAddressesResponse_defaultDpAddress,
        _EuiccConfiguredAddressesResponse_rootDsAddress,
        EuiccConfiguredAddressesResponse,
        _ISDRProprietaryApplicationTemplate_svn,
        _ISDRProprietaryApplicationTemplate_lpaeSupport,
        ISDRProprietaryApplicationTemplate,
        _LpaeActivationRequest_lpaeOption,
        LpaeActivationRequest,
        _LpaeActivationResponse_lpaeActivationResult,
        LpaeActivationResponse,
        _SetDefaultDpAddressRequest_defaultDpAddress,
        SetDefaultDpAddressRequest,
        _SetDefaultDpAddressResponse_setDefaultDpAddressResult,
        SetDefaultDpAddressResponse,
        _AuthenticateClientResponseEs11_authenticateClientOk,
        _AuthenticateClientResponseEs11_authenticateClientError,
        AuthenticateClientResponseEs11,
        _AuthenticateClientOkEs11_transactionId,
        __AuthenticateClientOkEs11_eventEntries__item_,
        _AuthenticateClientOkEs11_eventEntries,
        AuthenticateClientOkEs11,
        _EventEntries_eventId,
        _EventEntries_rspServerAddress,
        EventEntries,
    ]

class PEDefinitions:

    _name_  = 'PEDefinitions'
    _oid_   = [2, 23, 143, 1, 1, 3]
    
    _obj_ = [
        'maxUInt8',
        'UInt8',
        'maxUInt15',
        'UInt15',
        'maxUInt16',
        'UInt16',
        'maxUInt31',
        'UInt31',
        'ApplicationIdentifier',
        'PEHeader',
        'ProfileElement',
        'PE-Dummy',
        'ProfileHeader',
        'ServicesList',
        'UICCCapability',
        'ProprietaryInfo',
        'Fcp',
        'File',
        'PE-MF',
        'PE-CD',
        'PE-TELECOM',
        'PE-USIM',
        'PE-OPT-USIM',
        'PE-PHONEBOOK',
        'PE-GSM-ACCESS',
        'PE-DF-5GS',
        'PE-DF-SAIP',
        'PE-ISIM',
        'PE-OPT-ISIM',
        'PE-CSIM',
        'PE-OPT-CSIM',
        'PE-EAP',
        'PE-GenericFileManagement',
        'FileManagement',
        'MappingParameter',
        'AlgoParameter',
        'PE-AKAParameter',
        'PE-CDMAParameter',
        'PINKeyReferenceValue',
        'PINConfiguration',
        'PE-PINCodes',
        'PUKKeyReferenceValue',
        'PUKConfiguration',
        'PE-PUKCodes',
        'PE-SecurityDomain',
        'KeyObject',
        'PE-Application',
        'ApplicationLoadPackage',
        'ApplicationInstance',
        'ApplicationSystemParameters',
        'UICCApplicationParameters',
        'TS102226AdditionalContactlessParameters',
        'ControlReferenceTemplate',
        'PE-RFM',
        'ADFRFMAccess',
        'PE-NonStandard',
        'PE-End',
        'PEStatus',
        'EUICCResponse',
        ]
    _type_ = [
        'UInt8',
        'UInt15',
        'UInt16',
        'UInt31',
        'ApplicationIdentifier',
        'PEHeader',
        'ProfileElement',
        'PE-Dummy',
        'ProfileHeader',
        'ServicesList',
        'UICCCapability',
        'ProprietaryInfo',
        'Fcp',
        'File',
        'PE-MF',
        'PE-CD',
        'PE-TELECOM',
        'PE-USIM',
        'PE-OPT-USIM',
        'PE-PHONEBOOK',
        'PE-GSM-ACCESS',
        'PE-DF-5GS',
        'PE-DF-SAIP',
        'PE-ISIM',
        'PE-OPT-ISIM',
        'PE-CSIM',
        'PE-OPT-CSIM',
        'PE-EAP',
        'PE-GenericFileManagement',
        'FileManagement',
        'MappingParameter',
        'AlgoParameter',
        'PE-AKAParameter',
        'PE-CDMAParameter',
        'PINKeyReferenceValue',
        'PINConfiguration',
        'PE-PINCodes',
        'PUKKeyReferenceValue',
        'PUKConfiguration',
        'PE-PUKCodes',
        'PE-SecurityDomain',
        'KeyObject',
        'PE-Application',
        'ApplicationLoadPackage',
        'ApplicationInstance',
        'ApplicationSystemParameters',
        'UICCApplicationParameters',
        'TS102226AdditionalContactlessParameters',
        'ControlReferenceTemplate',
        'PE-RFM',
        'ADFRFMAccess',
        'PE-NonStandard',
        'PE-End',
        'PEStatus',
        'EUICCResponse',
        ]
    _set_ = [
        ]
    _val_ = [
        'maxUInt8',
        'maxUInt15',
        'maxUInt16',
        'maxUInt31',
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< maxUInt8 >-----#
    maxUInt8 = INT(name='maxUInt8', mode=MODE_VALUE)
    maxUInt8._val = 255
    
    #-----< UInt8 >-----#
    UInt8 = INT(name='UInt8', mode=MODE_TYPE)
    UInt8._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< maxUInt15 >-----#
    maxUInt15 = INT(name='maxUInt15', mode=MODE_VALUE)
    maxUInt15._val = 32767
    
    #-----< UInt15 >-----#
    UInt15 = INT(name='UInt15', mode=MODE_TYPE)
    UInt15._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32767)], ev=None, er=[])
    
    #-----< maxUInt16 >-----#
    maxUInt16 = INT(name='maxUInt16', mode=MODE_VALUE)
    maxUInt16._val = 65535
    
    #-----< UInt16 >-----#
    UInt16 = INT(name='UInt16', mode=MODE_TYPE)
    UInt16._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< maxUInt31 >-----#
    maxUInt31 = INT(name='maxUInt31', mode=MODE_VALUE)
    maxUInt31._val = 2147483647
    
    #-----< UInt31 >-----#
    UInt31 = INT(name='UInt31', mode=MODE_TYPE)
    UInt31._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=2147483647)], ev=None, er=[])
    
    #-----< ApplicationIdentifier >-----#
    ApplicationIdentifier = OCT_STR(name='ApplicationIdentifier', mode=MODE_TYPE)
    ApplicationIdentifier._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=16)], ev=None, er=[])
    
    #-----< PEHeader >-----#
    PEHeader = SEQ(name='PEHeader', mode=MODE_TYPE)
    _PEHeader_mandated = NULL(name='mandated', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PEHeader_identification = INT(name='identification', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt15')))
    PEHeader._cont = ASN1Dict([
        ('mandated', _PEHeader_mandated),
        ('identification', _PEHeader_identification),
        ])
    PEHeader._ext = []
    
    #-----< ProfileElement >-----#
    ProfileElement = CHOICE(name='ProfileElement', mode=MODE_TYPE)
    _ProfileElement_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ProfileHeader')))
    _ProfileElement_genericFileManagement = SEQ(name='genericFileManagement', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-GenericFileManagement')))
    _ProfileElement_pinCodes = SEQ(name='pinCodes', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-PINCodes')))
    _ProfileElement_pukCodes = SEQ(name='pukCodes', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-PUKCodes')))
    _ProfileElement_akaParameter = SEQ(name='akaParameter', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-AKAParameter')))
    _ProfileElement_cdmaParameter = SEQ(name='cdmaParameter', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-CDMAParameter')))
    _ProfileElement_securityDomain = SEQ(name='securityDomain', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-SecurityDomain')))
    _ProfileElement_rfm = SEQ(name='rfm', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-RFM')))
    _ProfileElement_application = SEQ(name='application', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-Application')))
    _ProfileElement_nonStandard = SEQ(name='nonStandard', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-NonStandard')))
    _ProfileElement_end = SEQ(name='end', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-End')))
    _ProfileElement_rfu1 = SEQ(name='rfu1', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-Dummy')))
    _ProfileElement_rfu2 = SEQ(name='rfu2', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-Dummy')))
    _ProfileElement_rfu3 = SEQ(name='rfu3', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-Dummy')))
    _ProfileElement_rfu4 = SEQ(name='rfu4', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-Dummy')))
    _ProfileElement_rfu5 = SEQ(name='rfu5', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-Dummy')))
    _ProfileElement_mf = SEQ(name='mf', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-MF')))
    _ProfileElement_cd = SEQ(name='cd', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-CD')))
    _ProfileElement_telecom = SEQ(name='telecom', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-TELECOM')))
    _ProfileElement_usim = SEQ(name='usim', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-USIM')))
    _ProfileElement_opt_usim = SEQ(name='opt-usim', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-OPT-USIM')))
    _ProfileElement_isim = SEQ(name='isim', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-ISIM')))
    _ProfileElement_opt_isim = SEQ(name='opt-isim', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-OPT-ISIM')))
    _ProfileElement_phonebook = SEQ(name='phonebook', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-PHONEBOOK')))
    _ProfileElement_gsm_access = SEQ(name='gsm-access', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-GSM-ACCESS')))
    _ProfileElement_csim = SEQ(name='csim', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-CSIM')))
    _ProfileElement_opt_csim = SEQ(name='opt-csim', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-OPT-CSIM')))
    _ProfileElement_eap = SEQ(name='eap', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-EAP')))
    _ProfileElement_df_5gs = SEQ(name='df-5gs', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-DF-5GS')))
    _ProfileElement_df_saip = SEQ(name='df-saip', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PE-DF-SAIP')))
    ProfileElement._cont = ASN1Dict([
        ('header', _ProfileElement_header),
        ('genericFileManagement', _ProfileElement_genericFileManagement),
        ('pinCodes', _ProfileElement_pinCodes),
        ('pukCodes', _ProfileElement_pukCodes),
        ('akaParameter', _ProfileElement_akaParameter),
        ('cdmaParameter', _ProfileElement_cdmaParameter),
        ('securityDomain', _ProfileElement_securityDomain),
        ('rfm', _ProfileElement_rfm),
        ('application', _ProfileElement_application),
        ('nonStandard', _ProfileElement_nonStandard),
        ('end', _ProfileElement_end),
        ('rfu1', _ProfileElement_rfu1),
        ('rfu2', _ProfileElement_rfu2),
        ('rfu3', _ProfileElement_rfu3),
        ('rfu4', _ProfileElement_rfu4),
        ('rfu5', _ProfileElement_rfu5),
        ('mf', _ProfileElement_mf),
        ('cd', _ProfileElement_cd),
        ('telecom', _ProfileElement_telecom),
        ('usim', _ProfileElement_usim),
        ('opt-usim', _ProfileElement_opt_usim),
        ('isim', _ProfileElement_isim),
        ('opt-isim', _ProfileElement_opt_isim),
        ('phonebook', _ProfileElement_phonebook),
        ('gsm-access', _ProfileElement_gsm_access),
        ('csim', _ProfileElement_csim),
        ('opt-csim', _ProfileElement_opt_csim),
        ('eap', _ProfileElement_eap),
        ('df-5gs', _ProfileElement_df_5gs),
        ('df-saip', _ProfileElement_df_saip),
        ])
    ProfileElement._ext = []
    
    #-----< PE-Dummy >-----#
    PE_Dummy = SEQ(name='PE-Dummy', mode=MODE_TYPE)
    PE_Dummy._cont = ASN1Dict([
        ])
    PE_Dummy._ext = []
    
    #-----< ProfileHeader >-----#
    ProfileHeader = SEQ(name='ProfileHeader', mode=MODE_TYPE)
    _ProfileHeader_major_version = INT(name='major-version', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt8')))
    _ProfileHeader_minor_version = INT(name='minor-version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt8')))
    _ProfileHeader_profileType = STR_UTF8(name='profileType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProfileHeader_profileType._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    _ProfileHeader_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileHeader_iccid._const_sz = ASN1Set(rv=[10], rr=[], ev=None, er=[])
    _ProfileHeader_pol = OCT_STR(name='pol', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProfileHeader_eUICC_Mandatory_services = SEQ(name='eUICC-Mandatory-services', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ServicesList')))
    _ProfileHeader_eUICC_Mandatory_GFSTEList = SEQ_OF(name='eUICC-Mandatory-GFSTEList', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ProfileHeader_eUICC_Mandatory_GFSTEList__item_ = OID(name='_item_', mode=MODE_TYPE)
    _ProfileHeader_eUICC_Mandatory_GFSTEList._cont = __ProfileHeader_eUICC_Mandatory_GFSTEList__item_
    _ProfileHeader_connectivityParameters = OCT_STR(name='connectivityParameters', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProfileHeader_eUICC_Mandatory_AIDs = SEQ_OF(name='eUICC-Mandatory-AIDs', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ProfileHeader_eUICC_Mandatory_AIDs__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___ProfileHeader_eUICC_Mandatory_AIDs__item__aid = OCT_STR(name='aid', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')))
    ___ProfileHeader_eUICC_Mandatory_AIDs__item__version = OCT_STR(name='version', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___ProfileHeader_eUICC_Mandatory_AIDs__item__version._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    __ProfileHeader_eUICC_Mandatory_AIDs__item_._cont = ASN1Dict([
        ('aid', ___ProfileHeader_eUICC_Mandatory_AIDs__item__aid),
        ('version', ___ProfileHeader_eUICC_Mandatory_AIDs__item__version),
        ])
    __ProfileHeader_eUICC_Mandatory_AIDs__item_._ext = []
    _ProfileHeader_eUICC_Mandatory_AIDs._cont = __ProfileHeader_eUICC_Mandatory_AIDs__item_
    ProfileHeader._cont = ASN1Dict([
        ('major-version', _ProfileHeader_major_version),
        ('minor-version', _ProfileHeader_minor_version),
        ('profileType', _ProfileHeader_profileType),
        ('iccid', _ProfileHeader_iccid),
        ('pol', _ProfileHeader_pol),
        ('eUICC-Mandatory-services', _ProfileHeader_eUICC_Mandatory_services),
        ('eUICC-Mandatory-GFSTEList', _ProfileHeader_eUICC_Mandatory_GFSTEList),
        ('connectivityParameters', _ProfileHeader_connectivityParameters),
        ('eUICC-Mandatory-AIDs', _ProfileHeader_eUICC_Mandatory_AIDs),
        ])
    ProfileHeader._ext = []
    
    #-----< ServicesList >-----#
    ServicesList = SEQ(name='ServicesList', mode=MODE_TYPE)
    _ServicesList_contactless = NULL(name='contactless', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_usim = NULL(name='usim', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_isim = NULL(name='isim', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_csim = NULL(name='csim', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_milenage = NULL(name='milenage', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_tuak128 = NULL(name='tuak128', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_cave = NULL(name='cave', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_gba_usim = NULL(name='gba-usim', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_gba_isim = NULL(name='gba-isim', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_mbms = NULL(name='mbms', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_eap = NULL(name='eap', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_javacard = NULL(name='javacard', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_multos = NULL(name='multos', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_multiple_usim = NULL(name='multiple-usim', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_multiple_isim = NULL(name='multiple-isim', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_multiple_csim = NULL(name='multiple-csim', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_tuak256 = NULL(name='tuak256', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_usim_test_algorithm = NULL(name='usim-test-algorithm', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_ber_tlv = NULL(name='ber-tlv', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_dfLink = NULL(name='dfLink', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_cat_tp = NULL(name='cat-tp', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_get_identity = NULL(name='get-identity', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_profile_a_x25519 = NULL(name='profile-a-x25519', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_profile_b_p256 = NULL(name='profile-b-p256', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_suciCalculatorApi = NULL(name='suciCalculatorApi', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_dns_resolution = NULL(name='dns-resolution', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_scp11ac = NULL(name='scp11ac', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_scp11c_authorization_mechanism = NULL(name='scp11c-authorization-mechanism', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ServicesList_s16mode = NULL(name='s16mode', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ServicesList._cont = ASN1Dict([
        ('contactless', _ServicesList_contactless),
        ('usim', _ServicesList_usim),
        ('isim', _ServicesList_isim),
        ('csim', _ServicesList_csim),
        ('milenage', _ServicesList_milenage),
        ('tuak128', _ServicesList_tuak128),
        ('cave', _ServicesList_cave),
        ('gba-usim', _ServicesList_gba_usim),
        ('gba-isim', _ServicesList_gba_isim),
        ('mbms', _ServicesList_mbms),
        ('eap', _ServicesList_eap),
        ('javacard', _ServicesList_javacard),
        ('multos', _ServicesList_multos),
        ('multiple-usim', _ServicesList_multiple_usim),
        ('multiple-isim', _ServicesList_multiple_isim),
        ('multiple-csim', _ServicesList_multiple_csim),
        ('tuak256', _ServicesList_tuak256),
        ('usim-test-algorithm', _ServicesList_usim_test_algorithm),
        ('ber-tlv', _ServicesList_ber_tlv),
        ('dfLink', _ServicesList_dfLink),
        ('cat-tp', _ServicesList_cat_tp),
        ('get-identity', _ServicesList_get_identity),
        ('profile-a-x25519', _ServicesList_profile_a_x25519),
        ('profile-b-p256', _ServicesList_profile_b_p256),
        ('suciCalculatorApi', _ServicesList_suciCalculatorApi),
        ('dns-resolution', _ServicesList_dns_resolution),
        ('scp11ac', _ServicesList_scp11ac),
        ('scp11c-authorization-mechanism', _ServicesList_scp11c_authorization_mechanism),
        ('s16mode', _ServicesList_s16mode),
        ])
    ServicesList._ext = []
    
    #-----< UICCCapability >-----#
    UICCCapability = BIT_STR(name='UICCCapability', mode=MODE_TYPE)
    UICCCapability._cont = ASN1Dict([('contactlessSupport', 0), ('usimSupport', 1), ('isimSupport', 2), ('csimSupport', 3), ('akaMilenage', 4), ('akaCave', 5), ('akaTuak128', 6), ('akaTuak256', 7), ('usimTestAlgorithm', 8), ('rfu2', 9), ('gbaAuthenUsim', 10), ('gbaAuthenISim', 11), ('mbmsAuthenUsim', 12), ('eapClient', 13), ('javacard', 14), ('multos', 15), ('multipleUsimSupport', 16), ('multipleIsimSupport', 17), ('multipleCsimSupport', 18), ('berTlvFileSupport', 19), ('dfLinkSupport', 20), ('catTp', 21), ('getIdentity', 22), ('profile-a-x25519', 23), ('profile-b-p256', 24), ('suciCalculatorApi', 25), ('dns-resolution', 26), ('scp11ac', 27), ('scp11c-authorization-mechanism', 28), ('s16mode', 29)])
    
    #-----< ProprietaryInfo >-----#
    ProprietaryInfo = SEQ(name='ProprietaryInfo', mode=MODE_TYPE)
    _ProprietaryInfo_specialFileInformation = OCT_STR(name='specialFileInformation', mode=MODE_TYPE, tag=(0, TAG_PRIVATE, TAG_IMPLICIT), default=b'\x00')
    _ProprietaryInfo_specialFileInformation._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _ProprietaryInfo_fillPattern = OCT_STR(name='fillPattern', mode=MODE_TYPE, tag=(1, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ProprietaryInfo_fillPattern._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=200)], ev=None, er=[])
    _ProprietaryInfo_repeatPattern = OCT_STR(name='repeatPattern', mode=MODE_TYPE, tag=(2, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ProprietaryInfo_repeatPattern._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=200)], ev=None, er=[])
    _ProprietaryInfo_maximumFileSize = OCT_STR(name='maximumFileSize', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProprietaryInfo_fileDetails = OCT_STR(name='fileDetails', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=b'\x01')
    _ProprietaryInfo_fileDetails._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    ProprietaryInfo._cont = ASN1Dict([
        ('specialFileInformation', _ProprietaryInfo_specialFileInformation),
        ('fillPattern', _ProprietaryInfo_fillPattern),
        ('repeatPattern', _ProprietaryInfo_repeatPattern),
        ('maximumFileSize', _ProprietaryInfo_maximumFileSize),
        ('fileDetails', _ProprietaryInfo_fileDetails),
        ])
    ProprietaryInfo._ext = []
    
    #-----< Fcp >-----#
    Fcp = SEQ(name='Fcp', mode=MODE_TYPE)
    _Fcp_fileDescriptor = OCT_STR(name='fileDescriptor', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Fcp_fileDescriptor._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=4)], ev=None, er=[])
    _Fcp_fileID = OCT_STR(name='fileID', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Fcp_fileID._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _Fcp_dfName = OCT_STR(name='dfName', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')), opt=True)
    _Fcp_lcsi = OCT_STR(name='lcsi', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=b'\x05')
    _Fcp_lcsi._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _Fcp_securityAttributesReferenced = OCT_STR(name='securityAttributesReferenced', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Fcp_securityAttributesReferenced._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    _Fcp_efFileSize = OCT_STR(name='efFileSize', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Fcp_pinStatusTemplateDO = OCT_STR(name='pinStatusTemplateDO', mode=MODE_TYPE, tag=(6, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _Fcp_shortEFID = OCT_STR(name='shortEFID', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Fcp_shortEFID._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=1)], ev=None, er=[])
    _Fcp_proprietaryEFInfo = SEQ(name='proprietaryEFInfo', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ProprietaryInfo')), opt=True)
    _Fcp_linkPath = OCT_STR(name='linkPath', mode=MODE_TYPE, tag=(7, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _Fcp_linkPath._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=8)], ev=None, er=[])
    Fcp._cont = ASN1Dict([
        ('fileDescriptor', _Fcp_fileDescriptor),
        ('fileID', _Fcp_fileID),
        ('dfName', _Fcp_dfName),
        ('lcsi', _Fcp_lcsi),
        ('securityAttributesReferenced', _Fcp_securityAttributesReferenced),
        ('efFileSize', _Fcp_efFileSize),
        ('pinStatusTemplateDO', _Fcp_pinStatusTemplateDO),
        ('shortEFID', _Fcp_shortEFID),
        ('proprietaryEFInfo', _Fcp_proprietaryEFInfo),
        ('linkPath', _Fcp_linkPath),
        ])
    Fcp._ext = []
    
    #-----< File >-----#
    File = SEQ_OF(name='File', mode=MODE_TYPE)
    _File__item_ = CHOICE(name='_item_', mode=MODE_TYPE)
    __File__item__doNotCreate = NULL(name='doNotCreate', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __File__item__fileDescriptor = SEQ(name='fileDescriptor', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'Fcp')))
    __File__item__fillFileOffset = INT(name='fillFileOffset', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt16')))
    __File__item__fillFileContent = OCT_STR(name='fillFileContent', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _File__item_._cont = ASN1Dict([
        ('doNotCreate', __File__item__doNotCreate),
        ('fileDescriptor', __File__item__fileDescriptor),
        ('fillFileOffset', __File__item__fillFileOffset),
        ('fillFileContent', __File__item__fillFileContent),
        ])
    _File__item_._ext = []
    File._cont = _File__item_
    
    #-----< PE-MF >-----#
    PE_MF = SEQ(name='PE-MF', mode=MODE_TYPE)
    _PE_MF_mf_header = SEQ(name='mf-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_MF_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_MF_mf = SEQ_OF(name='mf', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_MF_ef_pl = SEQ_OF(name='ef-pl', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_MF_ef_iccid = SEQ_OF(name='ef-iccid', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_MF_ef_dir = SEQ_OF(name='ef-dir', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_MF_ef_arr = SEQ_OF(name='ef-arr', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_MF_ef_umpc = SEQ_OF(name='ef-umpc', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_MF._cont = ASN1Dict([
        ('mf-header', _PE_MF_mf_header),
        ('templateID', _PE_MF_templateID),
        ('mf', _PE_MF_mf),
        ('ef-pl', _PE_MF_ef_pl),
        ('ef-iccid', _PE_MF_ef_iccid),
        ('ef-dir', _PE_MF_ef_dir),
        ('ef-arr', _PE_MF_ef_arr),
        ('ef-umpc', _PE_MF_ef_umpc),
        ])
    PE_MF._ext = []
    
    #-----< PE-CD >-----#
    PE_CD = SEQ(name='PE-CD', mode=MODE_TYPE)
    _PE_CD_cd_header = SEQ(name='cd-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_CD_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_CD_df_cd = SEQ_OF(name='df-cd', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CD_ef_launchpad = SEQ_OF(name='ef-launchpad', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_CD_ef_icon = SEQ_OF(name='ef-icon', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_CD._cont = ASN1Dict([
        ('cd-header', _PE_CD_cd_header),
        ('templateID', _PE_CD_templateID),
        ('df-cd', _PE_CD_df_cd),
        ('ef-launchpad', _PE_CD_ef_launchpad),
        ('ef-icon', _PE_CD_ef_icon),
        ])
    PE_CD._ext = []
    
    #-----< PE-TELECOM >-----#
    PE_TELECOM = SEQ(name='PE-TELECOM', mode=MODE_TYPE)
    _PE_TELECOM_telecom_header = SEQ(name='telecom-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_TELECOM_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_TELECOM_df_telecom = SEQ_OF(name='df-telecom', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_TELECOM_ef_arr = SEQ_OF(name='ef-arr', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_rma = SEQ_OF(name='ef-rma', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_sume = SEQ_OF(name='ef-sume', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_ice_dn = SEQ_OF(name='ef-ice-dn', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_ice_ff = SEQ_OF(name='ef-ice-ff', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_psismsc = SEQ_OF(name='ef-psismsc', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_df_graphics = SEQ_OF(name='df-graphics', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_img = SEQ_OF(name='ef-img', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_iidf = SEQ_OF(name='ef-iidf', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_ice_graphics = SEQ_OF(name='ef-ice-graphics', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_launch_scws = SEQ_OF(name='ef-launch-scws', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_icon = SEQ_OF(name='ef-icon', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_df_phonebook = SEQ_OF(name='df-phonebook', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_pbr = SEQ_OF(name='ef-pbr', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_ext1 = SEQ_OF(name='ef-ext1', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_aas = SEQ_OF(name='ef-aas', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_gas = SEQ_OF(name='ef-gas', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_psc = SEQ_OF(name='ef-psc', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_cc = SEQ_OF(name='ef-cc', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_puid = SEQ_OF(name='ef-puid', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_iap = SEQ_OF(name='ef-iap', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_adn = SEQ_OF(name='ef-adn', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_pbc = SEQ_OF(name='ef-pbc', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_anr = SEQ_OF(name='ef-anr', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_puri = SEQ_OF(name='ef-puri', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_email = SEQ_OF(name='ef-email', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_sne = SEQ_OF(name='ef-sne', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_uid = SEQ_OF(name='ef-uid', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_grp = SEQ_OF(name='ef-grp', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_ccp1 = SEQ_OF(name='ef-ccp1', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_df_multimedia = SEQ_OF(name='df-multimedia', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_mml = SEQ_OF(name='ef-mml', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_mmdf = SEQ_OF(name='ef-mmdf', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_df_mmss = SEQ_OF(name='df-mmss', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_mlpl = SEQ_OF(name='ef-mlpl', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_mspl = SEQ_OF(name='ef-mspl', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_mmssmode = SEQ_OF(name='ef-mmssmode', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_df_mcs = SEQ_OF(name='df-mcs', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_mst = SEQ_OF(name='ef-mst', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_mcs_config = SEQ_OF(name='ef-mcs-config', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_df_v2x = SEQ_OF(name='df-v2x', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_vst = SEQ_OF(name='ef-vst', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_v2x_config = SEQ_OF(name='ef-v2x-config', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_v2xp_pc5 = SEQ_OF(name='ef-v2xp-pc5', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_TELECOM_ef_v2xp_Uu = SEQ_OF(name='ef-v2xp-Uu', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_TELECOM._cont = ASN1Dict([
        ('telecom-header', _PE_TELECOM_telecom_header),
        ('templateID', _PE_TELECOM_templateID),
        ('df-telecom', _PE_TELECOM_df_telecom),
        ('ef-arr', _PE_TELECOM_ef_arr),
        ('ef-rma', _PE_TELECOM_ef_rma),
        ('ef-sume', _PE_TELECOM_ef_sume),
        ('ef-ice-dn', _PE_TELECOM_ef_ice_dn),
        ('ef-ice-ff', _PE_TELECOM_ef_ice_ff),
        ('ef-psismsc', _PE_TELECOM_ef_psismsc),
        ('df-graphics', _PE_TELECOM_df_graphics),
        ('ef-img', _PE_TELECOM_ef_img),
        ('ef-iidf', _PE_TELECOM_ef_iidf),
        ('ef-ice-graphics', _PE_TELECOM_ef_ice_graphics),
        ('ef-launch-scws', _PE_TELECOM_ef_launch_scws),
        ('ef-icon', _PE_TELECOM_ef_icon),
        ('df-phonebook', _PE_TELECOM_df_phonebook),
        ('ef-pbr', _PE_TELECOM_ef_pbr),
        ('ef-ext1', _PE_TELECOM_ef_ext1),
        ('ef-aas', _PE_TELECOM_ef_aas),
        ('ef-gas', _PE_TELECOM_ef_gas),
        ('ef-psc', _PE_TELECOM_ef_psc),
        ('ef-cc', _PE_TELECOM_ef_cc),
        ('ef-puid', _PE_TELECOM_ef_puid),
        ('ef-iap', _PE_TELECOM_ef_iap),
        ('ef-adn', _PE_TELECOM_ef_adn),
        ('ef-pbc', _PE_TELECOM_ef_pbc),
        ('ef-anr', _PE_TELECOM_ef_anr),
        ('ef-puri', _PE_TELECOM_ef_puri),
        ('ef-email', _PE_TELECOM_ef_email),
        ('ef-sne', _PE_TELECOM_ef_sne),
        ('ef-uid', _PE_TELECOM_ef_uid),
        ('ef-grp', _PE_TELECOM_ef_grp),
        ('ef-ccp1', _PE_TELECOM_ef_ccp1),
        ('df-multimedia', _PE_TELECOM_df_multimedia),
        ('ef-mml', _PE_TELECOM_ef_mml),
        ('ef-mmdf', _PE_TELECOM_ef_mmdf),
        ('df-mmss', _PE_TELECOM_df_mmss),
        ('ef-mlpl', _PE_TELECOM_ef_mlpl),
        ('ef-mspl', _PE_TELECOM_ef_mspl),
        ('ef-mmssmode', _PE_TELECOM_ef_mmssmode),
        ('df-mcs', _PE_TELECOM_df_mcs),
        ('ef-mst', _PE_TELECOM_ef_mst),
        ('ef-mcs-config', _PE_TELECOM_ef_mcs_config),
        ('df-v2x', _PE_TELECOM_df_v2x),
        ('ef-vst', _PE_TELECOM_ef_vst),
        ('ef-v2x-config', _PE_TELECOM_ef_v2x_config),
        ('ef-v2xp-pc5', _PE_TELECOM_ef_v2xp_pc5),
        ('ef-v2xp-Uu', _PE_TELECOM_ef_v2xp_Uu),
        ])
    PE_TELECOM._ext = []
    
    #-----< PE-USIM >-----#
    PE_USIM = SEQ(name='PE-USIM', mode=MODE_TYPE)
    _PE_USIM_usim_header = SEQ(name='usim-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_USIM_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_USIM_adf_usim = SEQ_OF(name='adf-usim', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_USIM_ef_imsi = SEQ_OF(name='ef-imsi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_USIM_ef_arr = SEQ_OF(name='ef-arr', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_USIM_ef_keys = SEQ_OF(name='ef-keys', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_keysPS = SEQ_OF(name='ef-keysPS', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_hpplmn = SEQ_OF(name='ef-hpplmn', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_ust = SEQ_OF(name='ef-ust', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_USIM_ef_fdn = SEQ_OF(name='ef-fdn', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_sms = SEQ_OF(name='ef-sms', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_smsp = SEQ_OF(name='ef-smsp', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_smss = SEQ_OF(name='ef-smss', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_spn = SEQ_OF(name='ef-spn', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_USIM_ef_est = SEQ_OF(name='ef-est', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_USIM_ef_start_hfn = SEQ_OF(name='ef-start-hfn', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_threshold = SEQ_OF(name='ef-threshold', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_psloci = SEQ_OF(name='ef-psloci', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_acc = SEQ_OF(name='ef-acc', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_USIM_ef_fplmn = SEQ_OF(name='ef-fplmn', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_loci = SEQ_OF(name='ef-loci', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_ad = SEQ_OF(name='ef-ad', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_ecc = SEQ_OF(name='ef-ecc', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_USIM_ef_netpar = SEQ_OF(name='ef-netpar', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_epsloci = SEQ_OF(name='ef-epsloci', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_USIM_ef_epsnsc = SEQ_OF(name='ef-epsnsc', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_USIM._cont = ASN1Dict([
        ('usim-header', _PE_USIM_usim_header),
        ('templateID', _PE_USIM_templateID),
        ('adf-usim', _PE_USIM_adf_usim),
        ('ef-imsi', _PE_USIM_ef_imsi),
        ('ef-arr', _PE_USIM_ef_arr),
        ('ef-keys', _PE_USIM_ef_keys),
        ('ef-keysPS', _PE_USIM_ef_keysPS),
        ('ef-hpplmn', _PE_USIM_ef_hpplmn),
        ('ef-ust', _PE_USIM_ef_ust),
        ('ef-fdn', _PE_USIM_ef_fdn),
        ('ef-sms', _PE_USIM_ef_sms),
        ('ef-smsp', _PE_USIM_ef_smsp),
        ('ef-smss', _PE_USIM_ef_smss),
        ('ef-spn', _PE_USIM_ef_spn),
        ('ef-est', _PE_USIM_ef_est),
        ('ef-start-hfn', _PE_USIM_ef_start_hfn),
        ('ef-threshold', _PE_USIM_ef_threshold),
        ('ef-psloci', _PE_USIM_ef_psloci),
        ('ef-acc', _PE_USIM_ef_acc),
        ('ef-fplmn', _PE_USIM_ef_fplmn),
        ('ef-loci', _PE_USIM_ef_loci),
        ('ef-ad', _PE_USIM_ef_ad),
        ('ef-ecc', _PE_USIM_ef_ecc),
        ('ef-netpar', _PE_USIM_ef_netpar),
        ('ef-epsloci', _PE_USIM_ef_epsloci),
        ('ef-epsnsc', _PE_USIM_ef_epsnsc),
        ])
    PE_USIM._ext = []
    
    #-----< PE-OPT-USIM >-----#
    PE_OPT_USIM = SEQ(name='PE-OPT-USIM', mode=MODE_TYPE)
    _PE_OPT_USIM_optusim_header = SEQ(name='optusim-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_OPT_USIM_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_OPT_USIM_ef_li = SEQ_OF(name='ef-li', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_acmax = SEQ_OF(name='ef-acmax', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_acm = SEQ_OF(name='ef-acm', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_gid1 = SEQ_OF(name='ef-gid1', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_gid2 = SEQ_OF(name='ef-gid2', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_msisdn = SEQ_OF(name='ef-msisdn', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_puct = SEQ_OF(name='ef-puct', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_cbmi = SEQ_OF(name='ef-cbmi', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_cbmid = SEQ_OF(name='ef-cbmid', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_sdn = SEQ_OF(name='ef-sdn', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ext2 = SEQ_OF(name='ef-ext2', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ext3 = SEQ_OF(name='ef-ext3', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_cbmir = SEQ_OF(name='ef-cbmir', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_plmnwact = SEQ_OF(name='ef-plmnwact', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_oplmnwact = SEQ_OF(name='ef-oplmnwact', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_hplmnwact = SEQ_OF(name='ef-hplmnwact', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_dck = SEQ_OF(name='ef-dck', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_cnl = SEQ_OF(name='ef-cnl', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_smsr = SEQ_OF(name='ef-smsr', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_bdn = SEQ_OF(name='ef-bdn', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ext5 = SEQ_OF(name='ef-ext5', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ccp2 = SEQ_OF(name='ef-ccp2', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ext4 = SEQ_OF(name='ef-ext4', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_acl = SEQ_OF(name='ef-acl', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_cmi = SEQ_OF(name='ef-cmi', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ici = SEQ_OF(name='ef-ici', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_oci = SEQ_OF(name='ef-oci', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ict = SEQ_OF(name='ef-ict', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_oct = SEQ_OF(name='ef-oct', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_vgcs = SEQ_OF(name='ef-vgcs', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_vgcss = SEQ_OF(name='ef-vgcss', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_vbs = SEQ_OF(name='ef-vbs', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_vbss = SEQ_OF(name='ef-vbss', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_emlpp = SEQ_OF(name='ef-emlpp', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_aaem = SEQ_OF(name='ef-aaem', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_hiddenkey = SEQ_OF(name='ef-hiddenkey', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_pnn = SEQ_OF(name='ef-pnn', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_opl = SEQ_OF(name='ef-opl', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_mbdn = SEQ_OF(name='ef-mbdn', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ext6 = SEQ_OF(name='ef-ext6', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_mbi = SEQ_OF(name='ef-mbi', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_mwis = SEQ_OF(name='ef-mwis', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_cfis = SEQ_OF(name='ef-cfis', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ext7 = SEQ_OF(name='ef-ext7', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_spdi = SEQ_OF(name='ef-spdi', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_mmsn = SEQ_OF(name='ef-mmsn', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ext8 = SEQ_OF(name='ef-ext8', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_mmsicp = SEQ_OF(name='ef-mmsicp', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_mmsup = SEQ_OF(name='ef-mmsup', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_mmsucp = SEQ_OF(name='ef-mmsucp', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_nia = SEQ_OF(name='ef-nia', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_vgcsca = SEQ_OF(name='ef-vgcsca', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_vbsca = SEQ_OF(name='ef-vbsca', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_gbabp = SEQ_OF(name='ef-gbabp', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_msk = SEQ_OF(name='ef-msk', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_muk = SEQ_OF(name='ef-muk', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ehplmn = SEQ_OF(name='ef-ehplmn', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_gbanl = SEQ_OF(name='ef-gbanl', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ehplmnpi = SEQ_OF(name='ef-ehplmnpi', mode=MODE_TYPE, tag=(60, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_lrplmnsi = SEQ_OF(name='ef-lrplmnsi', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_nafkca = SEQ_OF(name='ef-nafkca', mode=MODE_TYPE, tag=(62, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_spni = SEQ_OF(name='ef-spni', mode=MODE_TYPE, tag=(63, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_pnni = SEQ_OF(name='ef-pnni', mode=MODE_TYPE, tag=(64, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ncp_ip = SEQ_OF(name='ef-ncp-ip', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ufc = SEQ_OF(name='ef-ufc', mode=MODE_TYPE, tag=(66, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_nasconfig = SEQ_OF(name='ef-nasconfig', mode=MODE_TYPE, tag=(67, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_uicciari = SEQ_OF(name='ef-uicciari', mode=MODE_TYPE, tag=(68, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_pws = SEQ_OF(name='ef-pws', mode=MODE_TYPE, tag=(69, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_fdnuri = SEQ_OF(name='ef-fdnuri', mode=MODE_TYPE, tag=(70, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_bdnuri = SEQ_OF(name='ef-bdnuri', mode=MODE_TYPE, tag=(71, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_sdnuri = SEQ_OF(name='ef-sdnuri', mode=MODE_TYPE, tag=(72, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_iwl = SEQ_OF(name='ef-iwl', mode=MODE_TYPE, tag=(73, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ips = SEQ_OF(name='ef-ips', mode=MODE_TYPE, tag=(74, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_ipd = SEQ_OF(name='ef-ipd', mode=MODE_TYPE, tag=(75, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_epdgid = SEQ_OF(name='ef-epdgid', mode=MODE_TYPE, tag=(76, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_epdgselection = SEQ_OF(name='ef-epdgselection', mode=MODE_TYPE, tag=(77, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_epdgidem = SEQ_OF(name='ef-epdgidem', mode=MODE_TYPE, tag=(78, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_epdgselectionem = SEQ_OF(name='ef-epdgselectionem', mode=MODE_TYPE, tag=(79, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_frompreferred = SEQ_OF(name='ef-frompreferred', mode=MODE_TYPE, tag=(80, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_imsconfigdata = SEQ_OF(name='ef-imsconfigdata', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_3gpppsdataoff = SEQ_OF(name='ef-3gpppsdataoff', mode=MODE_TYPE, tag=(82, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_3gpppsdataoffservicelist = SEQ_OF(name='ef-3gpppsdataoffservicelist', mode=MODE_TYPE, tag=(83, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_xcapconfigdata = SEQ_OF(name='ef-xcapconfigdata', mode=MODE_TYPE, tag=(84, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_earfcnlist = SEQ_OF(name='ef-earfcnlist', mode=MODE_TYPE, tag=(85, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_USIM_ef_mudmidconfigdata = SEQ_OF(name='ef-mudmidconfigdata', mode=MODE_TYPE, tag=(86, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_OPT_USIM._cont = ASN1Dict([
        ('optusim-header', _PE_OPT_USIM_optusim_header),
        ('templateID', _PE_OPT_USIM_templateID),
        ('ef-li', _PE_OPT_USIM_ef_li),
        ('ef-acmax', _PE_OPT_USIM_ef_acmax),
        ('ef-acm', _PE_OPT_USIM_ef_acm),
        ('ef-gid1', _PE_OPT_USIM_ef_gid1),
        ('ef-gid2', _PE_OPT_USIM_ef_gid2),
        ('ef-msisdn', _PE_OPT_USIM_ef_msisdn),
        ('ef-puct', _PE_OPT_USIM_ef_puct),
        ('ef-cbmi', _PE_OPT_USIM_ef_cbmi),
        ('ef-cbmid', _PE_OPT_USIM_ef_cbmid),
        ('ef-sdn', _PE_OPT_USIM_ef_sdn),
        ('ef-ext2', _PE_OPT_USIM_ef_ext2),
        ('ef-ext3', _PE_OPT_USIM_ef_ext3),
        ('ef-cbmir', _PE_OPT_USIM_ef_cbmir),
        ('ef-plmnwact', _PE_OPT_USIM_ef_plmnwact),
        ('ef-oplmnwact', _PE_OPT_USIM_ef_oplmnwact),
        ('ef-hplmnwact', _PE_OPT_USIM_ef_hplmnwact),
        ('ef-dck', _PE_OPT_USIM_ef_dck),
        ('ef-cnl', _PE_OPT_USIM_ef_cnl),
        ('ef-smsr', _PE_OPT_USIM_ef_smsr),
        ('ef-bdn', _PE_OPT_USIM_ef_bdn),
        ('ef-ext5', _PE_OPT_USIM_ef_ext5),
        ('ef-ccp2', _PE_OPT_USIM_ef_ccp2),
        ('ef-ext4', _PE_OPT_USIM_ef_ext4),
        ('ef-acl', _PE_OPT_USIM_ef_acl),
        ('ef-cmi', _PE_OPT_USIM_ef_cmi),
        ('ef-ici', _PE_OPT_USIM_ef_ici),
        ('ef-oci', _PE_OPT_USIM_ef_oci),
        ('ef-ict', _PE_OPT_USIM_ef_ict),
        ('ef-oct', _PE_OPT_USIM_ef_oct),
        ('ef-vgcs', _PE_OPT_USIM_ef_vgcs),
        ('ef-vgcss', _PE_OPT_USIM_ef_vgcss),
        ('ef-vbs', _PE_OPT_USIM_ef_vbs),
        ('ef-vbss', _PE_OPT_USIM_ef_vbss),
        ('ef-emlpp', _PE_OPT_USIM_ef_emlpp),
        ('ef-aaem', _PE_OPT_USIM_ef_aaem),
        ('ef-hiddenkey', _PE_OPT_USIM_ef_hiddenkey),
        ('ef-pnn', _PE_OPT_USIM_ef_pnn),
        ('ef-opl', _PE_OPT_USIM_ef_opl),
        ('ef-mbdn', _PE_OPT_USIM_ef_mbdn),
        ('ef-ext6', _PE_OPT_USIM_ef_ext6),
        ('ef-mbi', _PE_OPT_USIM_ef_mbi),
        ('ef-mwis', _PE_OPT_USIM_ef_mwis),
        ('ef-cfis', _PE_OPT_USIM_ef_cfis),
        ('ef-ext7', _PE_OPT_USIM_ef_ext7),
        ('ef-spdi', _PE_OPT_USIM_ef_spdi),
        ('ef-mmsn', _PE_OPT_USIM_ef_mmsn),
        ('ef-ext8', _PE_OPT_USIM_ef_ext8),
        ('ef-mmsicp', _PE_OPT_USIM_ef_mmsicp),
        ('ef-mmsup', _PE_OPT_USIM_ef_mmsup),
        ('ef-mmsucp', _PE_OPT_USIM_ef_mmsucp),
        ('ef-nia', _PE_OPT_USIM_ef_nia),
        ('ef-vgcsca', _PE_OPT_USIM_ef_vgcsca),
        ('ef-vbsca', _PE_OPT_USIM_ef_vbsca),
        ('ef-gbabp', _PE_OPT_USIM_ef_gbabp),
        ('ef-msk', _PE_OPT_USIM_ef_msk),
        ('ef-muk', _PE_OPT_USIM_ef_muk),
        ('ef-ehplmn', _PE_OPT_USIM_ef_ehplmn),
        ('ef-gbanl', _PE_OPT_USIM_ef_gbanl),
        ('ef-ehplmnpi', _PE_OPT_USIM_ef_ehplmnpi),
        ('ef-lrplmnsi', _PE_OPT_USIM_ef_lrplmnsi),
        ('ef-nafkca', _PE_OPT_USIM_ef_nafkca),
        ('ef-spni', _PE_OPT_USIM_ef_spni),
        ('ef-pnni', _PE_OPT_USIM_ef_pnni),
        ('ef-ncp-ip', _PE_OPT_USIM_ef_ncp_ip),
        ('ef-ufc', _PE_OPT_USIM_ef_ufc),
        ('ef-nasconfig', _PE_OPT_USIM_ef_nasconfig),
        ('ef-uicciari', _PE_OPT_USIM_ef_uicciari),
        ('ef-pws', _PE_OPT_USIM_ef_pws),
        ('ef-fdnuri', _PE_OPT_USIM_ef_fdnuri),
        ('ef-bdnuri', _PE_OPT_USIM_ef_bdnuri),
        ('ef-sdnuri', _PE_OPT_USIM_ef_sdnuri),
        ('ef-iwl', _PE_OPT_USIM_ef_iwl),
        ('ef-ips', _PE_OPT_USIM_ef_ips),
        ('ef-ipd', _PE_OPT_USIM_ef_ipd),
        ('ef-epdgid', _PE_OPT_USIM_ef_epdgid),
        ('ef-epdgselection', _PE_OPT_USIM_ef_epdgselection),
        ('ef-epdgidem', _PE_OPT_USIM_ef_epdgidem),
        ('ef-epdgselectionem', _PE_OPT_USIM_ef_epdgselectionem),
        ('ef-frompreferred', _PE_OPT_USIM_ef_frompreferred),
        ('ef-imsconfigdata', _PE_OPT_USIM_ef_imsconfigdata),
        ('ef-3gpppsdataoff', _PE_OPT_USIM_ef_3gpppsdataoff),
        ('ef-3gpppsdataoffservicelist', _PE_OPT_USIM_ef_3gpppsdataoffservicelist),
        ('ef-xcapconfigdata', _PE_OPT_USIM_ef_xcapconfigdata),
        ('ef-earfcnlist', _PE_OPT_USIM_ef_earfcnlist),
        ('ef-mudmidconfigdata', _PE_OPT_USIM_ef_mudmidconfigdata),
        ])
    PE_OPT_USIM._ext = []
    
    #-----< PE-PHONEBOOK >-----#
    PE_PHONEBOOK = SEQ(name='PE-PHONEBOOK', mode=MODE_TYPE)
    _PE_PHONEBOOK_phonebook_header = SEQ(name='phonebook-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_PHONEBOOK_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_PHONEBOOK_df_phonebook = SEQ_OF(name='df-phonebook', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_PHONEBOOK_ef_pbr = SEQ_OF(name='ef-pbr', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_ext1 = SEQ_OF(name='ef-ext1', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_aas = SEQ_OF(name='ef-aas', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_gas = SEQ_OF(name='ef-gas', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_psc = SEQ_OF(name='ef-psc', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_cc = SEQ_OF(name='ef-cc', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_puid = SEQ_OF(name='ef-puid', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_iap = SEQ_OF(name='ef-iap', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_adn = SEQ_OF(name='ef-adn', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_pbc = SEQ_OF(name='ef-pbc', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_anr = SEQ_OF(name='ef-anr', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_puri = SEQ_OF(name='ef-puri', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_email = SEQ_OF(name='ef-email', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_sne = SEQ_OF(name='ef-sne', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_uid = SEQ_OF(name='ef-uid', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_grp = SEQ_OF(name='ef-grp', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_PHONEBOOK_ef_ccp1 = SEQ_OF(name='ef-ccp1', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_PHONEBOOK._cont = ASN1Dict([
        ('phonebook-header', _PE_PHONEBOOK_phonebook_header),
        ('templateID', _PE_PHONEBOOK_templateID),
        ('df-phonebook', _PE_PHONEBOOK_df_phonebook),
        ('ef-pbr', _PE_PHONEBOOK_ef_pbr),
        ('ef-ext1', _PE_PHONEBOOK_ef_ext1),
        ('ef-aas', _PE_PHONEBOOK_ef_aas),
        ('ef-gas', _PE_PHONEBOOK_ef_gas),
        ('ef-psc', _PE_PHONEBOOK_ef_psc),
        ('ef-cc', _PE_PHONEBOOK_ef_cc),
        ('ef-puid', _PE_PHONEBOOK_ef_puid),
        ('ef-iap', _PE_PHONEBOOK_ef_iap),
        ('ef-adn', _PE_PHONEBOOK_ef_adn),
        ('ef-pbc', _PE_PHONEBOOK_ef_pbc),
        ('ef-anr', _PE_PHONEBOOK_ef_anr),
        ('ef-puri', _PE_PHONEBOOK_ef_puri),
        ('ef-email', _PE_PHONEBOOK_ef_email),
        ('ef-sne', _PE_PHONEBOOK_ef_sne),
        ('ef-uid', _PE_PHONEBOOK_ef_uid),
        ('ef-grp', _PE_PHONEBOOK_ef_grp),
        ('ef-ccp1', _PE_PHONEBOOK_ef_ccp1),
        ])
    PE_PHONEBOOK._ext = []
    
    #-----< PE-GSM-ACCESS >-----#
    PE_GSM_ACCESS = SEQ(name='PE-GSM-ACCESS', mode=MODE_TYPE)
    _PE_GSM_ACCESS_gsm_access_header = SEQ(name='gsm-access-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_GSM_ACCESS_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_GSM_ACCESS_df_gsm_access = SEQ_OF(name='df-gsm-access', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_GSM_ACCESS_ef_kc = SEQ_OF(name='ef-kc', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_GSM_ACCESS_ef_kcgprs = SEQ_OF(name='ef-kcgprs', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_GSM_ACCESS_ef_cpbcch = SEQ_OF(name='ef-cpbcch', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_GSM_ACCESS_ef_invscan = SEQ_OF(name='ef-invscan', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_GSM_ACCESS._cont = ASN1Dict([
        ('gsm-access-header', _PE_GSM_ACCESS_gsm_access_header),
        ('templateID', _PE_GSM_ACCESS_templateID),
        ('df-gsm-access', _PE_GSM_ACCESS_df_gsm_access),
        ('ef-kc', _PE_GSM_ACCESS_ef_kc),
        ('ef-kcgprs', _PE_GSM_ACCESS_ef_kcgprs),
        ('ef-cpbcch', _PE_GSM_ACCESS_ef_cpbcch),
        ('ef-invscan', _PE_GSM_ACCESS_ef_invscan),
        ])
    PE_GSM_ACCESS._ext = []
    
    #-----< PE-DF-5GS >-----#
    PE_DF_5GS = SEQ(name='PE-DF-5GS', mode=MODE_TYPE)
    _PE_DF_5GS_df_5gs_header = SEQ(name='df-5gs-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_DF_5GS_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_DF_5GS_df_df_5gs = SEQ_OF(name='df-df-5gs', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_DF_5GS_ef_5gs3gpploci = SEQ_OF(name='ef-5gs3gpploci', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_5gsn3gpploci = SEQ_OF(name='ef-5gsn3gpploci', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_5gs3gppnsc = SEQ_OF(name='ef-5gs3gppnsc', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_5gsn3gppnsc = SEQ_OF(name='ef-5gsn3gppnsc', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_5gauthkeys = SEQ_OF(name='ef-5gauthkeys', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_uac_aic = SEQ_OF(name='ef-uac-aic', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_suci_calc_info = SEQ_OF(name='ef-suci-calc-info', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_opl5g = SEQ_OF(name='ef-opl5g', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_supinai = SEQ_OF(name='ef-supinai', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_routing_indicator = SEQ_OF(name='ef-routing-indicator', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_ursp = SEQ_OF(name='ef-ursp', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_DF_5GS_ef_tn3gppsnn = SEQ_OF(name='ef-tn3gppsnn', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_DF_5GS._cont = ASN1Dict([
        ('df-5gs-header', _PE_DF_5GS_df_5gs_header),
        ('templateID', _PE_DF_5GS_templateID),
        ('df-df-5gs', _PE_DF_5GS_df_df_5gs),
        ('ef-5gs3gpploci', _PE_DF_5GS_ef_5gs3gpploci),
        ('ef-5gsn3gpploci', _PE_DF_5GS_ef_5gsn3gpploci),
        ('ef-5gs3gppnsc', _PE_DF_5GS_ef_5gs3gppnsc),
        ('ef-5gsn3gppnsc', _PE_DF_5GS_ef_5gsn3gppnsc),
        ('ef-5gauthkeys', _PE_DF_5GS_ef_5gauthkeys),
        ('ef-uac-aic', _PE_DF_5GS_ef_uac_aic),
        ('ef-suci-calc-info', _PE_DF_5GS_ef_suci_calc_info),
        ('ef-opl5g', _PE_DF_5GS_ef_opl5g),
        ('ef-supinai', _PE_DF_5GS_ef_supinai),
        ('ef-routing-indicator', _PE_DF_5GS_ef_routing_indicator),
        ('ef-ursp', _PE_DF_5GS_ef_ursp),
        ('ef-tn3gppsnn', _PE_DF_5GS_ef_tn3gppsnn),
        ])
    PE_DF_5GS._ext = []
    
    #-----< PE-DF-SAIP >-----#
    PE_DF_SAIP = SEQ(name='PE-DF-SAIP', mode=MODE_TYPE)
    _PE_DF_SAIP_df_saip_header = SEQ(name='df-saip-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_DF_SAIP_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_DF_SAIP_df_df_saip = SEQ_OF(name='df-df-saip', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_DF_SAIP_ef_suci_calc_info_usim = SEQ_OF(name='ef-suci-calc-info-usim', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_DF_SAIP._cont = ASN1Dict([
        ('df-saip-header', _PE_DF_SAIP_df_saip_header),
        ('templateID', _PE_DF_SAIP_templateID),
        ('df-df-saip', _PE_DF_SAIP_df_df_saip),
        ('ef-suci-calc-info-usim', _PE_DF_SAIP_ef_suci_calc_info_usim),
        ])
    PE_DF_SAIP._ext = []
    
    #-----< PE-ISIM >-----#
    PE_ISIM = SEQ(name='PE-ISIM', mode=MODE_TYPE)
    _PE_ISIM_isim_header = SEQ(name='isim-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_ISIM_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_ISIM_adf_isim = SEQ_OF(name='adf-isim', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_ISIM_ef_impi = SEQ_OF(name='ef-impi', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_ISIM_ef_impu = SEQ_OF(name='ef-impu', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_ISIM_ef_domain = SEQ_OF(name='ef-domain', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_ISIM_ef_ist = SEQ_OF(name='ef-ist', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_ISIM_ef_ad = SEQ_OF(name='ef-ad', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_ISIM_ef_arr = SEQ_OF(name='ef-arr', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    PE_ISIM._cont = ASN1Dict([
        ('isim-header', _PE_ISIM_isim_header),
        ('templateID', _PE_ISIM_templateID),
        ('adf-isim', _PE_ISIM_adf_isim),
        ('ef-impi', _PE_ISIM_ef_impi),
        ('ef-impu', _PE_ISIM_ef_impu),
        ('ef-domain', _PE_ISIM_ef_domain),
        ('ef-ist', _PE_ISIM_ef_ist),
        ('ef-ad', _PE_ISIM_ef_ad),
        ('ef-arr', _PE_ISIM_ef_arr),
        ])
    PE_ISIM._ext = []
    
    #-----< PE-OPT-ISIM >-----#
    PE_OPT_ISIM = SEQ(name='PE-OPT-ISIM', mode=MODE_TYPE)
    _PE_OPT_ISIM_optisim_header = SEQ(name='optisim-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_OPT_ISIM_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_OPT_ISIM_ef_pcscf = SEQ_OF(name='ef-pcscf', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_sms = SEQ_OF(name='ef-sms', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_smsp = SEQ_OF(name='ef-smsp', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_smss = SEQ_OF(name='ef-smss', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_smsr = SEQ_OF(name='ef-smsr', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_gbabp = SEQ_OF(name='ef-gbabp', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_gbanl = SEQ_OF(name='ef-gbanl', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_nafkca = SEQ_OF(name='ef-nafkca', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_uicciari = SEQ_OF(name='ef-uicciari', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_frompreferred = SEQ_OF(name='ef-frompreferred', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_imsconfigdata = SEQ_OF(name='ef-imsconfigdata', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_xcapconfigdata = SEQ_OF(name='ef-xcapconfigdata', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_webrtcuri = SEQ_OF(name='ef-webrtcuri', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_ISIM_ef_mudmidconfigdata = SEQ_OF(name='ef-mudmidconfigdata', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_OPT_ISIM._cont = ASN1Dict([
        ('optisim-header', _PE_OPT_ISIM_optisim_header),
        ('templateID', _PE_OPT_ISIM_templateID),
        ('ef-pcscf', _PE_OPT_ISIM_ef_pcscf),
        ('ef-sms', _PE_OPT_ISIM_ef_sms),
        ('ef-smsp', _PE_OPT_ISIM_ef_smsp),
        ('ef-smss', _PE_OPT_ISIM_ef_smss),
        ('ef-smsr', _PE_OPT_ISIM_ef_smsr),
        ('ef-gbabp', _PE_OPT_ISIM_ef_gbabp),
        ('ef-gbanl', _PE_OPT_ISIM_ef_gbanl),
        ('ef-nafkca', _PE_OPT_ISIM_ef_nafkca),
        ('ef-uicciari', _PE_OPT_ISIM_ef_uicciari),
        ('ef-frompreferred', _PE_OPT_ISIM_ef_frompreferred),
        ('ef-imsconfigdata', _PE_OPT_ISIM_ef_imsconfigdata),
        ('ef-xcapconfigdata', _PE_OPT_ISIM_ef_xcapconfigdata),
        ('ef-webrtcuri', _PE_OPT_ISIM_ef_webrtcuri),
        ('ef-mudmidconfigdata', _PE_OPT_ISIM_ef_mudmidconfigdata),
        ])
    PE_OPT_ISIM._ext = []
    
    #-----< PE-CSIM >-----#
    PE_CSIM = SEQ(name='PE-CSIM', mode=MODE_TYPE)
    _PE_CSIM_csim_header = SEQ(name='csim-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_CSIM_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_CSIM_adf_csim = SEQ_OF(name='adf-csim', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_arr = SEQ_OF(name='ef-arr', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_call_count = SEQ_OF(name='ef-call-count', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_imsi_m = SEQ_OF(name='ef-imsi-m', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_imsi_t = SEQ_OF(name='ef-imsi-t', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_tmsi = SEQ_OF(name='ef-tmsi', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_ah = SEQ_OF(name='ef-ah', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_aop = SEQ_OF(name='ef-aop', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_aloc = SEQ_OF(name='ef-aloc', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_cdmahome = SEQ_OF(name='ef-cdmahome', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_znregi = SEQ_OF(name='ef-znregi', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_snregi = SEQ_OF(name='ef-snregi', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_distregi = SEQ_OF(name='ef-distregi', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_accolc = SEQ_OF(name='ef-accolc', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_term = SEQ_OF(name='ef-term', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_acp = SEQ_OF(name='ef-acp', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_prl = SEQ_OF(name='ef-prl', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_ruimid = SEQ_OF(name='ef-ruimid', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_csim_st = SEQ_OF(name='ef-csim-st', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_spc = SEQ_OF(name='ef-spc', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_otapaspc = SEQ_OF(name='ef-otapaspc', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_namlock = SEQ_OF(name='ef-namlock', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_ota = SEQ_OF(name='ef-ota', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_sp = SEQ_OF(name='ef-sp', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_esn_meid_me = SEQ_OF(name='ef-esn-meid-me', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_li = SEQ_OF(name='ef-li', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_usgind = SEQ_OF(name='ef-usgind', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_ad = SEQ_OF(name='ef-ad', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_max_prl = SEQ_OF(name='ef-max-prl', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_spcs = SEQ_OF(name='ef-spcs', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_mecrp = SEQ_OF(name='ef-mecrp', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_home_tag = SEQ_OF(name='ef-home-tag', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_group_tag = SEQ_OF(name='ef-group-tag', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_specific_tag = SEQ_OF(name='ef-specific-tag', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_CSIM_ef_call_prompt = SEQ_OF(name='ef-call-prompt', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    PE_CSIM._cont = ASN1Dict([
        ('csim-header', _PE_CSIM_csim_header),
        ('templateID', _PE_CSIM_templateID),
        ('adf-csim', _PE_CSIM_adf_csim),
        ('ef-arr', _PE_CSIM_ef_arr),
        ('ef-call-count', _PE_CSIM_ef_call_count),
        ('ef-imsi-m', _PE_CSIM_ef_imsi_m),
        ('ef-imsi-t', _PE_CSIM_ef_imsi_t),
        ('ef-tmsi', _PE_CSIM_ef_tmsi),
        ('ef-ah', _PE_CSIM_ef_ah),
        ('ef-aop', _PE_CSIM_ef_aop),
        ('ef-aloc', _PE_CSIM_ef_aloc),
        ('ef-cdmahome', _PE_CSIM_ef_cdmahome),
        ('ef-znregi', _PE_CSIM_ef_znregi),
        ('ef-snregi', _PE_CSIM_ef_snregi),
        ('ef-distregi', _PE_CSIM_ef_distregi),
        ('ef-accolc', _PE_CSIM_ef_accolc),
        ('ef-term', _PE_CSIM_ef_term),
        ('ef-acp', _PE_CSIM_ef_acp),
        ('ef-prl', _PE_CSIM_ef_prl),
        ('ef-ruimid', _PE_CSIM_ef_ruimid),
        ('ef-csim-st', _PE_CSIM_ef_csim_st),
        ('ef-spc', _PE_CSIM_ef_spc),
        ('ef-otapaspc', _PE_CSIM_ef_otapaspc),
        ('ef-namlock', _PE_CSIM_ef_namlock),
        ('ef-ota', _PE_CSIM_ef_ota),
        ('ef-sp', _PE_CSIM_ef_sp),
        ('ef-esn-meid-me', _PE_CSIM_ef_esn_meid_me),
        ('ef-li', _PE_CSIM_ef_li),
        ('ef-usgind', _PE_CSIM_ef_usgind),
        ('ef-ad', _PE_CSIM_ef_ad),
        ('ef-max-prl', _PE_CSIM_ef_max_prl),
        ('ef-spcs', _PE_CSIM_ef_spcs),
        ('ef-mecrp', _PE_CSIM_ef_mecrp),
        ('ef-home-tag', _PE_CSIM_ef_home_tag),
        ('ef-group-tag', _PE_CSIM_ef_group_tag),
        ('ef-specific-tag', _PE_CSIM_ef_specific_tag),
        ('ef-call-prompt', _PE_CSIM_ef_call_prompt),
        ])
    PE_CSIM._ext = []
    
    #-----< PE-OPT-CSIM >-----#
    PE_OPT_CSIM = SEQ(name='PE-OPT-CSIM', mode=MODE_TYPE)
    _PE_OPT_CSIM_optcsim_header = SEQ(name='optcsim-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_OPT_CSIM_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_OPT_CSIM_ef_ssci = SEQ_OF(name='ef-ssci', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_fdn = SEQ_OF(name='ef-fdn', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_sms = SEQ_OF(name='ef-sms', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_smsp = SEQ_OF(name='ef-smsp', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_smss = SEQ_OF(name='ef-smss', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_ssfc = SEQ_OF(name='ef-ssfc', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_spn = SEQ_OF(name='ef-spn', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_mdn = SEQ_OF(name='ef-mdn', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_ecc = SEQ_OF(name='ef-ecc', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_me3gpdopc = SEQ_OF(name='ef-me3gpdopc', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_3gpdopm = SEQ_OF(name='ef-3gpdopm', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_sipcap = SEQ_OF(name='ef-sipcap', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_mipcap = SEQ_OF(name='ef-mipcap', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_sipupp = SEQ_OF(name='ef-sipupp', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_mipupp = SEQ_OF(name='ef-mipupp', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_sipsp = SEQ_OF(name='ef-sipsp', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_mipsp = SEQ_OF(name='ef-mipsp', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_sippapss = SEQ_OF(name='ef-sippapss', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_puzl = SEQ_OF(name='ef-puzl', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_maxpuzl = SEQ_OF(name='ef-maxpuzl', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_hrpdcap = SEQ_OF(name='ef-hrpdcap', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_hrpdupp = SEQ_OF(name='ef-hrpdupp', mode=MODE_TYPE, tag=(23, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_csspr = SEQ_OF(name='ef-csspr', mode=MODE_TYPE, tag=(24, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_atc = SEQ_OF(name='ef-atc', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_eprl = SEQ_OF(name='ef-eprl', mode=MODE_TYPE, tag=(26, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_bcsmscfg = SEQ_OF(name='ef-bcsmscfg', mode=MODE_TYPE, tag=(27, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_bcsmspref = SEQ_OF(name='ef-bcsmspref', mode=MODE_TYPE, tag=(28, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_bcsmstable = SEQ_OF(name='ef-bcsmstable', mode=MODE_TYPE, tag=(29, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_bcsmsp = SEQ_OF(name='ef-bcsmsp', mode=MODE_TYPE, tag=(30, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_bakpara = SEQ_OF(name='ef-bakpara', mode=MODE_TYPE, tag=(31, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_upbakpara = SEQ_OF(name='ef-upbakpara', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_mmsn = SEQ_OF(name='ef-mmsn', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_ext8 = SEQ_OF(name='ef-ext8', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_mmsicp = SEQ_OF(name='ef-mmsicp', mode=MODE_TYPE, tag=(35, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_mmsup = SEQ_OF(name='ef-mmsup', mode=MODE_TYPE, tag=(36, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_mmsucp = SEQ_OF(name='ef-mmsucp', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_auth_capability = SEQ_OF(name='ef-auth-capability', mode=MODE_TYPE, tag=(38, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_3gcik = SEQ_OF(name='ef-3gcik', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_dck = SEQ_OF(name='ef-dck', mode=MODE_TYPE, tag=(40, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_gid1 = SEQ_OF(name='ef-gid1', mode=MODE_TYPE, tag=(41, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_gid2 = SEQ_OF(name='ef-gid2', mode=MODE_TYPE, tag=(42, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_cdmacnl = SEQ_OF(name='ef-cdmacnl', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_sf_euimid = SEQ_OF(name='ef-sf-euimid', mode=MODE_TYPE, tag=(44, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_est = SEQ_OF(name='ef-est', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_hidden_key = SEQ_OF(name='ef-hidden-key', mode=MODE_TYPE, tag=(46, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_lcsver = SEQ_OF(name='ef-lcsver', mode=MODE_TYPE, tag=(47, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_lcscp = SEQ_OF(name='ef-lcscp', mode=MODE_TYPE, tag=(48, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_sdn = SEQ_OF(name='ef-sdn', mode=MODE_TYPE, tag=(49, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_ext2 = SEQ_OF(name='ef-ext2', mode=MODE_TYPE, tag=(50, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_ext3 = SEQ_OF(name='ef-ext3', mode=MODE_TYPE, tag=(51, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_ici = SEQ_OF(name='ef-ici', mode=MODE_TYPE, tag=(52, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_oci = SEQ_OF(name='ef-oci', mode=MODE_TYPE, tag=(53, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_ext5 = SEQ_OF(name='ef-ext5', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_ccp2 = SEQ_OF(name='ef-ccp2', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_applabels = SEQ_OF(name='ef-applabels', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_model = SEQ_OF(name='ef-model', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_rc = SEQ_OF(name='ef-rc', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_smscap = SEQ_OF(name='ef-smscap', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_mipflags = SEQ_OF(name='ef-mipflags', mode=MODE_TYPE, tag=(60, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_3gpduppext = SEQ_OF(name='ef-3gpduppext', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_ipv6cap = SEQ_OF(name='ef-ipv6cap', mode=MODE_TYPE, tag=(62, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_tcpconfig = SEQ_OF(name='ef-tcpconfig', mode=MODE_TYPE, tag=(63, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_dgc = SEQ_OF(name='ef-dgc', mode=MODE_TYPE, tag=(64, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_wapbrowsercp = SEQ_OF(name='ef-wapbrowsercp', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_wapbrowserbm = SEQ_OF(name='ef-wapbrowserbm', mode=MODE_TYPE, tag=(66, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_mmsconfig = SEQ_OF(name='ef-mmsconfig', mode=MODE_TYPE, tag=(67, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_OPT_CSIM_ef_jdl = SEQ_OF(name='ef-jdl', mode=MODE_TYPE, tag=(68, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_OPT_CSIM._cont = ASN1Dict([
        ('optcsim-header', _PE_OPT_CSIM_optcsim_header),
        ('templateID', _PE_OPT_CSIM_templateID),
        ('ef-ssci', _PE_OPT_CSIM_ef_ssci),
        ('ef-fdn', _PE_OPT_CSIM_ef_fdn),
        ('ef-sms', _PE_OPT_CSIM_ef_sms),
        ('ef-smsp', _PE_OPT_CSIM_ef_smsp),
        ('ef-smss', _PE_OPT_CSIM_ef_smss),
        ('ef-ssfc', _PE_OPT_CSIM_ef_ssfc),
        ('ef-spn', _PE_OPT_CSIM_ef_spn),
        ('ef-mdn', _PE_OPT_CSIM_ef_mdn),
        ('ef-ecc', _PE_OPT_CSIM_ef_ecc),
        ('ef-me3gpdopc', _PE_OPT_CSIM_ef_me3gpdopc),
        ('ef-3gpdopm', _PE_OPT_CSIM_ef_3gpdopm),
        ('ef-sipcap', _PE_OPT_CSIM_ef_sipcap),
        ('ef-mipcap', _PE_OPT_CSIM_ef_mipcap),
        ('ef-sipupp', _PE_OPT_CSIM_ef_sipupp),
        ('ef-mipupp', _PE_OPT_CSIM_ef_mipupp),
        ('ef-sipsp', _PE_OPT_CSIM_ef_sipsp),
        ('ef-mipsp', _PE_OPT_CSIM_ef_mipsp),
        ('ef-sippapss', _PE_OPT_CSIM_ef_sippapss),
        ('ef-puzl', _PE_OPT_CSIM_ef_puzl),
        ('ef-maxpuzl', _PE_OPT_CSIM_ef_maxpuzl),
        ('ef-hrpdcap', _PE_OPT_CSIM_ef_hrpdcap),
        ('ef-hrpdupp', _PE_OPT_CSIM_ef_hrpdupp),
        ('ef-csspr', _PE_OPT_CSIM_ef_csspr),
        ('ef-atc', _PE_OPT_CSIM_ef_atc),
        ('ef-eprl', _PE_OPT_CSIM_ef_eprl),
        ('ef-bcsmscfg', _PE_OPT_CSIM_ef_bcsmscfg),
        ('ef-bcsmspref', _PE_OPT_CSIM_ef_bcsmspref),
        ('ef-bcsmstable', _PE_OPT_CSIM_ef_bcsmstable),
        ('ef-bcsmsp', _PE_OPT_CSIM_ef_bcsmsp),
        ('ef-bakpara', _PE_OPT_CSIM_ef_bakpara),
        ('ef-upbakpara', _PE_OPT_CSIM_ef_upbakpara),
        ('ef-mmsn', _PE_OPT_CSIM_ef_mmsn),
        ('ef-ext8', _PE_OPT_CSIM_ef_ext8),
        ('ef-mmsicp', _PE_OPT_CSIM_ef_mmsicp),
        ('ef-mmsup', _PE_OPT_CSIM_ef_mmsup),
        ('ef-mmsucp', _PE_OPT_CSIM_ef_mmsucp),
        ('ef-auth-capability', _PE_OPT_CSIM_ef_auth_capability),
        ('ef-3gcik', _PE_OPT_CSIM_ef_3gcik),
        ('ef-dck', _PE_OPT_CSIM_ef_dck),
        ('ef-gid1', _PE_OPT_CSIM_ef_gid1),
        ('ef-gid2', _PE_OPT_CSIM_ef_gid2),
        ('ef-cdmacnl', _PE_OPT_CSIM_ef_cdmacnl),
        ('ef-sf-euimid', _PE_OPT_CSIM_ef_sf_euimid),
        ('ef-est', _PE_OPT_CSIM_ef_est),
        ('ef-hidden-key', _PE_OPT_CSIM_ef_hidden_key),
        ('ef-lcsver', _PE_OPT_CSIM_ef_lcsver),
        ('ef-lcscp', _PE_OPT_CSIM_ef_lcscp),
        ('ef-sdn', _PE_OPT_CSIM_ef_sdn),
        ('ef-ext2', _PE_OPT_CSIM_ef_ext2),
        ('ef-ext3', _PE_OPT_CSIM_ef_ext3),
        ('ef-ici', _PE_OPT_CSIM_ef_ici),
        ('ef-oci', _PE_OPT_CSIM_ef_oci),
        ('ef-ext5', _PE_OPT_CSIM_ef_ext5),
        ('ef-ccp2', _PE_OPT_CSIM_ef_ccp2),
        ('ef-applabels', _PE_OPT_CSIM_ef_applabels),
        ('ef-model', _PE_OPT_CSIM_ef_model),
        ('ef-rc', _PE_OPT_CSIM_ef_rc),
        ('ef-smscap', _PE_OPT_CSIM_ef_smscap),
        ('ef-mipflags', _PE_OPT_CSIM_ef_mipflags),
        ('ef-3gpduppext', _PE_OPT_CSIM_ef_3gpduppext),
        ('ef-ipv6cap', _PE_OPT_CSIM_ef_ipv6cap),
        ('ef-tcpconfig', _PE_OPT_CSIM_ef_tcpconfig),
        ('ef-dgc', _PE_OPT_CSIM_ef_dgc),
        ('ef-wapbrowsercp', _PE_OPT_CSIM_ef_wapbrowsercp),
        ('ef-wapbrowserbm', _PE_OPT_CSIM_ef_wapbrowserbm),
        ('ef-mmsconfig', _PE_OPT_CSIM_ef_mmsconfig),
        ('ef-jdl', _PE_OPT_CSIM_ef_jdl),
        ])
    PE_OPT_CSIM._ext = []
    
    #-----< PE-EAP >-----#
    PE_EAP = SEQ(name='PE-EAP', mode=MODE_TYPE)
    _PE_EAP_eap_header = SEQ(name='eap-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_EAP_templateID = OID(name='templateID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_EAP_df_eap = SEQ_OF(name='df-eap', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_EAP_ef_eapkeys = SEQ_OF(name='ef-eapkeys', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_EAP_ef_eapstatus = SEQ_OF(name='ef-eapstatus', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')))
    _PE_EAP_ef_puid = SEQ_OF(name='ef-puid', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_EAP_ef_ps = SEQ_OF(name='ef-ps', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_EAP_ef_curid = SEQ_OF(name='ef-curid', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_EAP_ef_reid = SEQ_OF(name='ef-reid', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    _PE_EAP_ef_realm = SEQ_OF(name='ef-realm', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'File')), opt=True)
    PE_EAP._cont = ASN1Dict([
        ('eap-header', _PE_EAP_eap_header),
        ('templateID', _PE_EAP_templateID),
        ('df-eap', _PE_EAP_df_eap),
        ('ef-eapkeys', _PE_EAP_ef_eapkeys),
        ('ef-eapstatus', _PE_EAP_ef_eapstatus),
        ('ef-puid', _PE_EAP_ef_puid),
        ('ef-ps', _PE_EAP_ef_ps),
        ('ef-curid', _PE_EAP_ef_curid),
        ('ef-reid', _PE_EAP_ef_reid),
        ('ef-realm', _PE_EAP_ef_realm),
        ])
    PE_EAP._ext = []
    
    #-----< PE-GenericFileManagement >-----#
    PE_GenericFileManagement = SEQ(name='PE-GenericFileManagement', mode=MODE_TYPE)
    _PE_GenericFileManagement_gfm_header = SEQ(name='gfm-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_GenericFileManagement_fileManagementCMD = SEQ_OF(name='fileManagementCMD', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PE_GenericFileManagement_fileManagementCMD__item_ = SEQ_OF(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PEDefinitions', 'FileManagement')))
    _PE_GenericFileManagement_fileManagementCMD._cont = __PE_GenericFileManagement_fileManagementCMD__item_
    _PE_GenericFileManagement_fileManagementCMD._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    PE_GenericFileManagement._cont = ASN1Dict([
        ('gfm-header', _PE_GenericFileManagement_gfm_header),
        ('fileManagementCMD', _PE_GenericFileManagement_fileManagementCMD),
        ])
    PE_GenericFileManagement._ext = []
    
    #-----< FileManagement >-----#
    FileManagement = SEQ_OF(name='FileManagement', mode=MODE_TYPE)
    _FileManagement__item_ = CHOICE(name='_item_', mode=MODE_TYPE)
    __FileManagement__item__filePath = OCT_STR(name='filePath', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __FileManagement__item__filePath._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8)], ev=None, er=[])
    __FileManagement__item__createFCP = SEQ(name='createFCP', mode=MODE_TYPE, tag=(2, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'Fcp')))
    __FileManagement__item__fillFileOffset = INT(name='fillFileOffset', mode=MODE_TYPE, typeref=ASN1RefType(('PEDefinitions', 'UInt16')))
    __FileManagement__item__fillFileContent = OCT_STR(name='fillFileContent', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _FileManagement__item_._cont = ASN1Dict([
        ('filePath', __FileManagement__item__filePath),
        ('createFCP', __FileManagement__item__createFCP),
        ('fillFileOffset', __FileManagement__item__fillFileOffset),
        ('fillFileContent', __FileManagement__item__fillFileContent),
        ])
    _FileManagement__item_._ext = []
    FileManagement._cont = _FileManagement__item_
    FileManagement._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    
    #-----< MappingParameter >-----#
    MappingParameter = SEQ(name='MappingParameter', mode=MODE_TYPE)
    _MappingParameter_mappingOptions = OCT_STR(name='mappingOptions', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _MappingParameter_mappingOptions._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _MappingParameter_mappingSource = OCT_STR(name='mappingSource', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')))
    MappingParameter._cont = ASN1Dict([
        ('mappingOptions', _MappingParameter_mappingOptions),
        ('mappingSource', _MappingParameter_mappingSource),
        ])
    MappingParameter._ext = []
    
    #-----< AlgoParameter >-----#
    AlgoParameter = SEQ(name='AlgoParameter', mode=MODE_TYPE)
    _AlgoParameter_algorithmID = INT(name='algorithmID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlgoParameter_algorithmID._cont = ASN1Dict([('milenage', 1), ('tuak', 2), ('usim-test-algorithm', 3)])
    _AlgoParameter_algorithmOptions = OCT_STR(name='algorithmOptions', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlgoParameter_algorithmOptions._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _AlgoParameter_key = OCT_STR(name='key', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlgoParameter_opc = OCT_STR(name='opc', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AlgoParameter_rotationConstants = OCT_STR(name='rotationConstants', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=b'@\x00 @`')
    _AlgoParameter_rotationConstants._const_sz = ASN1Set(rv=[5], rr=[], ev=None, er=[])
    _AlgoParameter_xoringConstants = OCT_STR(name='xoringConstants', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08')
    _AlgoParameter_xoringConstants._const_sz = ASN1Set(rv=[80], rr=[], ev=None, er=[])
    _AlgoParameter_authCounterMax = OCT_STR(name='authCounterMax', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _AlgoParameter_authCounterMax._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _AlgoParameter_numberOfKeccak = INT(name='numberOfKeccak', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt8')), default=1)
    AlgoParameter._cont = ASN1Dict([
        ('algorithmID', _AlgoParameter_algorithmID),
        ('algorithmOptions', _AlgoParameter_algorithmOptions),
        ('key', _AlgoParameter_key),
        ('opc', _AlgoParameter_opc),
        ('rotationConstants', _AlgoParameter_rotationConstants),
        ('xoringConstants', _AlgoParameter_xoringConstants),
        ('authCounterMax', _AlgoParameter_authCounterMax),
        ('numberOfKeccak', _AlgoParameter_numberOfKeccak),
        ])
    AlgoParameter._ext = []
    
    #-----< PE-AKAParameter >-----#
    PE_AKAParameter = SEQ(name='PE-AKAParameter', mode=MODE_TYPE)
    _PE_AKAParameter_aka_header = SEQ(name='aka-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_AKAParameter_algoConfiguration = CHOICE(name='algoConfiguration', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PE_AKAParameter_algoConfiguration_mappingParameter = SEQ(name='mappingParameter', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'MappingParameter')))
    __PE_AKAParameter_algoConfiguration_algoParameter = SEQ(name='algoParameter', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'AlgoParameter')))
    _PE_AKAParameter_algoConfiguration._cont = ASN1Dict([
        ('mappingParameter', __PE_AKAParameter_algoConfiguration_mappingParameter),
        ('algoParameter', __PE_AKAParameter_algoConfiguration_algoParameter),
        ])
    _PE_AKAParameter_algoConfiguration._ext = []
    _PE_AKAParameter_sqnOptions = OCT_STR(name='sqnOptions', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=b'\x02')
    _PE_AKAParameter_sqnOptions._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _PE_AKAParameter_sqnDelta = OCT_STR(name='sqnDelta', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=b'\x00\x00\x10\x00\x00\x00')
    _PE_AKAParameter_sqnDelta._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _PE_AKAParameter_sqnAgeLimit = OCT_STR(name='sqnAgeLimit', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=b'\x00\x00\x10\x00\x00\x00')
    _PE_AKAParameter_sqnAgeLimit._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _PE_AKAParameter_sqnInit = SEQ_OF(name='sqnInit', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=[b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00', b'\x00\x00\x00\x00\x00\x00'])
    __PE_AKAParameter_sqnInit__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    __PE_AKAParameter_sqnInit__item_._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    _PE_AKAParameter_sqnInit._cont = __PE_AKAParameter_sqnInit__item_
    _PE_AKAParameter_sqnInit._const_sz = ASN1Set(rv=[32], rr=[], ev=None, er=[])
    PE_AKAParameter._cont = ASN1Dict([
        ('aka-header', _PE_AKAParameter_aka_header),
        ('algoConfiguration', _PE_AKAParameter_algoConfiguration),
        ('sqnOptions', _PE_AKAParameter_sqnOptions),
        ('sqnDelta', _PE_AKAParameter_sqnDelta),
        ('sqnAgeLimit', _PE_AKAParameter_sqnAgeLimit),
        ('sqnInit', _PE_AKAParameter_sqnInit),
        ])
    PE_AKAParameter._ext = []
    
    #-----< PE-CDMAParameter >-----#
    PE_CDMAParameter = SEQ(name='PE-CDMAParameter', mode=MODE_TYPE)
    _PE_CDMAParameter_cdma_header = SEQ(name='cdma-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_CDMAParameter_authenticationKey = OCT_STR(name='authenticationKey', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_CDMAParameter_authenticationKey._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _PE_CDMAParameter_ssd = OCT_STR(name='ssd', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PE_CDMAParameter_ssd._const_sz = ASN1Set(rv=[16], rr=[], ev=None, er=[])
    _PE_CDMAParameter_hrpdAccessAuthenticationData = OCT_STR(name='hrpdAccessAuthenticationData', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PE_CDMAParameter_hrpdAccessAuthenticationData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=32)], ev=None, er=[])
    _PE_CDMAParameter_simpleIPAuthenticationData = OCT_STR(name='simpleIPAuthenticationData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PE_CDMAParameter_simpleIPAuthenticationData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=3, ub=483)], ev=None, er=[])
    _PE_CDMAParameter_mobileIPAuthenticationData = OCT_STR(name='mobileIPAuthenticationData', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _PE_CDMAParameter_mobileIPAuthenticationData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=5, ub=957)], ev=None, er=[])
    PE_CDMAParameter._cont = ASN1Dict([
        ('cdma-header', _PE_CDMAParameter_cdma_header),
        ('authenticationKey', _PE_CDMAParameter_authenticationKey),
        ('ssd', _PE_CDMAParameter_ssd),
        ('hrpdAccessAuthenticationData', _PE_CDMAParameter_hrpdAccessAuthenticationData),
        ('simpleIPAuthenticationData', _PE_CDMAParameter_simpleIPAuthenticationData),
        ('mobileIPAuthenticationData', _PE_CDMAParameter_mobileIPAuthenticationData),
        ])
    PE_CDMAParameter._ext = []
    
    #-----< PINKeyReferenceValue >-----#
    PINKeyReferenceValue = INT(name='PINKeyReferenceValue', mode=MODE_TYPE)
    PINKeyReferenceValue._cont = ASN1Dict([('pinAppl1', 1), ('pinAppl2', 2), ('pinAppl3', 3), ('pinAppl4', 4), ('pinAppl5', 5), ('pinAppl6', 6), ('pinAppl7', 7), ('pinAppl8', 8), ('adm1', 10), ('adm2', 11), ('adm3', 12), ('adm4', 13), ('adm5', 14), ('secondPINAppl1', 129), ('secondPINAppl2', 130), ('secondPINAppl3', 131), ('secondPINAppl4', 132), ('secondPINAppl5', 133), ('secondPINAppl6', 134), ('secondPINAppl7', 135), ('secondPINAppl8', 136), ('adm6', 138), ('adm7', 139), ('adm8', 140), ('adm9', 141), ('adm10', 142)])
    
    #-----< PINConfiguration >-----#
    PINConfiguration = SEQ(name='PINConfiguration', mode=MODE_TYPE)
    _PINConfiguration_keyReference = INT(name='keyReference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PINKeyReferenceValue')))
    _PINConfiguration_pinValue = OCT_STR(name='pinValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PINConfiguration_pinValue._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _PINConfiguration_unblockingPINReference = INT(name='unblockingPINReference', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PUKKeyReferenceValue')), opt=True)
    _PINConfiguration_pinAttributes = INT(name='pinAttributes', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt8')), default=7)
    _PINConfiguration_maxNumOfAttemps_retryNumLeft = INT(name='maxNumOfAttemps-retryNumLeft', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt8')), default=51)
    PINConfiguration._cont = ASN1Dict([
        ('keyReference', _PINConfiguration_keyReference),
        ('pinValue', _PINConfiguration_pinValue),
        ('unblockingPINReference', _PINConfiguration_unblockingPINReference),
        ('pinAttributes', _PINConfiguration_pinAttributes),
        ('maxNumOfAttemps-retryNumLeft', _PINConfiguration_maxNumOfAttemps_retryNumLeft),
        ])
    PINConfiguration._ext = []
    
    #-----< PE-PINCodes >-----#
    PE_PINCodes = SEQ(name='PE-PINCodes', mode=MODE_TYPE)
    _PE_PINCodes_pin_Header = SEQ(name='pin-Header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_PINCodes_pinCodes = CHOICE(name='pinCodes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT))
    __PE_PINCodes_pinCodes_pinconfig = SEQ_OF(name='pinconfig', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___PE_PINCodes_pinCodes_pinconfig__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PEDefinitions', 'PINConfiguration')))
    __PE_PINCodes_pinCodes_pinconfig._cont = ___PE_PINCodes_pinCodes_pinconfig__item_
    __PE_PINCodes_pinCodes_pinconfig._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=26)], ev=None, er=[])
    __PE_PINCodes_pinCodes_filePath = OCT_STR(name='filePath', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PE_PINCodes_pinCodes_filePath._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=8)], ev=None, er=[])
    _PE_PINCodes_pinCodes._cont = ASN1Dict([
        ('pinconfig', __PE_PINCodes_pinCodes_pinconfig),
        ('filePath', __PE_PINCodes_pinCodes_filePath),
        ])
    _PE_PINCodes_pinCodes._ext = []
    PE_PINCodes._cont = ASN1Dict([
        ('pin-Header', _PE_PINCodes_pin_Header),
        ('pinCodes', _PE_PINCodes_pinCodes),
        ])
    PE_PINCodes._ext = []
    
    #-----< PUKKeyReferenceValue >-----#
    PUKKeyReferenceValue = INT(name='PUKKeyReferenceValue', mode=MODE_TYPE)
    PUKKeyReferenceValue._cont = ASN1Dict([('pukAppl1', 1), ('pukAppl2', 2), ('pukAppl3', 3), ('pukAppl4', 4), ('pukAppl5', 5), ('pukAppl6', 6), ('pukAppl7', 7), ('pukAppl8', 8), ('secondPUKAppl1', 129), ('secondPUKAppl2', 130), ('secondPUKAppl3', 131), ('secondPUKAppl4', 132), ('secondPUKAppl5', 133), ('secondPUKAppl6', 134), ('secondPUKAppl7', 135), ('secondPUKAppl8', 136)])
    
    #-----< PUKConfiguration >-----#
    PUKConfiguration = SEQ(name='PUKConfiguration', mode=MODE_TYPE)
    _PUKConfiguration_keyReference = INT(name='keyReference', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PUKKeyReferenceValue')))
    _PUKConfiguration_pukValue = OCT_STR(name='pukValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PUKConfiguration_pukValue._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    _PUKConfiguration_maxNumOfAttemps_retryNumLeft = INT(name='maxNumOfAttemps-retryNumLeft', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt8')), default=170)
    PUKConfiguration._cont = ASN1Dict([
        ('keyReference', _PUKConfiguration_keyReference),
        ('pukValue', _PUKConfiguration_pukValue),
        ('maxNumOfAttemps-retryNumLeft', _PUKConfiguration_maxNumOfAttemps_retryNumLeft),
        ])
    PUKConfiguration._ext = []
    
    #-----< PE-PUKCodes >-----#
    PE_PUKCodes = SEQ(name='PE-PUKCodes', mode=MODE_TYPE)
    _PE_PUKCodes_puk_Header = SEQ(name='puk-Header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_PUKCodes_pukCodes = SEQ_OF(name='pukCodes', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __PE_PUKCodes_pukCodes__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PEDefinitions', 'PUKConfiguration')))
    _PE_PUKCodes_pukCodes._cont = __PE_PUKCodes_pukCodes__item_
    _PE_PUKCodes_pukCodes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    PE_PUKCodes._cont = ASN1Dict([
        ('puk-Header', _PE_PUKCodes_puk_Header),
        ('pukCodes', _PE_PUKCodes_pukCodes),
        ])
    PE_PUKCodes._ext = []
    
    #-----< PE-SecurityDomain >-----#
    PE_SecurityDomain = SEQ(name='PE-SecurityDomain', mode=MODE_TYPE)
    _PE_SecurityDomain_sd_Header = SEQ(name='sd-Header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_SecurityDomain_instance = SEQ(name='instance', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationInstance')))
    _PE_SecurityDomain_keyList = SEQ_OF(name='keyList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PE_SecurityDomain_keyList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PEDefinitions', 'KeyObject')))
    _PE_SecurityDomain_keyList._cont = __PE_SecurityDomain_keyList__item_
    _PE_SecurityDomain_keyList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _PE_SecurityDomain_sdPersoData = SEQ_OF(name='sdPersoData', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PE_SecurityDomain_sdPersoData__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _PE_SecurityDomain_sdPersoData._cont = __PE_SecurityDomain_sdPersoData__item_
    _PE_SecurityDomain_sdPersoData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _PE_SecurityDomain_openPersoData = SEQ(name='openPersoData', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PE_SecurityDomain_openPersoData_restrictParameter = OCT_STR(name='restrictParameter', mode=MODE_TYPE, tag=(25, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    __PE_SecurityDomain_openPersoData_contactlessProtocolParameters = OCT_STR(name='contactlessProtocolParameters', mode=MODE_TYPE, opt=True)
    _PE_SecurityDomain_openPersoData._cont = ASN1Dict([
        ('restrictParameter', __PE_SecurityDomain_openPersoData_restrictParameter),
        ('contactlessProtocolParameters', __PE_SecurityDomain_openPersoData_contactlessProtocolParameters),
        ])
    _PE_SecurityDomain_openPersoData._ext = []
    _PE_SecurityDomain_catTpParameters = SEQ(name='catTpParameters', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PE_SecurityDomain_catTpParameters_catTpMaxSduSize = INT(name='catTpMaxSduSize', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt16')))
    __PE_SecurityDomain_catTpParameters_catTpMaxPduSize = INT(name='catTpMaxPduSize', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt16')))
    _PE_SecurityDomain_catTpParameters._cont = ASN1Dict([
        ('catTpMaxSduSize', __PE_SecurityDomain_catTpParameters_catTpMaxSduSize),
        ('catTpMaxPduSize', __PE_SecurityDomain_catTpParameters_catTpMaxPduSize),
        ])
    _PE_SecurityDomain_catTpParameters._ext = []
    PE_SecurityDomain._cont = ASN1Dict([
        ('sd-Header', _PE_SecurityDomain_sd_Header),
        ('instance', _PE_SecurityDomain_instance),
        ('keyList', _PE_SecurityDomain_keyList),
        ('sdPersoData', _PE_SecurityDomain_sdPersoData),
        ('openPersoData', _PE_SecurityDomain_openPersoData),
        ('catTpParameters', _PE_SecurityDomain_catTpParameters),
        ])
    PE_SecurityDomain._ext = []
    
    #-----< KeyObject >-----#
    KeyObject = SEQ(name='KeyObject', mode=MODE_TYPE)
    _KeyObject_keyUsageQualifier = OCT_STR(name='keyUsageQualifier', mode=MODE_TYPE, tag=(21, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _KeyObject_keyUsageQualifier._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=2)], ev=None, er=[])
    _KeyObject_keyAccess = OCT_STR(name='keyAccess', mode=MODE_TYPE, tag=(22, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=b'\x00')
    _KeyObject_keyAccess._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _KeyObject_keyIdentifier = OCT_STR(name='keyIdentifier', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _KeyObject_keyIdentifier._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _KeyObject_keyVersionNumber = OCT_STR(name='keyVersionNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _KeyObject_keyVersionNumber._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _KeyObject_keyCounterValue = OCT_STR(name='keyCounterValue', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _KeyObject_keyCompontents = SEQ_OF(name='keyCompontents', mode=MODE_TYPE)
    __KeyObject_keyCompontents__item_ = SEQ(name='_item_', mode=MODE_TYPE)
    ___KeyObject_keyCompontents__item__keyType = OCT_STR(name='keyType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___KeyObject_keyCompontents__item__keyData = OCT_STR(name='keyData', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___KeyObject_keyCompontents__item__macLength = INT(name='macLength', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt8')), default=8)
    __KeyObject_keyCompontents__item_._cont = ASN1Dict([
        ('keyType', ___KeyObject_keyCompontents__item__keyType),
        ('keyData', ___KeyObject_keyCompontents__item__keyData),
        ('macLength', ___KeyObject_keyCompontents__item__macLength),
        ])
    __KeyObject_keyCompontents__item_._ext = []
    _KeyObject_keyCompontents._cont = __KeyObject_keyCompontents__item_
    _KeyObject_keyCompontents._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    KeyObject._cont = ASN1Dict([
        ('keyUsageQualifier', _KeyObject_keyUsageQualifier),
        ('keyAccess', _KeyObject_keyAccess),
        ('keyIdentifier', _KeyObject_keyIdentifier),
        ('keyVersionNumber', _KeyObject_keyVersionNumber),
        ('keyCounterValue', _KeyObject_keyCounterValue),
        ('keyCompontents', _KeyObject_keyCompontents),
        ])
    KeyObject._ext = []
    
    #-----< PE-Application >-----#
    PE_Application = SEQ(name='PE-Application', mode=MODE_TYPE)
    _PE_Application_app_Header = SEQ(name='app-Header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_Application_loadBlock = SEQ(name='loadBlock', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationLoadPackage')), opt=True)
    _PE_Application_instanceList = SEQ_OF(name='instanceList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PE_Application_instanceList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PEDefinitions', 'ApplicationInstance')))
    _PE_Application_instanceList._cont = __PE_Application_instanceList__item_
    _PE_Application_instanceList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    PE_Application._cont = ASN1Dict([
        ('app-Header', _PE_Application_app_Header),
        ('loadBlock', _PE_Application_loadBlock),
        ('instanceList', _PE_Application_instanceList),
        ])
    PE_Application._ext = []
    
    #-----< ApplicationLoadPackage >-----#
    ApplicationLoadPackage = SEQ(name='ApplicationLoadPackage', mode=MODE_TYPE)
    _ApplicationLoadPackage_loadPackageAID = OCT_STR(name='loadPackageAID', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')))
    _ApplicationLoadPackage_securityDomainAID = OCT_STR(name='securityDomainAID', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')), opt=True)
    _ApplicationLoadPackage_nonVolatileCodeLimitC6 = OCT_STR(name='nonVolatileCodeLimitC6', mode=MODE_TYPE, tag=(6, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationLoadPackage_volatileDataLimitC7 = OCT_STR(name='volatileDataLimitC7', mode=MODE_TYPE, tag=(7, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationLoadPackage_nonVolatileDataLimitC8 = OCT_STR(name='nonVolatileDataLimitC8', mode=MODE_TYPE, tag=(8, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationLoadPackage_hashValue = OCT_STR(name='hashValue', mode=MODE_TYPE, tag=(1, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationLoadPackage_loadBlockObject = OCT_STR(name='loadBlockObject', mode=MODE_TYPE, tag=(4, TAG_PRIVATE, TAG_IMPLICIT))
    ApplicationLoadPackage._cont = ASN1Dict([
        ('loadPackageAID', _ApplicationLoadPackage_loadPackageAID),
        ('securityDomainAID', _ApplicationLoadPackage_securityDomainAID),
        ('nonVolatileCodeLimitC6', _ApplicationLoadPackage_nonVolatileCodeLimitC6),
        ('volatileDataLimitC7', _ApplicationLoadPackage_volatileDataLimitC7),
        ('nonVolatileDataLimitC8', _ApplicationLoadPackage_nonVolatileDataLimitC8),
        ('hashValue', _ApplicationLoadPackage_hashValue),
        ('loadBlockObject', _ApplicationLoadPackage_loadBlockObject),
        ])
    ApplicationLoadPackage._ext = []
    
    #-----< ApplicationInstance >-----#
    ApplicationInstance = SEQ(name='ApplicationInstance', mode=MODE_TYPE)
    _ApplicationInstance_applicationLoadPackageAID = OCT_STR(name='applicationLoadPackageAID', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')))
    _ApplicationInstance_classAID = OCT_STR(name='classAID', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')))
    _ApplicationInstance_instanceAID = OCT_STR(name='instanceAID', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')))
    _ApplicationInstance_extraditeSecurityDomainAID = OCT_STR(name='extraditeSecurityDomainAID', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')), opt=True)
    _ApplicationInstance_applicationPrivileges = OCT_STR(name='applicationPrivileges', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ApplicationInstance_lifeCycleState = OCT_STR(name='lifeCycleState', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), default=b'\x07')
    _ApplicationInstance_lifeCycleState._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _ApplicationInstance_applicationSpecificParametersC9 = OCT_STR(name='applicationSpecificParametersC9', mode=MODE_TYPE, tag=(9, TAG_PRIVATE, TAG_IMPLICIT))
    _ApplicationInstance_systemSpecificParameters = SEQ(name='systemSpecificParameters', mode=MODE_TYPE, tag=(15, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationSystemParameters')), opt=True)
    _ApplicationInstance_applicationParameters = SEQ(name='applicationParameters', mode=MODE_TYPE, tag=(10, TAG_PRIVATE, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UICCApplicationParameters')), opt=True)
    _ApplicationInstance_processData = SEQ_OF(name='processData', mode=MODE_TYPE, opt=True)
    __ApplicationInstance_processData__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    _ApplicationInstance_processData._cont = __ApplicationInstance_processData__item_
    _ApplicationInstance_processData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _ApplicationInstance_controlReferenceTemplate = SEQ(name='controlReferenceTemplate', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ControlReferenceTemplate')), opt=True)
    ApplicationInstance._cont = ASN1Dict([
        ('applicationLoadPackageAID', _ApplicationInstance_applicationLoadPackageAID),
        ('classAID', _ApplicationInstance_classAID),
        ('instanceAID', _ApplicationInstance_instanceAID),
        ('extraditeSecurityDomainAID', _ApplicationInstance_extraditeSecurityDomainAID),
        ('applicationPrivileges', _ApplicationInstance_applicationPrivileges),
        ('lifeCycleState', _ApplicationInstance_lifeCycleState),
        ('applicationSpecificParametersC9', _ApplicationInstance_applicationSpecificParametersC9),
        ('systemSpecificParameters', _ApplicationInstance_systemSpecificParameters),
        ('applicationParameters', _ApplicationInstance_applicationParameters),
        ('processData', _ApplicationInstance_processData),
        ('controlReferenceTemplate', _ApplicationInstance_controlReferenceTemplate),
        ])
    ApplicationInstance._ext = []
    
    #-----< ApplicationSystemParameters >-----#
    ApplicationSystemParameters = SEQ(name='ApplicationSystemParameters', mode=MODE_TYPE)
    _ApplicationSystemParameters_volatileMemoryQuotaC7 = OCT_STR(name='volatileMemoryQuotaC7', mode=MODE_TYPE, tag=(7, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_volatileMemoryQuotaC7._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=4)], ev=None, er=[])
    _ApplicationSystemParameters_nonVolatileMemoryQuotaC8 = OCT_STR(name='nonVolatileMemoryQuotaC8', mode=MODE_TYPE, tag=(8, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_nonVolatileMemoryQuotaC8._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=4)], ev=None, er=[])
    _ApplicationSystemParameters_globalServiceParameters = OCT_STR(name='globalServiceParameters', mode=MODE_TYPE, tag=(11, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_implicitSelectionParameter = OCT_STR(name='implicitSelectionParameter', mode=MODE_TYPE, tag=(15, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_volatileReservedMemory = OCT_STR(name='volatileReservedMemory', mode=MODE_TYPE, tag=(23, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_volatileReservedMemory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=4)], ev=None, er=[])
    _ApplicationSystemParameters_nonVolatileReservedMemory = OCT_STR(name='nonVolatileReservedMemory', mode=MODE_TYPE, tag=(24, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_nonVolatileReservedMemory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=4)], ev=None, er=[])
    _ApplicationSystemParameters_ts102226SIMFileAccessToolkitParameter = OCT_STR(name='ts102226SIMFileAccessToolkitParameter', mode=MODE_TYPE, tag=(10, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_ts102226AdditionalContactlessParameters = SEQ(name='ts102226AdditionalContactlessParameters', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'TS102226AdditionalContactlessParameters')), opt=True)
    _ApplicationSystemParameters_contactlessProtocolParameters = OCT_STR(name='contactlessProtocolParameters', mode=MODE_TYPE, tag=(25, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_userInteractionContactlessParameters = OCT_STR(name='userInteractionContactlessParameters', mode=MODE_TYPE, tag=(26, TAG_PRIVATE, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_cumulativeGrantedVolatileMemory = OCT_STR(name='cumulativeGrantedVolatileMemory', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_cumulativeGrantedVolatileMemory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=4)], ev=None, er=[])
    _ApplicationSystemParameters_cumulativeGrantedNonVolatileMemory = OCT_STR(name='cumulativeGrantedNonVolatileMemory', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ApplicationSystemParameters_cumulativeGrantedNonVolatileMemory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=4)], ev=None, er=[])
    ApplicationSystemParameters._cont = ASN1Dict([
        ('volatileMemoryQuotaC7', _ApplicationSystemParameters_volatileMemoryQuotaC7),
        ('nonVolatileMemoryQuotaC8', _ApplicationSystemParameters_nonVolatileMemoryQuotaC8),
        ('globalServiceParameters', _ApplicationSystemParameters_globalServiceParameters),
        ('implicitSelectionParameter', _ApplicationSystemParameters_implicitSelectionParameter),
        ('volatileReservedMemory', _ApplicationSystemParameters_volatileReservedMemory),
        ('nonVolatileReservedMemory', _ApplicationSystemParameters_nonVolatileReservedMemory),
        ('ts102226SIMFileAccessToolkitParameter', _ApplicationSystemParameters_ts102226SIMFileAccessToolkitParameter),
        ('ts102226AdditionalContactlessParameters', _ApplicationSystemParameters_ts102226AdditionalContactlessParameters),
        ('contactlessProtocolParameters', _ApplicationSystemParameters_contactlessProtocolParameters),
        ('userInteractionContactlessParameters', _ApplicationSystemParameters_userInteractionContactlessParameters),
        ('cumulativeGrantedVolatileMemory', _ApplicationSystemParameters_cumulativeGrantedVolatileMemory),
        ('cumulativeGrantedNonVolatileMemory', _ApplicationSystemParameters_cumulativeGrantedNonVolatileMemory),
        ])
    ApplicationSystemParameters._ext = []
    
    #-----< UICCApplicationParameters >-----#
    UICCApplicationParameters = SEQ(name='UICCApplicationParameters', mode=MODE_TYPE)
    _UICCApplicationParameters_uiccToolkitApplicationSpecificParametersField = OCT_STR(name='uiccToolkitApplicationSpecificParametersField', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UICCApplicationParameters_uiccAccessApplicationSpecificParametersField = OCT_STR(name='uiccAccessApplicationSpecificParametersField', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _UICCApplicationParameters_uiccAdministrativeAccessApplicationSpecificParametersField = OCT_STR(name='uiccAdministrativeAccessApplicationSpecificParametersField', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    UICCApplicationParameters._cont = ASN1Dict([
        ('uiccToolkitApplicationSpecificParametersField', _UICCApplicationParameters_uiccToolkitApplicationSpecificParametersField),
        ('uiccAccessApplicationSpecificParametersField', _UICCApplicationParameters_uiccAccessApplicationSpecificParametersField),
        ('uiccAdministrativeAccessApplicationSpecificParametersField', _UICCApplicationParameters_uiccAdministrativeAccessApplicationSpecificParametersField),
        ])
    UICCApplicationParameters._ext = []
    
    #-----< TS102226AdditionalContactlessParameters >-----#
    TS102226AdditionalContactlessParameters = SEQ(name='TS102226AdditionalContactlessParameters', mode=MODE_TYPE)
    _TS102226AdditionalContactlessParameters_protocolParameterData = OCT_STR(name='protocolParameterData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    TS102226AdditionalContactlessParameters._cont = ASN1Dict([
        ('protocolParameterData', _TS102226AdditionalContactlessParameters_protocolParameterData),
        ])
    TS102226AdditionalContactlessParameters._ext = []
    
    #-----< ControlReferenceTemplate >-----#
    ControlReferenceTemplate = SEQ(name='ControlReferenceTemplate', mode=MODE_TYPE)
    _ControlReferenceTemplate_applicationProviderIdentifier = OCT_STR(name='applicationProviderIdentifier', mode=MODE_TYPE, tag=(32, TAG_APPLICATION, TAG_IMPLICIT))
    ControlReferenceTemplate._cont = ASN1Dict([
        ('applicationProviderIdentifier', _ControlReferenceTemplate_applicationProviderIdentifier),
        ])
    ControlReferenceTemplate._ext = []
    
    #-----< PE-RFM >-----#
    PE_RFM = SEQ(name='PE-RFM', mode=MODE_TYPE)
    _PE_RFM_rfm_header = SEQ(name='rfm-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_RFM_instanceAID = OCT_STR(name='instanceAID', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')))
    _PE_RFM_securityDomainAID = OCT_STR(name='securityDomainAID', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')), opt=True)
    _PE_RFM_tarList = SEQ_OF(name='tarList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __PE_RFM_tarList__item_ = OCT_STR(name='_item_', mode=MODE_TYPE)
    __PE_RFM_tarList__item_._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    _PE_RFM_tarList._cont = __PE_RFM_tarList__item_
    _PE_RFM_tarList._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=None)], ev=None, er=[])
    _PE_RFM_minimumSecurityLevel = OCT_STR(name='minimumSecurityLevel', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_RFM_minimumSecurityLevel._const_sz = ASN1Set(rv=[1], rr=[], ev=None, er=[])
    _PE_RFM_uiccAccessDomain = OCT_STR(name='uiccAccessDomain', mode=MODE_TYPE)
    _PE_RFM_uiccAdminAccessDomain = OCT_STR(name='uiccAdminAccessDomain', mode=MODE_TYPE)
    _PE_RFM_adfRFMAccess = SEQ(name='adfRFMAccess', mode=MODE_TYPE, typeref=ASN1RefType(('PEDefinitions', 'ADFRFMAccess')), opt=True)
    PE_RFM._cont = ASN1Dict([
        ('rfm-header', _PE_RFM_rfm_header),
        ('instanceAID', _PE_RFM_instanceAID),
        ('securityDomainAID', _PE_RFM_securityDomainAID),
        ('tarList', _PE_RFM_tarList),
        ('minimumSecurityLevel', _PE_RFM_minimumSecurityLevel),
        ('uiccAccessDomain', _PE_RFM_uiccAccessDomain),
        ('uiccAdminAccessDomain', _PE_RFM_uiccAdminAccessDomain),
        ('adfRFMAccess', _PE_RFM_adfRFMAccess),
        ])
    PE_RFM._ext = []
    
    #-----< ADFRFMAccess >-----#
    ADFRFMAccess = SEQ(name='ADFRFMAccess', mode=MODE_TYPE)
    _ADFRFMAccess_adfAID = OCT_STR(name='adfAID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'ApplicationIdentifier')))
    _ADFRFMAccess_adfAccessDomain = OCT_STR(name='adfAccessDomain', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ADFRFMAccess_adfAdminAccessDomain = OCT_STR(name='adfAdminAccessDomain', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ADFRFMAccess._cont = ASN1Dict([
        ('adfAID', _ADFRFMAccess_adfAID),
        ('adfAccessDomain', _ADFRFMAccess_adfAccessDomain),
        ('adfAdminAccessDomain', _ADFRFMAccess_adfAdminAccessDomain),
        ])
    ADFRFMAccess._ext = []
    
    #-----< PE-NonStandard >-----#
    PE_NonStandard = SEQ(name='PE-NonStandard', mode=MODE_TYPE)
    _PE_NonStandard_nonStandard_header = SEQ(name='nonStandard-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    _PE_NonStandard_issuerID = OID(name='issuerID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PE_NonStandard_content = OCT_STR(name='content', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    PE_NonStandard._cont = ASN1Dict([
        ('nonStandard-header', _PE_NonStandard_nonStandard_header),
        ('issuerID', _PE_NonStandard_issuerID),
        ('content', _PE_NonStandard_content),
        ])
    PE_NonStandard._ext = []
    
    #-----< PE-End >-----#
    PE_End = SEQ(name='PE-End', mode=MODE_TYPE)
    _PE_End_end_header = SEQ(name='end-header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'PEHeader')))
    PE_End._cont = ASN1Dict([
        ('end-header', _PE_End_end_header),
        ])
    PE_End._ext = []
    
    #-----< PEStatus >-----#
    PEStatus = SEQ(name='PEStatus', mode=MODE_TYPE)
    _PEStatus_status = INT(name='status', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PEStatus_status._cont = ASN1Dict([('ok', 0), ('pe-not-supported', 1), ('memory-failure', 2), ('bad-values', 3), ('not-enough-memory', 4), ('invalid-request-format', 5), ('invalid-parameter', 6), ('runtime-not-supported', 7), ('lib-not-supported', 8), ('template-not-supported', 9), ('feature-not-supported', 10), ('pin-code-missing', 11), ('unsupported-profile-version', 31)])
    _PEStatus_identification = INT(name='identification', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt15')), opt=True)
    _PEStatus_additional_information = INT(name='additional-information', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt8')), opt=True)
    _PEStatus_offset = INT(name='offset', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UInt31')), opt=True)
    PEStatus._cont = ASN1Dict([
        ('status', _PEStatus_status),
        ('identification', _PEStatus_identification),
        ('additional-information', _PEStatus_additional_information),
        ('offset', _PEStatus_offset),
        ])
    PEStatus._ext = []
    
    #-----< EUICCResponse >-----#
    EUICCResponse = SEQ(name='EUICCResponse', mode=MODE_TYPE)
    _EUICCResponse_peStatus = SEQ_OF(name='peStatus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUICCResponse_peStatus__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PEDefinitions', 'PEStatus')))
    _EUICCResponse_peStatus._cont = __EUICCResponse_peStatus__item_
    _EUICCResponse_profileInstallationAborted = NULL(name='profileInstallationAborted', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EUICCResponse_statusMessage = STR_UTF8(name='statusMessage', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EUICCResponse_statusMessage._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=2, ub=64)], ev=None, er=[])
    EUICCResponse._cont = ASN1Dict([
        ('peStatus', _EUICCResponse_peStatus),
        ('profileInstallationAborted', _EUICCResponse_profileInstallationAborted),
        ('statusMessage', _EUICCResponse_statusMessage),
        ])
    EUICCResponse._ext = []
    
    _all_ = [
        maxUInt8,
        UInt8,
        maxUInt15,
        UInt15,
        maxUInt16,
        UInt16,
        maxUInt31,
        UInt31,
        ApplicationIdentifier,
        _PEHeader_mandated,
        _PEHeader_identification,
        PEHeader,
        _ProfileElement_header,
        _ProfileElement_genericFileManagement,
        _ProfileElement_pinCodes,
        _ProfileElement_pukCodes,
        _ProfileElement_akaParameter,
        _ProfileElement_cdmaParameter,
        _ProfileElement_securityDomain,
        _ProfileElement_rfm,
        _ProfileElement_application,
        _ProfileElement_nonStandard,
        _ProfileElement_end,
        _ProfileElement_rfu1,
        _ProfileElement_rfu2,
        _ProfileElement_rfu3,
        _ProfileElement_rfu4,
        _ProfileElement_rfu5,
        _ProfileElement_mf,
        _ProfileElement_cd,
        _ProfileElement_telecom,
        _ProfileElement_usim,
        _ProfileElement_opt_usim,
        _ProfileElement_isim,
        _ProfileElement_opt_isim,
        _ProfileElement_phonebook,
        _ProfileElement_gsm_access,
        _ProfileElement_csim,
        _ProfileElement_opt_csim,
        _ProfileElement_eap,
        _ProfileElement_df_5gs,
        _ProfileElement_df_saip,
        ProfileElement,
        PE_Dummy,
        _ProfileHeader_major_version,
        _ProfileHeader_minor_version,
        _ProfileHeader_profileType,
        _ProfileHeader_iccid,
        _ProfileHeader_pol,
        _ProfileHeader_eUICC_Mandatory_services,
        __ProfileHeader_eUICC_Mandatory_GFSTEList__item_,
        _ProfileHeader_eUICC_Mandatory_GFSTEList,
        _ProfileHeader_connectivityParameters,
        ___ProfileHeader_eUICC_Mandatory_AIDs__item__aid,
        ___ProfileHeader_eUICC_Mandatory_AIDs__item__version,
        __ProfileHeader_eUICC_Mandatory_AIDs__item_,
        _ProfileHeader_eUICC_Mandatory_AIDs,
        ProfileHeader,
        _ServicesList_contactless,
        _ServicesList_usim,
        _ServicesList_isim,
        _ServicesList_csim,
        _ServicesList_milenage,
        _ServicesList_tuak128,
        _ServicesList_cave,
        _ServicesList_gba_usim,
        _ServicesList_gba_isim,
        _ServicesList_mbms,
        _ServicesList_eap,
        _ServicesList_javacard,
        _ServicesList_multos,
        _ServicesList_multiple_usim,
        _ServicesList_multiple_isim,
        _ServicesList_multiple_csim,
        _ServicesList_tuak256,
        _ServicesList_usim_test_algorithm,
        _ServicesList_ber_tlv,
        _ServicesList_dfLink,
        _ServicesList_cat_tp,
        _ServicesList_get_identity,
        _ServicesList_profile_a_x25519,
        _ServicesList_profile_b_p256,
        _ServicesList_suciCalculatorApi,
        _ServicesList_dns_resolution,
        _ServicesList_scp11ac,
        _ServicesList_scp11c_authorization_mechanism,
        _ServicesList_s16mode,
        ServicesList,
        UICCCapability,
        _ProprietaryInfo_specialFileInformation,
        _ProprietaryInfo_fillPattern,
        _ProprietaryInfo_repeatPattern,
        _ProprietaryInfo_maximumFileSize,
        _ProprietaryInfo_fileDetails,
        ProprietaryInfo,
        _Fcp_fileDescriptor,
        _Fcp_fileID,
        _Fcp_dfName,
        _Fcp_lcsi,
        _Fcp_securityAttributesReferenced,
        _Fcp_efFileSize,
        _Fcp_pinStatusTemplateDO,
        _Fcp_shortEFID,
        _Fcp_proprietaryEFInfo,
        _Fcp_linkPath,
        Fcp,
        __File__item__doNotCreate,
        __File__item__fileDescriptor,
        __File__item__fillFileOffset,
        __File__item__fillFileContent,
        _File__item_,
        File,
        _PE_MF_mf_header,
        _PE_MF_templateID,
        _PE_MF_mf,
        _PE_MF_ef_pl,
        _PE_MF_ef_iccid,
        _PE_MF_ef_dir,
        _PE_MF_ef_arr,
        _PE_MF_ef_umpc,
        PE_MF,
        _PE_CD_cd_header,
        _PE_CD_templateID,
        _PE_CD_df_cd,
        _PE_CD_ef_launchpad,
        _PE_CD_ef_icon,
        PE_CD,
        _PE_TELECOM_telecom_header,
        _PE_TELECOM_templateID,
        _PE_TELECOM_df_telecom,
        _PE_TELECOM_ef_arr,
        _PE_TELECOM_ef_rma,
        _PE_TELECOM_ef_sume,
        _PE_TELECOM_ef_ice_dn,
        _PE_TELECOM_ef_ice_ff,
        _PE_TELECOM_ef_psismsc,
        _PE_TELECOM_df_graphics,
        _PE_TELECOM_ef_img,
        _PE_TELECOM_ef_iidf,
        _PE_TELECOM_ef_ice_graphics,
        _PE_TELECOM_ef_launch_scws,
        _PE_TELECOM_ef_icon,
        _PE_TELECOM_df_phonebook,
        _PE_TELECOM_ef_pbr,
        _PE_TELECOM_ef_ext1,
        _PE_TELECOM_ef_aas,
        _PE_TELECOM_ef_gas,
        _PE_TELECOM_ef_psc,
        _PE_TELECOM_ef_cc,
        _PE_TELECOM_ef_puid,
        _PE_TELECOM_ef_iap,
        _PE_TELECOM_ef_adn,
        _PE_TELECOM_ef_pbc,
        _PE_TELECOM_ef_anr,
        _PE_TELECOM_ef_puri,
        _PE_TELECOM_ef_email,
        _PE_TELECOM_ef_sne,
        _PE_TELECOM_ef_uid,
        _PE_TELECOM_ef_grp,
        _PE_TELECOM_ef_ccp1,
        _PE_TELECOM_df_multimedia,
        _PE_TELECOM_ef_mml,
        _PE_TELECOM_ef_mmdf,
        _PE_TELECOM_df_mmss,
        _PE_TELECOM_ef_mlpl,
        _PE_TELECOM_ef_mspl,
        _PE_TELECOM_ef_mmssmode,
        _PE_TELECOM_df_mcs,
        _PE_TELECOM_ef_mst,
        _PE_TELECOM_ef_mcs_config,
        _PE_TELECOM_df_v2x,
        _PE_TELECOM_ef_vst,
        _PE_TELECOM_ef_v2x_config,
        _PE_TELECOM_ef_v2xp_pc5,
        _PE_TELECOM_ef_v2xp_Uu,
        PE_TELECOM,
        _PE_USIM_usim_header,
        _PE_USIM_templateID,
        _PE_USIM_adf_usim,
        _PE_USIM_ef_imsi,
        _PE_USIM_ef_arr,
        _PE_USIM_ef_keys,
        _PE_USIM_ef_keysPS,
        _PE_USIM_ef_hpplmn,
        _PE_USIM_ef_ust,
        _PE_USIM_ef_fdn,
        _PE_USIM_ef_sms,
        _PE_USIM_ef_smsp,
        _PE_USIM_ef_smss,
        _PE_USIM_ef_spn,
        _PE_USIM_ef_est,
        _PE_USIM_ef_start_hfn,
        _PE_USIM_ef_threshold,
        _PE_USIM_ef_psloci,
        _PE_USIM_ef_acc,
        _PE_USIM_ef_fplmn,
        _PE_USIM_ef_loci,
        _PE_USIM_ef_ad,
        _PE_USIM_ef_ecc,
        _PE_USIM_ef_netpar,
        _PE_USIM_ef_epsloci,
        _PE_USIM_ef_epsnsc,
        PE_USIM,
        _PE_OPT_USIM_optusim_header,
        _PE_OPT_USIM_templateID,
        _PE_OPT_USIM_ef_li,
        _PE_OPT_USIM_ef_acmax,
        _PE_OPT_USIM_ef_acm,
        _PE_OPT_USIM_ef_gid1,
        _PE_OPT_USIM_ef_gid2,
        _PE_OPT_USIM_ef_msisdn,
        _PE_OPT_USIM_ef_puct,
        _PE_OPT_USIM_ef_cbmi,
        _PE_OPT_USIM_ef_cbmid,
        _PE_OPT_USIM_ef_sdn,
        _PE_OPT_USIM_ef_ext2,
        _PE_OPT_USIM_ef_ext3,
        _PE_OPT_USIM_ef_cbmir,
        _PE_OPT_USIM_ef_plmnwact,
        _PE_OPT_USIM_ef_oplmnwact,
        _PE_OPT_USIM_ef_hplmnwact,
        _PE_OPT_USIM_ef_dck,
        _PE_OPT_USIM_ef_cnl,
        _PE_OPT_USIM_ef_smsr,
        _PE_OPT_USIM_ef_bdn,
        _PE_OPT_USIM_ef_ext5,
        _PE_OPT_USIM_ef_ccp2,
        _PE_OPT_USIM_ef_ext4,
        _PE_OPT_USIM_ef_acl,
        _PE_OPT_USIM_ef_cmi,
        _PE_OPT_USIM_ef_ici,
        _PE_OPT_USIM_ef_oci,
        _PE_OPT_USIM_ef_ict,
        _PE_OPT_USIM_ef_oct,
        _PE_OPT_USIM_ef_vgcs,
        _PE_OPT_USIM_ef_vgcss,
        _PE_OPT_USIM_ef_vbs,
        _PE_OPT_USIM_ef_vbss,
        _PE_OPT_USIM_ef_emlpp,
        _PE_OPT_USIM_ef_aaem,
        _PE_OPT_USIM_ef_hiddenkey,
        _PE_OPT_USIM_ef_pnn,
        _PE_OPT_USIM_ef_opl,
        _PE_OPT_USIM_ef_mbdn,
        _PE_OPT_USIM_ef_ext6,
        _PE_OPT_USIM_ef_mbi,
        _PE_OPT_USIM_ef_mwis,
        _PE_OPT_USIM_ef_cfis,
        _PE_OPT_USIM_ef_ext7,
        _PE_OPT_USIM_ef_spdi,
        _PE_OPT_USIM_ef_mmsn,
        _PE_OPT_USIM_ef_ext8,
        _PE_OPT_USIM_ef_mmsicp,
        _PE_OPT_USIM_ef_mmsup,
        _PE_OPT_USIM_ef_mmsucp,
        _PE_OPT_USIM_ef_nia,
        _PE_OPT_USIM_ef_vgcsca,
        _PE_OPT_USIM_ef_vbsca,
        _PE_OPT_USIM_ef_gbabp,
        _PE_OPT_USIM_ef_msk,
        _PE_OPT_USIM_ef_muk,
        _PE_OPT_USIM_ef_ehplmn,
        _PE_OPT_USIM_ef_gbanl,
        _PE_OPT_USIM_ef_ehplmnpi,
        _PE_OPT_USIM_ef_lrplmnsi,
        _PE_OPT_USIM_ef_nafkca,
        _PE_OPT_USIM_ef_spni,
        _PE_OPT_USIM_ef_pnni,
        _PE_OPT_USIM_ef_ncp_ip,
        _PE_OPT_USIM_ef_ufc,
        _PE_OPT_USIM_ef_nasconfig,
        _PE_OPT_USIM_ef_uicciari,
        _PE_OPT_USIM_ef_pws,
        _PE_OPT_USIM_ef_fdnuri,
        _PE_OPT_USIM_ef_bdnuri,
        _PE_OPT_USIM_ef_sdnuri,
        _PE_OPT_USIM_ef_iwl,
        _PE_OPT_USIM_ef_ips,
        _PE_OPT_USIM_ef_ipd,
        _PE_OPT_USIM_ef_epdgid,
        _PE_OPT_USIM_ef_epdgselection,
        _PE_OPT_USIM_ef_epdgidem,
        _PE_OPT_USIM_ef_epdgselectionem,
        _PE_OPT_USIM_ef_frompreferred,
        _PE_OPT_USIM_ef_imsconfigdata,
        _PE_OPT_USIM_ef_3gpppsdataoff,
        _PE_OPT_USIM_ef_3gpppsdataoffservicelist,
        _PE_OPT_USIM_ef_xcapconfigdata,
        _PE_OPT_USIM_ef_earfcnlist,
        _PE_OPT_USIM_ef_mudmidconfigdata,
        PE_OPT_USIM,
        _PE_PHONEBOOK_phonebook_header,
        _PE_PHONEBOOK_templateID,
        _PE_PHONEBOOK_df_phonebook,
        _PE_PHONEBOOK_ef_pbr,
        _PE_PHONEBOOK_ef_ext1,
        _PE_PHONEBOOK_ef_aas,
        _PE_PHONEBOOK_ef_gas,
        _PE_PHONEBOOK_ef_psc,
        _PE_PHONEBOOK_ef_cc,
        _PE_PHONEBOOK_ef_puid,
        _PE_PHONEBOOK_ef_iap,
        _PE_PHONEBOOK_ef_adn,
        _PE_PHONEBOOK_ef_pbc,
        _PE_PHONEBOOK_ef_anr,
        _PE_PHONEBOOK_ef_puri,
        _PE_PHONEBOOK_ef_email,
        _PE_PHONEBOOK_ef_sne,
        _PE_PHONEBOOK_ef_uid,
        _PE_PHONEBOOK_ef_grp,
        _PE_PHONEBOOK_ef_ccp1,
        PE_PHONEBOOK,
        _PE_GSM_ACCESS_gsm_access_header,
        _PE_GSM_ACCESS_templateID,
        _PE_GSM_ACCESS_df_gsm_access,
        _PE_GSM_ACCESS_ef_kc,
        _PE_GSM_ACCESS_ef_kcgprs,
        _PE_GSM_ACCESS_ef_cpbcch,
        _PE_GSM_ACCESS_ef_invscan,
        PE_GSM_ACCESS,
        _PE_DF_5GS_df_5gs_header,
        _PE_DF_5GS_templateID,
        _PE_DF_5GS_df_df_5gs,
        _PE_DF_5GS_ef_5gs3gpploci,
        _PE_DF_5GS_ef_5gsn3gpploci,
        _PE_DF_5GS_ef_5gs3gppnsc,
        _PE_DF_5GS_ef_5gsn3gppnsc,
        _PE_DF_5GS_ef_5gauthkeys,
        _PE_DF_5GS_ef_uac_aic,
        _PE_DF_5GS_ef_suci_calc_info,
        _PE_DF_5GS_ef_opl5g,
        _PE_DF_5GS_ef_supinai,
        _PE_DF_5GS_ef_routing_indicator,
        _PE_DF_5GS_ef_ursp,
        _PE_DF_5GS_ef_tn3gppsnn,
        PE_DF_5GS,
        _PE_DF_SAIP_df_saip_header,
        _PE_DF_SAIP_templateID,
        _PE_DF_SAIP_df_df_saip,
        _PE_DF_SAIP_ef_suci_calc_info_usim,
        PE_DF_SAIP,
        _PE_ISIM_isim_header,
        _PE_ISIM_templateID,
        _PE_ISIM_adf_isim,
        _PE_ISIM_ef_impi,
        _PE_ISIM_ef_impu,
        _PE_ISIM_ef_domain,
        _PE_ISIM_ef_ist,
        _PE_ISIM_ef_ad,
        _PE_ISIM_ef_arr,
        PE_ISIM,
        _PE_OPT_ISIM_optisim_header,
        _PE_OPT_ISIM_templateID,
        _PE_OPT_ISIM_ef_pcscf,
        _PE_OPT_ISIM_ef_sms,
        _PE_OPT_ISIM_ef_smsp,
        _PE_OPT_ISIM_ef_smss,
        _PE_OPT_ISIM_ef_smsr,
        _PE_OPT_ISIM_ef_gbabp,
        _PE_OPT_ISIM_ef_gbanl,
        _PE_OPT_ISIM_ef_nafkca,
        _PE_OPT_ISIM_ef_uicciari,
        _PE_OPT_ISIM_ef_frompreferred,
        _PE_OPT_ISIM_ef_imsconfigdata,
        _PE_OPT_ISIM_ef_xcapconfigdata,
        _PE_OPT_ISIM_ef_webrtcuri,
        _PE_OPT_ISIM_ef_mudmidconfigdata,
        PE_OPT_ISIM,
        _PE_CSIM_csim_header,
        _PE_CSIM_templateID,
        _PE_CSIM_adf_csim,
        _PE_CSIM_ef_arr,
        _PE_CSIM_ef_call_count,
        _PE_CSIM_ef_imsi_m,
        _PE_CSIM_ef_imsi_t,
        _PE_CSIM_ef_tmsi,
        _PE_CSIM_ef_ah,
        _PE_CSIM_ef_aop,
        _PE_CSIM_ef_aloc,
        _PE_CSIM_ef_cdmahome,
        _PE_CSIM_ef_znregi,
        _PE_CSIM_ef_snregi,
        _PE_CSIM_ef_distregi,
        _PE_CSIM_ef_accolc,
        _PE_CSIM_ef_term,
        _PE_CSIM_ef_acp,
        _PE_CSIM_ef_prl,
        _PE_CSIM_ef_ruimid,
        _PE_CSIM_ef_csim_st,
        _PE_CSIM_ef_spc,
        _PE_CSIM_ef_otapaspc,
        _PE_CSIM_ef_namlock,
        _PE_CSIM_ef_ota,
        _PE_CSIM_ef_sp,
        _PE_CSIM_ef_esn_meid_me,
        _PE_CSIM_ef_li,
        _PE_CSIM_ef_usgind,
        _PE_CSIM_ef_ad,
        _PE_CSIM_ef_max_prl,
        _PE_CSIM_ef_spcs,
        _PE_CSIM_ef_mecrp,
        _PE_CSIM_ef_home_tag,
        _PE_CSIM_ef_group_tag,
        _PE_CSIM_ef_specific_tag,
        _PE_CSIM_ef_call_prompt,
        PE_CSIM,
        _PE_OPT_CSIM_optcsim_header,
        _PE_OPT_CSIM_templateID,
        _PE_OPT_CSIM_ef_ssci,
        _PE_OPT_CSIM_ef_fdn,
        _PE_OPT_CSIM_ef_sms,
        _PE_OPT_CSIM_ef_smsp,
        _PE_OPT_CSIM_ef_smss,
        _PE_OPT_CSIM_ef_ssfc,
        _PE_OPT_CSIM_ef_spn,
        _PE_OPT_CSIM_ef_mdn,
        _PE_OPT_CSIM_ef_ecc,
        _PE_OPT_CSIM_ef_me3gpdopc,
        _PE_OPT_CSIM_ef_3gpdopm,
        _PE_OPT_CSIM_ef_sipcap,
        _PE_OPT_CSIM_ef_mipcap,
        _PE_OPT_CSIM_ef_sipupp,
        _PE_OPT_CSIM_ef_mipupp,
        _PE_OPT_CSIM_ef_sipsp,
        _PE_OPT_CSIM_ef_mipsp,
        _PE_OPT_CSIM_ef_sippapss,
        _PE_OPT_CSIM_ef_puzl,
        _PE_OPT_CSIM_ef_maxpuzl,
        _PE_OPT_CSIM_ef_hrpdcap,
        _PE_OPT_CSIM_ef_hrpdupp,
        _PE_OPT_CSIM_ef_csspr,
        _PE_OPT_CSIM_ef_atc,
        _PE_OPT_CSIM_ef_eprl,
        _PE_OPT_CSIM_ef_bcsmscfg,
        _PE_OPT_CSIM_ef_bcsmspref,
        _PE_OPT_CSIM_ef_bcsmstable,
        _PE_OPT_CSIM_ef_bcsmsp,
        _PE_OPT_CSIM_ef_bakpara,
        _PE_OPT_CSIM_ef_upbakpara,
        _PE_OPT_CSIM_ef_mmsn,
        _PE_OPT_CSIM_ef_ext8,
        _PE_OPT_CSIM_ef_mmsicp,
        _PE_OPT_CSIM_ef_mmsup,
        _PE_OPT_CSIM_ef_mmsucp,
        _PE_OPT_CSIM_ef_auth_capability,
        _PE_OPT_CSIM_ef_3gcik,
        _PE_OPT_CSIM_ef_dck,
        _PE_OPT_CSIM_ef_gid1,
        _PE_OPT_CSIM_ef_gid2,
        _PE_OPT_CSIM_ef_cdmacnl,
        _PE_OPT_CSIM_ef_sf_euimid,
        _PE_OPT_CSIM_ef_est,
        _PE_OPT_CSIM_ef_hidden_key,
        _PE_OPT_CSIM_ef_lcsver,
        _PE_OPT_CSIM_ef_lcscp,
        _PE_OPT_CSIM_ef_sdn,
        _PE_OPT_CSIM_ef_ext2,
        _PE_OPT_CSIM_ef_ext3,
        _PE_OPT_CSIM_ef_ici,
        _PE_OPT_CSIM_ef_oci,
        _PE_OPT_CSIM_ef_ext5,
        _PE_OPT_CSIM_ef_ccp2,
        _PE_OPT_CSIM_ef_applabels,
        _PE_OPT_CSIM_ef_model,
        _PE_OPT_CSIM_ef_rc,
        _PE_OPT_CSIM_ef_smscap,
        _PE_OPT_CSIM_ef_mipflags,
        _PE_OPT_CSIM_ef_3gpduppext,
        _PE_OPT_CSIM_ef_ipv6cap,
        _PE_OPT_CSIM_ef_tcpconfig,
        _PE_OPT_CSIM_ef_dgc,
        _PE_OPT_CSIM_ef_wapbrowsercp,
        _PE_OPT_CSIM_ef_wapbrowserbm,
        _PE_OPT_CSIM_ef_mmsconfig,
        _PE_OPT_CSIM_ef_jdl,
        PE_OPT_CSIM,
        _PE_EAP_eap_header,
        _PE_EAP_templateID,
        _PE_EAP_df_eap,
        _PE_EAP_ef_eapkeys,
        _PE_EAP_ef_eapstatus,
        _PE_EAP_ef_puid,
        _PE_EAP_ef_ps,
        _PE_EAP_ef_curid,
        _PE_EAP_ef_reid,
        _PE_EAP_ef_realm,
        PE_EAP,
        _PE_GenericFileManagement_gfm_header,
        __PE_GenericFileManagement_fileManagementCMD__item_,
        _PE_GenericFileManagement_fileManagementCMD,
        PE_GenericFileManagement,
        __FileManagement__item__filePath,
        __FileManagement__item__createFCP,
        __FileManagement__item__fillFileOffset,
        __FileManagement__item__fillFileContent,
        _FileManagement__item_,
        FileManagement,
        _MappingParameter_mappingOptions,
        _MappingParameter_mappingSource,
        MappingParameter,
        _AlgoParameter_algorithmID,
        _AlgoParameter_algorithmOptions,
        _AlgoParameter_key,
        _AlgoParameter_opc,
        _AlgoParameter_rotationConstants,
        _AlgoParameter_xoringConstants,
        _AlgoParameter_authCounterMax,
        _AlgoParameter_numberOfKeccak,
        AlgoParameter,
        _PE_AKAParameter_aka_header,
        __PE_AKAParameter_algoConfiguration_mappingParameter,
        __PE_AKAParameter_algoConfiguration_algoParameter,
        _PE_AKAParameter_algoConfiguration,
        _PE_AKAParameter_sqnOptions,
        _PE_AKAParameter_sqnDelta,
        _PE_AKAParameter_sqnAgeLimit,
        __PE_AKAParameter_sqnInit__item_,
        _PE_AKAParameter_sqnInit,
        PE_AKAParameter,
        _PE_CDMAParameter_cdma_header,
        _PE_CDMAParameter_authenticationKey,
        _PE_CDMAParameter_ssd,
        _PE_CDMAParameter_hrpdAccessAuthenticationData,
        _PE_CDMAParameter_simpleIPAuthenticationData,
        _PE_CDMAParameter_mobileIPAuthenticationData,
        PE_CDMAParameter,
        PINKeyReferenceValue,
        _PINConfiguration_keyReference,
        _PINConfiguration_pinValue,
        _PINConfiguration_unblockingPINReference,
        _PINConfiguration_pinAttributes,
        _PINConfiguration_maxNumOfAttemps_retryNumLeft,
        PINConfiguration,
        _PE_PINCodes_pin_Header,
        ___PE_PINCodes_pinCodes_pinconfig__item_,
        __PE_PINCodes_pinCodes_pinconfig,
        __PE_PINCodes_pinCodes_filePath,
        _PE_PINCodes_pinCodes,
        PE_PINCodes,
        PUKKeyReferenceValue,
        _PUKConfiguration_keyReference,
        _PUKConfiguration_pukValue,
        _PUKConfiguration_maxNumOfAttemps_retryNumLeft,
        PUKConfiguration,
        _PE_PUKCodes_puk_Header,
        __PE_PUKCodes_pukCodes__item_,
        _PE_PUKCodes_pukCodes,
        PE_PUKCodes,
        _PE_SecurityDomain_sd_Header,
        _PE_SecurityDomain_instance,
        __PE_SecurityDomain_keyList__item_,
        _PE_SecurityDomain_keyList,
        __PE_SecurityDomain_sdPersoData__item_,
        _PE_SecurityDomain_sdPersoData,
        __PE_SecurityDomain_openPersoData_restrictParameter,
        __PE_SecurityDomain_openPersoData_contactlessProtocolParameters,
        _PE_SecurityDomain_openPersoData,
        __PE_SecurityDomain_catTpParameters_catTpMaxSduSize,
        __PE_SecurityDomain_catTpParameters_catTpMaxPduSize,
        _PE_SecurityDomain_catTpParameters,
        PE_SecurityDomain,
        _KeyObject_keyUsageQualifier,
        _KeyObject_keyAccess,
        _KeyObject_keyIdentifier,
        _KeyObject_keyVersionNumber,
        _KeyObject_keyCounterValue,
        ___KeyObject_keyCompontents__item__keyType,
        ___KeyObject_keyCompontents__item__keyData,
        ___KeyObject_keyCompontents__item__macLength,
        __KeyObject_keyCompontents__item_,
        _KeyObject_keyCompontents,
        KeyObject,
        _PE_Application_app_Header,
        _PE_Application_loadBlock,
        __PE_Application_instanceList__item_,
        _PE_Application_instanceList,
        PE_Application,
        _ApplicationLoadPackage_loadPackageAID,
        _ApplicationLoadPackage_securityDomainAID,
        _ApplicationLoadPackage_nonVolatileCodeLimitC6,
        _ApplicationLoadPackage_volatileDataLimitC7,
        _ApplicationLoadPackage_nonVolatileDataLimitC8,
        _ApplicationLoadPackage_hashValue,
        _ApplicationLoadPackage_loadBlockObject,
        ApplicationLoadPackage,
        _ApplicationInstance_applicationLoadPackageAID,
        _ApplicationInstance_classAID,
        _ApplicationInstance_instanceAID,
        _ApplicationInstance_extraditeSecurityDomainAID,
        _ApplicationInstance_applicationPrivileges,
        _ApplicationInstance_lifeCycleState,
        _ApplicationInstance_applicationSpecificParametersC9,
        _ApplicationInstance_systemSpecificParameters,
        _ApplicationInstance_applicationParameters,
        __ApplicationInstance_processData__item_,
        _ApplicationInstance_processData,
        _ApplicationInstance_controlReferenceTemplate,
        ApplicationInstance,
        _ApplicationSystemParameters_volatileMemoryQuotaC7,
        _ApplicationSystemParameters_nonVolatileMemoryQuotaC8,
        _ApplicationSystemParameters_globalServiceParameters,
        _ApplicationSystemParameters_implicitSelectionParameter,
        _ApplicationSystemParameters_volatileReservedMemory,
        _ApplicationSystemParameters_nonVolatileReservedMemory,
        _ApplicationSystemParameters_ts102226SIMFileAccessToolkitParameter,
        _ApplicationSystemParameters_ts102226AdditionalContactlessParameters,
        _ApplicationSystemParameters_contactlessProtocolParameters,
        _ApplicationSystemParameters_userInteractionContactlessParameters,
        _ApplicationSystemParameters_cumulativeGrantedVolatileMemory,
        _ApplicationSystemParameters_cumulativeGrantedNonVolatileMemory,
        ApplicationSystemParameters,
        _UICCApplicationParameters_uiccToolkitApplicationSpecificParametersField,
        _UICCApplicationParameters_uiccAccessApplicationSpecificParametersField,
        _UICCApplicationParameters_uiccAdministrativeAccessApplicationSpecificParametersField,
        UICCApplicationParameters,
        _TS102226AdditionalContactlessParameters_protocolParameterData,
        TS102226AdditionalContactlessParameters,
        _ControlReferenceTemplate_applicationProviderIdentifier,
        ControlReferenceTemplate,
        _PE_RFM_rfm_header,
        _PE_RFM_instanceAID,
        _PE_RFM_securityDomainAID,
        __PE_RFM_tarList__item_,
        _PE_RFM_tarList,
        _PE_RFM_minimumSecurityLevel,
        _PE_RFM_uiccAccessDomain,
        _PE_RFM_uiccAdminAccessDomain,
        _PE_RFM_adfRFMAccess,
        PE_RFM,
        _ADFRFMAccess_adfAID,
        _ADFRFMAccess_adfAccessDomain,
        _ADFRFMAccess_adfAdminAccessDomain,
        ADFRFMAccess,
        _PE_NonStandard_nonStandard_header,
        _PE_NonStandard_issuerID,
        _PE_NonStandard_content,
        PE_NonStandard,
        _PE_End_end_header,
        PE_End,
        _PEStatus_status,
        _PEStatus_identification,
        _PEStatus_additional_information,
        _PEStatus_offset,
        PEStatus,
        __EUICCResponse_peStatus__item_,
        _EUICCResponse_peStatus,
        _EUICCResponse_profileInstallationAborted,
        _EUICCResponse_statusMessage,
        EUICCResponse,
    ]

class SGP32Definitions:

    _name_  = 'SGP32Definitions'
    _oid_   = [2, 23, 146, 1, 1, 31]
    
    _obj_ = [
        'EuiccPackageRequest',
        'EuiccPackageSigned',
        'EuiccPackage',
        'EimConfigurationData',
        'EimIdType',
        'EimSupportedProtocol',
        'Eco',
        'Psmo',
        'IpaEuiccDataRequest',
        'ProfileDownloadTriggerRequest',
        'ProfileDownloadData',
        'EimAcknowledgements',
        'SequenceNumber',
        'EuiccPackageResult',
        'EuiccPackageResultSigned',
        'EuiccPackageResultDataSigned',
        'EuiccResultData',
        'EuiccPackageErrorSigned',
        'EuiccPackageErrorDataSigned',
        'EuiccPackageErrorCode',
        'EuiccPackageErrorUnsigned',
        'ConfigureAutoEnableResult',
        'EnableProfileResult',
        'DisableProfileResult',
        'DeleteProfileResult',
        'ProfileInfoListResponse',
        'ProfileInfoListError',
        'RollbackProfileResult',
        'AddEimResult',
        'DeleteEimResult',
        'UpdateEimResult',
        'ListEimResult',
        'EimIdInfo',
        'IpaEuiccDataResponse',
        'IpaEuiccData',
        'ProfileDownloadTriggerResult',
        'IpaCapabilities',
        'EUICCInfo2',
        'IoTSpecificInfo',
        'IpaMode',
        'AddInitialEimRequest',
        'AddInitialEimResponse',
        'GetCertsRequest',
        'GetCertsResponse',
        'RetrieveNotificationsListResponse',
        'EnableUsingDDRequest',
        'EnableUsingDDResponse',
        'ProfileRollbackRequest',
        'ProfileRollbackResponse',
        'ConfigureAutoProfileEnablingRequest',
        'ConfigureAutoProfileEnablingResponse',
        'GetEimConfigurationDataRequest',
        'GetEimConfigurationDataResponse',
        'PrepareDownloadResponse',
        'CompactPrepareDownloadResponseOk',
        'CompactEuiccSigned2',
        'AuthenticateServerResponse',
        'CompactAuthenticateResponseOk',
        'CompactEuiccSigned1',
        'PendingNotification',
        'ProfileInstallationResult',
        'CompactProfileInstallationResult',
        'CompactProfileInstallationResultData',
        'CompactSuccessResult',
        'CompactOtherSignedNotification',
        'CancelSessionResponse',
        'CompactCancelSessionResponseOk',
        'CompactEuiccCancelSessionSigned',
        'EsipaMessageFromIpaToEim',
        'EsipaMessageFromEimToIpa',
        'InitiateAuthenticationRequestEsipa',
        'InitiateAuthenticationResponseEsipa',
        'InitiateAuthenticationOkEsipa',
        'AuthenticateClientRequestEsipa',
        'AuthenticateClientResponseEsipa',
        'AuthenticateClientOkDPEsipa',
        'AuthenticateClientOkDSEsipa',
        'GetBoundProfilePackageRequestEsipa',
        'GetBoundProfilePackageResponseEsipa',
        'GetBoundProfilePackageOkEsipa',
        'HandleNotificationEsipa',
        'CancelSessionRequestEsipa',
        'CancelSessionResponseEsipa',
        'CancelSessionOk',
        'GetEimPackageRequest',
        'GetEimPackageResponse',
        'ProvideEimPackageResult',
        'ProvideEimPackageResultResponse',
        'TransferEimPackageRequest',
        'TransferEimPackageResponse',
        ]
    _type_ = [
        'EuiccPackageRequest',
        'EuiccPackageSigned',
        'EuiccPackage',
        'EimConfigurationData',
        'EimIdType',
        'EimSupportedProtocol',
        'Eco',
        'Psmo',
        'IpaEuiccDataRequest',
        'ProfileDownloadTriggerRequest',
        'ProfileDownloadData',
        'EimAcknowledgements',
        'SequenceNumber',
        'EuiccPackageResult',
        'EuiccPackageResultSigned',
        'EuiccPackageResultDataSigned',
        'EuiccResultData',
        'EuiccPackageErrorSigned',
        'EuiccPackageErrorDataSigned',
        'EuiccPackageErrorCode',
        'EuiccPackageErrorUnsigned',
        'ConfigureAutoEnableResult',
        'EnableProfileResult',
        'DisableProfileResult',
        'DeleteProfileResult',
        'ProfileInfoListResponse',
        'ProfileInfoListError',
        'RollbackProfileResult',
        'AddEimResult',
        'DeleteEimResult',
        'UpdateEimResult',
        'ListEimResult',
        'EimIdInfo',
        'IpaEuiccDataResponse',
        'IpaEuiccData',
        'ProfileDownloadTriggerResult',
        'IpaCapabilities',
        'EUICCInfo2',
        'IoTSpecificInfo',
        'IpaMode',
        'AddInitialEimRequest',
        'AddInitialEimResponse',
        'GetCertsRequest',
        'GetCertsResponse',
        'RetrieveNotificationsListResponse',
        'EnableUsingDDRequest',
        'EnableUsingDDResponse',
        'ProfileRollbackRequest',
        'ProfileRollbackResponse',
        'ConfigureAutoProfileEnablingRequest',
        'ConfigureAutoProfileEnablingResponse',
        'GetEimConfigurationDataRequest',
        'GetEimConfigurationDataResponse',
        'PrepareDownloadResponse',
        'CompactPrepareDownloadResponseOk',
        'CompactEuiccSigned2',
        'AuthenticateServerResponse',
        'CompactAuthenticateResponseOk',
        'CompactEuiccSigned1',
        'PendingNotification',
        'ProfileInstallationResult',
        'CompactProfileInstallationResult',
        'CompactProfileInstallationResultData',
        'CompactSuccessResult',
        'CompactOtherSignedNotification',
        'CancelSessionResponse',
        'CompactCancelSessionResponseOk',
        'CompactEuiccCancelSessionSigned',
        'EsipaMessageFromIpaToEim',
        'EsipaMessageFromEimToIpa',
        'InitiateAuthenticationRequestEsipa',
        'InitiateAuthenticationResponseEsipa',
        'InitiateAuthenticationOkEsipa',
        'AuthenticateClientRequestEsipa',
        'AuthenticateClientResponseEsipa',
        'AuthenticateClientOkDPEsipa',
        'AuthenticateClientOkDSEsipa',
        'GetBoundProfilePackageRequestEsipa',
        'GetBoundProfilePackageResponseEsipa',
        'GetBoundProfilePackageOkEsipa',
        'HandleNotificationEsipa',
        'CancelSessionRequestEsipa',
        'CancelSessionResponseEsipa',
        'CancelSessionOk',
        'GetEimPackageRequest',
        'GetEimPackageResponse',
        'ProvideEimPackageResult',
        'ProvideEimPackageResultResponse',
        'TransferEimPackageRequest',
        'TransferEimPackageResponse',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< EuiccPackageRequest >-----#
    EuiccPackageRequest = SEQ(name='EuiccPackageRequest', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccPackageRequest_euiccPackageSigned = SEQ(name='euiccPackageSigned', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageSigned')))
    _EuiccPackageRequest_eimSignature = OCT_STR(name='eimSignature', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    EuiccPackageRequest._cont = ASN1Dict([
        ('euiccPackageSigned', _EuiccPackageRequest_euiccPackageSigned),
        ('eimSignature', _EuiccPackageRequest_eimSignature),
        ])
    EuiccPackageRequest._ext = []
    
    #-----< EuiccPackageSigned >-----#
    EuiccPackageSigned = SEQ(name='EuiccPackageSigned', mode=MODE_TYPE)
    _EuiccPackageSigned_eimId = STR_UTF8(name='eimId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccPackageSigned_eidValue = OCT_STR(name='eidValue', mode=MODE_TYPE, tag=(26, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet16')))
    _EuiccPackageSigned_counterValue = INT(name='counterValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccPackageSigned_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')), opt=True)
    _EuiccPackageSigned_euiccPackage = CHOICE(name='euiccPackage', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackage')))
    EuiccPackageSigned._cont = ASN1Dict([
        ('eimId', _EuiccPackageSigned_eimId),
        ('eidValue', _EuiccPackageSigned_eidValue),
        ('counterValue', _EuiccPackageSigned_counterValue),
        ('transactionId', _EuiccPackageSigned_transactionId),
        ('euiccPackage', _EuiccPackageSigned_euiccPackage),
        ])
    EuiccPackageSigned._ext = []
    
    #-----< EuiccPackage >-----#
    EuiccPackage = CHOICE(name='EuiccPackage', mode=MODE_TYPE)
    _EuiccPackage_psmoList = SEQ_OF(name='psmoList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EuiccPackage_psmoList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'Psmo')))
    _EuiccPackage_psmoList._cont = __EuiccPackage_psmoList__item_
    _EuiccPackage_ecoList = SEQ_OF(name='ecoList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EuiccPackage_ecoList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'Eco')))
    _EuiccPackage_ecoList._cont = __EuiccPackage_ecoList__item_
    EuiccPackage._cont = ASN1Dict([
        ('psmoList', _EuiccPackage_psmoList),
        ('ecoList', _EuiccPackage_ecoList),
        ])
    EuiccPackage._ext = []
    
    #-----< EimConfigurationData >-----#
    EimConfigurationData = SEQ(name='EimConfigurationData', mode=MODE_TYPE)
    _EimConfigurationData_eimId = STR_UTF8(name='eimId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EimConfigurationData_eimFqdn = STR_UTF8(name='eimFqdn', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EimConfigurationData_eimIdType = INT(name='eimIdType', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EimIdType')), opt=True)
    _EimConfigurationData_counterValue = INT(name='counterValue', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EimConfigurationData_associationToken = INT(name='associationToken', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EimConfigurationData_eimPublicKeyData = CHOICE(name='eimPublicKeyData', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EimConfigurationData_eimPublicKeyData_eimPublicKey = SEQ(name='eimPublicKey', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'SubjectPublicKeyInfo')))
    __EimConfigurationData_eimPublicKeyData_eimCertificate = SEQ(name='eimCertificate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    _EimConfigurationData_eimPublicKeyData._cont = ASN1Dict([
        ('eimPublicKey', __EimConfigurationData_eimPublicKeyData_eimPublicKey),
        ('eimCertificate', __EimConfigurationData_eimPublicKeyData_eimCertificate),
        ])
    _EimConfigurationData_eimPublicKeyData._ext = []
    _EimConfigurationData_trustedPublicKeyDataTls = CHOICE(name='trustedPublicKeyDataTls', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EimConfigurationData_trustedPublicKeyDataTls_trustedEimPkTls = SEQ(name='trustedEimPkTls', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'SubjectPublicKeyInfo')))
    __EimConfigurationData_trustedPublicKeyDataTls_trustedCertificateTls = SEQ(name='trustedCertificateTls', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    _EimConfigurationData_trustedPublicKeyDataTls._cont = ASN1Dict([
        ('trustedEimPkTls', __EimConfigurationData_trustedPublicKeyDataTls_trustedEimPkTls),
        ('trustedCertificateTls', __EimConfigurationData_trustedPublicKeyDataTls_trustedCertificateTls),
        ])
    _EimConfigurationData_trustedPublicKeyDataTls._ext = []
    _EimConfigurationData_eimSupportedProtocol = BIT_STR(name='eimSupportedProtocol', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EimSupportedProtocol')), opt=True)
    _EimConfigurationData_euiccCiPKId = OCT_STR(name='euiccCiPKId', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')), opt=True)
    EimConfigurationData._cont = ASN1Dict([
        ('eimId', _EimConfigurationData_eimId),
        ('eimFqdn', _EimConfigurationData_eimFqdn),
        ('eimIdType', _EimConfigurationData_eimIdType),
        ('counterValue', _EimConfigurationData_counterValue),
        ('associationToken', _EimConfigurationData_associationToken),
        ('eimPublicKeyData', _EimConfigurationData_eimPublicKeyData),
        ('trustedPublicKeyDataTls', _EimConfigurationData_trustedPublicKeyDataTls),
        ('eimSupportedProtocol', _EimConfigurationData_eimSupportedProtocol),
        ('euiccCiPKId', _EimConfigurationData_euiccCiPKId),
        ])
    EimConfigurationData._ext = []
    
    #-----< EimIdType >-----#
    EimIdType = INT(name='EimIdType', mode=MODE_TYPE)
    EimIdType._cont = ASN1Dict([('eimIdTypeOid', 1), ('eimIdTypeFqdn', 2), ('eimIdTypeProprietary', 3)])
    
    #-----< EimSupportedProtocol >-----#
    EimSupportedProtocol = BIT_STR(name='EimSupportedProtocol', mode=MODE_TYPE)
    EimSupportedProtocol._cont = ASN1Dict([('eimRetrieveHttps', 0), ('eimRetrieveCoaps', 1), ('eimInjectHttps', 2), ('eimInjectCoaps', 3), ('eimProprietary', 4)])
    
    #-----< Eco >-----#
    Eco = CHOICE(name='Eco', mode=MODE_TYPE)
    _Eco_addEim = SEQ(name='addEim', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EimConfigurationData')))
    _Eco_deleteEim = SEQ(name='deleteEim', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Eco_deleteEim_eimId = STR_UTF8(name='eimId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Eco_deleteEim._cont = ASN1Dict([
        ('eimId', __Eco_deleteEim_eimId),
        ])
    _Eco_deleteEim._ext = []
    _Eco_updateEim = SEQ(name='updateEim', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EimConfigurationData')))
    _Eco_listEim = SEQ(name='listEim', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Eco_listEim._cont = ASN1Dict([
        ])
    _Eco_listEim._ext = []
    Eco._cont = ASN1Dict([
        ('addEim', _Eco_addEim),
        ('deleteEim', _Eco_deleteEim),
        ('updateEim', _Eco_updateEim),
        ('listEim', _Eco_listEim),
        ])
    Eco._ext = []
    
    #-----< Psmo >-----#
    Psmo = CHOICE(name='Psmo', mode=MODE_TYPE)
    _Psmo_enable = SEQ(name='enable', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Psmo_enable_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, tag=(26, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Iccid')))
    __Psmo_enable_rollbackFlag = NULL(name='rollbackFlag', mode=MODE_TYPE, opt=True)
    _Psmo_enable._cont = ASN1Dict([
        ('iccid', __Psmo_enable_iccid),
        ('rollbackFlag', __Psmo_enable_rollbackFlag),
        ])
    _Psmo_enable._ext = []
    _Psmo_disable = SEQ(name='disable', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Psmo_disable_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, tag=(26, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Iccid')))
    _Psmo_disable._cont = ASN1Dict([
        ('iccid', __Psmo_disable_iccid),
        ])
    _Psmo_disable._ext = []
    _Psmo_delete = SEQ(name='delete', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Psmo_delete_iccid = OCT_STR(name='iccid', mode=MODE_TYPE, tag=(26, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Iccid')))
    _Psmo_delete._cont = ASN1Dict([
        ('iccid', __Psmo_delete_iccid),
        ])
    _Psmo_delete._ext = []
    _Psmo_listProfileInfo = SEQ(name='listProfileInfo', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ProfileInfoListRequest')))
    _Psmo_getRAT = SEQ(name='getRAT', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _Psmo_getRAT._cont = ASN1Dict([
        ])
    _Psmo_getRAT._ext = []
    _Psmo_configureAutoEnable = SEQ(name='configureAutoEnable', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __Psmo_configureAutoEnable_autoEnableFlag = NULL(name='autoEnableFlag', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Psmo_configureAutoEnable_smdpOid = OID(name='smdpOid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __Psmo_configureAutoEnable_smdpAddress = STR_UTF8(name='smdpAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _Psmo_configureAutoEnable._cont = ASN1Dict([
        ('autoEnableFlag', __Psmo_configureAutoEnable_autoEnableFlag),
        ('smdpOid', __Psmo_configureAutoEnable_smdpOid),
        ('smdpAddress', __Psmo_configureAutoEnable_smdpAddress),
        ])
    _Psmo_configureAutoEnable._ext = []
    Psmo._cont = ASN1Dict([
        ('enable', _Psmo_enable),
        ('disable', _Psmo_disable),
        ('delete', _Psmo_delete),
        ('listProfileInfo', _Psmo_listProfileInfo),
        ('getRAT', _Psmo_getRAT),
        ('configureAutoEnable', _Psmo_configureAutoEnable),
        ])
    Psmo._ext = []
    
    #-----< IpaEuiccDataRequest >-----#
    IpaEuiccDataRequest = SEQ(name='IpaEuiccDataRequest', mode=MODE_TYPE, tag=(82, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IpaEuiccDataRequest_tagList = OCT_STR(name='tagList', mode=MODE_TYPE, tag=(28, TAG_APPLICATION, TAG_IMPLICIT))
    _IpaEuiccDataRequest_euiccCiPKId = OCT_STR(name='euiccCiPKId', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')), opt=True)
    _IpaEuiccDataRequest_searchCriteria = CHOICE(name='searchCriteria', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __IpaEuiccDataRequest_searchCriteria_seqNumber = INT(name='seqNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __IpaEuiccDataRequest_searchCriteria_profileManagementOperation = BIT_STR(name='profileManagementOperation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'NotificationEvent')))
    __IpaEuiccDataRequest_searchCriteria_euiccPackageResults = NULL(name='euiccPackageResults', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IpaEuiccDataRequest_searchCriteria._cont = ASN1Dict([
        ('seqNumber', __IpaEuiccDataRequest_searchCriteria_seqNumber),
        ('profileManagementOperation', __IpaEuiccDataRequest_searchCriteria_profileManagementOperation),
        ('euiccPackageResults', __IpaEuiccDataRequest_searchCriteria_euiccPackageResults),
        ])
    _IpaEuiccDataRequest_searchCriteria._ext = []
    IpaEuiccDataRequest._cont = ASN1Dict([
        ('tagList', _IpaEuiccDataRequest_tagList),
        ('euiccCiPKId', _IpaEuiccDataRequest_euiccCiPKId),
        ('searchCriteria', _IpaEuiccDataRequest_searchCriteria),
        ])
    IpaEuiccDataRequest._ext = []
    
    #-----< ProfileDownloadTriggerRequest >-----#
    ProfileDownloadTriggerRequest = SEQ(name='ProfileDownloadTriggerRequest', mode=MODE_TYPE, tag=(84, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileDownloadTriggerRequest_profileDownloadData = CHOICE(name='profileDownloadData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProfileDownloadData')), opt=True)
    _ProfileDownloadTriggerRequest_eimTransactionId = OCT_STR(name='eimTransactionId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')), opt=True)
    ProfileDownloadTriggerRequest._cont = ASN1Dict([
        ('profileDownloadData', _ProfileDownloadTriggerRequest_profileDownloadData),
        ('eimTransactionId', _ProfileDownloadTriggerRequest_eimTransactionId),
        ])
    ProfileDownloadTriggerRequest._ext = []
    
    #-----< ProfileDownloadData >-----#
    ProfileDownloadData = CHOICE(name='ProfileDownloadData', mode=MODE_TYPE)
    _ProfileDownloadData_activationCode = STR_UTF8(name='activationCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileDownloadData_activationCode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _ProfileDownloadData_contactDefaultSmdp = NULL(name='contactDefaultSmdp', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileDownloadData_contactSmds = SEQ(name='contactSmds', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ProfileDownloadData_contactSmds_smdsAddress = STR_UTF8(name='smdsAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ProfileDownloadData_contactSmds._cont = ASN1Dict([
        ('smdsAddress', __ProfileDownloadData_contactSmds_smdsAddress),
        ])
    _ProfileDownloadData_contactSmds._ext = []
    ProfileDownloadData._cont = ASN1Dict([
        ('activationCode', _ProfileDownloadData_activationCode),
        ('contactDefaultSmdp', _ProfileDownloadData_contactDefaultSmdp),
        ('contactSmds', _ProfileDownloadData_contactSmds),
        ])
    ProfileDownloadData._ext = []
    
    #-----< EimAcknowledgements >-----#
    EimAcknowledgements = SEQ_OF(name='EimAcknowledgements', mode=MODE_TYPE, tag=(83, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EimAcknowledgements__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'SequenceNumber')))
    EimAcknowledgements._cont = _EimAcknowledgements__item_
    
    #-----< SequenceNumber >-----#
    SequenceNumber = INT(name='SequenceNumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    
    #-----< EuiccPackageResult >-----#
    EuiccPackageResult = CHOICE(name='EuiccPackageResult', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccPackageResult_euiccPackageResultSigned = SEQ(name='euiccPackageResultSigned', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageResultSigned')))
    _EuiccPackageResult_euiccPackageErrorSigned = SEQ(name='euiccPackageErrorSigned', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageErrorSigned')))
    _EuiccPackageResult_euiccPackageErrorUnsigned = SEQ(name='euiccPackageErrorUnsigned', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageErrorUnsigned')))
    EuiccPackageResult._cont = ASN1Dict([
        ('euiccPackageResultSigned', _EuiccPackageResult_euiccPackageResultSigned),
        ('euiccPackageErrorSigned', _EuiccPackageResult_euiccPackageErrorSigned),
        ('euiccPackageErrorUnsigned', _EuiccPackageResult_euiccPackageErrorUnsigned),
        ])
    EuiccPackageResult._ext = []
    
    #-----< EuiccPackageResultSigned >-----#
    EuiccPackageResultSigned = SEQ(name='EuiccPackageResultSigned', mode=MODE_TYPE)
    _EuiccPackageResultSigned_euiccPackageResultDataSigned = SEQ(name='euiccPackageResultDataSigned', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageResultDataSigned')))
    _EuiccPackageResultSigned_euiccSignEPR = OCT_STR(name='euiccSignEPR', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    EuiccPackageResultSigned._cont = ASN1Dict([
        ('euiccPackageResultDataSigned', _EuiccPackageResultSigned_euiccPackageResultDataSigned),
        ('euiccSignEPR', _EuiccPackageResultSigned_euiccSignEPR),
        ])
    EuiccPackageResultSigned._ext = []
    
    #-----< EuiccPackageResultDataSigned >-----#
    EuiccPackageResultDataSigned = SEQ(name='EuiccPackageResultDataSigned', mode=MODE_TYPE)
    _EuiccPackageResultDataSigned_eimId = STR_UTF8(name='eimId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccPackageResultDataSigned_counterValue = INT(name='counterValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccPackageResultDataSigned_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')), opt=True)
    _EuiccPackageResultDataSigned_seqNumber = INT(name='seqNumber', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccPackageResultDataSigned_euiccResult = SEQ_OF(name='euiccResult', mode=MODE_TYPE)
    __EuiccPackageResultDataSigned_euiccResult__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EuiccResultData')))
    _EuiccPackageResultDataSigned_euiccResult._cont = __EuiccPackageResultDataSigned_euiccResult__item_
    EuiccPackageResultDataSigned._cont = ASN1Dict([
        ('eimId', _EuiccPackageResultDataSigned_eimId),
        ('counterValue', _EuiccPackageResultDataSigned_counterValue),
        ('transactionId', _EuiccPackageResultDataSigned_transactionId),
        ('seqNumber', _EuiccPackageResultDataSigned_seqNumber),
        ('euiccResult', _EuiccPackageResultDataSigned_euiccResult),
        ])
    EuiccPackageResultDataSigned._ext = []
    
    #-----< EuiccResultData >-----#
    EuiccResultData = CHOICE(name='EuiccResultData', mode=MODE_TYPE)
    _EuiccResultData_enableResult = INT(name='enableResult', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EnableProfileResult')))
    _EuiccResultData_disableResult = INT(name='disableResult', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'DisableProfileResult')))
    _EuiccResultData_deleteResult = INT(name='deleteResult', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'DeleteProfileResult')))
    _EuiccResultData_listProfileInfoResult = CHOICE(name='listProfileInfoResult', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProfileInfoListResponse')))
    _EuiccResultData_getRATResult = SEQ_OF(name='getRATResult', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'RulesAuthorisationTable')))
    _EuiccResultData_configureAutoEnableResult = INT(name='configureAutoEnableResult', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ConfigureAutoEnableResult')))
    _EuiccResultData_addEimResult = CHOICE(name='addEimResult', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'AddEimResult')))
    _EuiccResultData_deleteEimResult = INT(name='deleteEimResult', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'DeleteEimResult')))
    _EuiccResultData_updateEimResult = INT(name='updateEimResult', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'UpdateEimResult')))
    _EuiccResultData_listEimResult = CHOICE(name='listEimResult', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ListEimResult')))
    _EuiccResultData_rollbackResult = INT(name='rollbackResult', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'RollbackProfileResult')))
    _EuiccResultData_processingTerminated = INT(name='processingTerminated', mode=MODE_TYPE)
    _EuiccResultData_processingTerminated._cont = ASN1Dict([('resultSizeOverflow', 1), ('unknownOrDamagedCommand', 2), ('interruption', 3), ('undefinedError', 127)])
    EuiccResultData._cont = ASN1Dict([
        ('enableResult', _EuiccResultData_enableResult),
        ('disableResult', _EuiccResultData_disableResult),
        ('deleteResult', _EuiccResultData_deleteResult),
        ('listProfileInfoResult', _EuiccResultData_listProfileInfoResult),
        ('getRATResult', _EuiccResultData_getRATResult),
        ('configureAutoEnableResult', _EuiccResultData_configureAutoEnableResult),
        ('addEimResult', _EuiccResultData_addEimResult),
        ('deleteEimResult', _EuiccResultData_deleteEimResult),
        ('updateEimResult', _EuiccResultData_updateEimResult),
        ('listEimResult', _EuiccResultData_listEimResult),
        ('rollbackResult', _EuiccResultData_rollbackResult),
        ('processingTerminated', _EuiccResultData_processingTerminated),
        ])
    EuiccResultData._ext = []
    
    #-----< EuiccPackageErrorSigned >-----#
    EuiccPackageErrorSigned = SEQ(name='EuiccPackageErrorSigned', mode=MODE_TYPE)
    _EuiccPackageErrorSigned_euiccPackageErrorDataSigned = SEQ(name='euiccPackageErrorDataSigned', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageErrorDataSigned')))
    _EuiccPackageErrorSigned_euiccSignEPE = OCT_STR(name='euiccSignEPE', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    EuiccPackageErrorSigned._cont = ASN1Dict([
        ('euiccPackageErrorDataSigned', _EuiccPackageErrorSigned_euiccPackageErrorDataSigned),
        ('euiccSignEPE', _EuiccPackageErrorSigned_euiccSignEPE),
        ])
    EuiccPackageErrorSigned._ext = []
    
    #-----< EuiccPackageErrorDataSigned >-----#
    EuiccPackageErrorDataSigned = SEQ(name='EuiccPackageErrorDataSigned', mode=MODE_TYPE)
    _EuiccPackageErrorDataSigned_eimId = STR_UTF8(name='eimId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccPackageErrorDataSigned_counterValue = INT(name='counterValue', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccPackageErrorDataSigned_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')), opt=True)
    _EuiccPackageErrorDataSigned_euiccPackageErrorCode = INT(name='euiccPackageErrorCode', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageErrorCode')))
    EuiccPackageErrorDataSigned._cont = ASN1Dict([
        ('eimId', _EuiccPackageErrorDataSigned_eimId),
        ('counterValue', _EuiccPackageErrorDataSigned_counterValue),
        ('transactionId', _EuiccPackageErrorDataSigned_transactionId),
        ('euiccPackageErrorCode', _EuiccPackageErrorDataSigned_euiccPackageErrorCode),
        ])
    EuiccPackageErrorDataSigned._ext = []
    
    #-----< EuiccPackageErrorCode >-----#
    EuiccPackageErrorCode = INT(name='EuiccPackageErrorCode', mode=MODE_TYPE)
    EuiccPackageErrorCode._cont = ASN1Dict([('invalidEid', 3), ('replayError', 4), ('counterValueOutOfRange', 6), ('sizeOverflow', 15), ('undefinedError', 127)])
    
    #-----< EuiccPackageErrorUnsigned >-----#
    EuiccPackageErrorUnsigned = SEQ(name='EuiccPackageErrorUnsigned', mode=MODE_TYPE)
    _EuiccPackageErrorUnsigned_eimId = STR_UTF8(name='eimId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EuiccPackageErrorUnsigned_associationToken = INT(name='associationToken', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    EuiccPackageErrorUnsigned._cont = ASN1Dict([
        ('eimId', _EuiccPackageErrorUnsigned_eimId),
        ('associationToken', _EuiccPackageErrorUnsigned_associationToken),
        ])
    EuiccPackageErrorUnsigned._ext = []
    
    #-----< ConfigureAutoEnableResult >-----#
    ConfigureAutoEnableResult = INT(name='ConfigureAutoEnableResult', mode=MODE_TYPE)
    ConfigureAutoEnableResult._cont = ASN1Dict([('ok', 0), ('insufficientMemory', 1), ('commandError', 7), ('undefinedError', 127)])
    
    #-----< EnableProfileResult >-----#
    EnableProfileResult = INT(name='EnableProfileResult', mode=MODE_TYPE)
    EnableProfileResult._cont = ASN1Dict([('ok', 0), ('iccidOrAidNotFound', 1), ('profileNotInDisabledState', 2), ('undefinedError', 127)])
    
    #-----< DisableProfileResult >-----#
    DisableProfileResult = INT(name='DisableProfileResult', mode=MODE_TYPE)
    DisableProfileResult._cont = ASN1Dict([('ok', 0), ('iccidOrAidNotFound', 1), ('profileNotInEnabledState', 2), ('undefinedError', 127)])
    
    #-----< DeleteProfileResult >-----#
    DeleteProfileResult = INT(name='DeleteProfileResult', mode=MODE_TYPE)
    DeleteProfileResult._cont = ASN1Dict([('ok', 0), ('iccidOrAidNotFound', 1), ('profileNotInDisabledState', 2), ('undefinedError', 127)])
    
    #-----< ProfileInfoListResponse >-----#
    ProfileInfoListResponse = CHOICE(name='ProfileInfoListResponse', mode=MODE_TYPE, tag=(45, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileInfoListResponse_profileInfoListOk = SEQ_OF(name='profileInfoListOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ProfileInfoListResponse_profileInfoListOk__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'ProfileInfo')))
    _ProfileInfoListResponse_profileInfoListOk._cont = __ProfileInfoListResponse_profileInfoListOk__item_
    _ProfileInfoListResponse_profileInfoListError = INT(name='profileInfoListError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProfileInfoListError')))
    ProfileInfoListResponse._cont = ASN1Dict([
        ('profileInfoListOk', _ProfileInfoListResponse_profileInfoListOk),
        ('profileInfoListError', _ProfileInfoListResponse_profileInfoListError),
        ])
    ProfileInfoListResponse._ext = []
    
    #-----< ProfileInfoListError >-----#
    ProfileInfoListError = INT(name='ProfileInfoListError', mode=MODE_TYPE)
    ProfileInfoListError._cont = ASN1Dict([('incorrectInputValues', 1), ('profileChangeOngoing', 11), ('undefinedError', 127)])
    
    #-----< RollbackProfileResult >-----#
    RollbackProfileResult = INT(name='RollbackProfileResult', mode=MODE_TYPE)
    RollbackProfileResult._cont = ASN1Dict([('ok', 0), ('undefinedError', 127)])
    
    #-----< AddEimResult >-----#
    AddEimResult = CHOICE(name='AddEimResult', mode=MODE_TYPE)
    _AddEimResult_associationToken = INT(name='associationToken', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AddEimResult_addEimResultCode = INT(name='addEimResultCode', mode=MODE_TYPE)
    _AddEimResult_addEimResultCode._cont = ASN1Dict([('ok', 0), ('insufficientMemory', 1), ('ciPKUnknown', 3), ('invalidAssociationToken', 5), ('counterValueOutOfRange', 6), ('commandError', 7), ('undefinedError', 127)])
    AddEimResult._cont = ASN1Dict([
        ('associationToken', _AddEimResult_associationToken),
        ('addEimResultCode', _AddEimResult_addEimResultCode),
        ])
    AddEimResult._ext = []
    
    #-----< DeleteEimResult >-----#
    DeleteEimResult = INT(name='DeleteEimResult', mode=MODE_TYPE)
    DeleteEimResult._cont = ASN1Dict([('ok', 0), ('eimNotFound', 1), ('lastEimDeleted', 2), ('commandError', 7), ('undefinedError', 127)])
    
    #-----< UpdateEimResult >-----#
    UpdateEimResult = INT(name='UpdateEimResult', mode=MODE_TYPE)
    UpdateEimResult._cont = ASN1Dict([('ok', 0), ('eimNotFound', 1), ('ciPKUnknown', 3), ('counterValueOutOfRange', 6), ('commandError', 7), ('undefinedError', 127)])
    
    #-----< ListEimResult >-----#
    ListEimResult = CHOICE(name='ListEimResult', mode=MODE_TYPE)
    _ListEimResult_eimIdList = SEQ_OF(name='eimIdList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __ListEimResult_eimIdList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EimIdInfo')))
    _ListEimResult_eimIdList._cont = __ListEimResult_eimIdList__item_
    _ListEimResult_listEimError = INT(name='listEimError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ListEimResult_listEimError._cont = ASN1Dict([('commandError', 7), ('undefinedError', 127)])
    ListEimResult._cont = ASN1Dict([
        ('eimIdList', _ListEimResult_eimIdList),
        ('listEimError', _ListEimResult_listEimError),
        ])
    ListEimResult._ext = []
    
    #-----< EimIdInfo >-----#
    EimIdInfo = SEQ(name='EimIdInfo', mode=MODE_TYPE)
    _EimIdInfo_eimId = STR_UTF8(name='eimId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EimIdInfo_eimIdType = INT(name='eimIdType', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EimIdType')), opt=True)
    EimIdInfo._cont = ASN1Dict([
        ('eimId', _EimIdInfo_eimId),
        ('eimIdType', _EimIdInfo_eimIdType),
        ])
    EimIdInfo._ext = []
    
    #-----< IpaEuiccDataResponse >-----#
    IpaEuiccDataResponse = CHOICE(name='IpaEuiccDataResponse', mode=MODE_TYPE, tag=(82, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IpaEuiccDataResponse_ipaEuiccData = SEQ(name='ipaEuiccData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'IpaEuiccData')))
    _IpaEuiccDataResponse_ipaEuiccDataError = INT(name='ipaEuiccDataError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IpaEuiccDataResponse_ipaEuiccDataError._cont = ASN1Dict([('incorrectTagList', 1), ('euiccCiPKIdNotFound', 5), ('undefinedError', 127)])
    IpaEuiccDataResponse._cont = ASN1Dict([
        ('ipaEuiccData', _IpaEuiccDataResponse_ipaEuiccData),
        ('ipaEuiccDataError', _IpaEuiccDataResponse_ipaEuiccDataError),
        ])
    IpaEuiccDataResponse._ext = []
    
    #-----< IpaEuiccData >-----#
    IpaEuiccData = SEQ(name='IpaEuiccData', mode=MODE_TYPE)
    _IpaEuiccData_defaultSmdpAddress = STR_UTF8(name='defaultSmdpAddress', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IpaEuiccData_euiccInfo1 = SEQ(name='euiccInfo1', mode=MODE_TYPE, tag=(32, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'EUICCInfo1')), opt=True)
    _IpaEuiccData_euiccInfo2 = SEQ(name='euiccInfo2', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EUICCInfo2')), opt=True)
    _IpaEuiccData_rootSmdsAddress = STR_UTF8(name='rootSmdsAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IpaEuiccData_associationToken = INT(name='associationToken', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IpaEuiccData_eumCertificate = SEQ(name='eumCertificate', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')), opt=True)
    _IpaEuiccData_euiccCertificate = SEQ(name='euiccCertificate', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')), opt=True)
    _IpaEuiccData_ipaCapabilities = SEQ(name='ipaCapabilities', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'IpaCapabilities')), opt=True)
    _IpaEuiccData_deviceInfo = SEQ(name='deviceInfo', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'DeviceInfo')), opt=True)
    _IpaEuiccData_notificationsList = CHOICE(name='notificationsList', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'RetrieveNotificationsListResponse')), opt=True)
    IpaEuiccData._cont = ASN1Dict([
        ('defaultSmdpAddress', _IpaEuiccData_defaultSmdpAddress),
        ('euiccInfo1', _IpaEuiccData_euiccInfo1),
        ('euiccInfo2', _IpaEuiccData_euiccInfo2),
        ('rootSmdsAddress', _IpaEuiccData_rootSmdsAddress),
        ('associationToken', _IpaEuiccData_associationToken),
        ('eumCertificate', _IpaEuiccData_eumCertificate),
        ('euiccCertificate', _IpaEuiccData_euiccCertificate),
        ('ipaCapabilities', _IpaEuiccData_ipaCapabilities),
        ('deviceInfo', _IpaEuiccData_deviceInfo),
        ('notificationsList', _IpaEuiccData_notificationsList),
        ])
    IpaEuiccData._ext = []
    
    #-----< ProfileDownloadTriggerResult >-----#
    ProfileDownloadTriggerResult = SEQ(name='ProfileDownloadTriggerResult', mode=MODE_TYPE, tag=(84, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileDownloadTriggerResult_eimTransactionId = OCT_STR(name='eimTransactionId', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')), opt=True)
    _ProfileDownloadTriggerResult_profileDownloadTriggerResultData = CHOICE(name='profileDownloadTriggerResultData', mode=MODE_TYPE)
    __ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileInstallationResult = SEQ(name='profileInstallationResult', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProfileInstallationResult')))
    __ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileDownloadError = SEQ(name='profileDownloadError', mode=MODE_TYPE)
    ___ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileDownloadError_errorResponse = OCT_STR(name='errorResponse', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileDownloadError._cont = ASN1Dict([
        ('errorResponse', ___ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileDownloadError_errorResponse),
        ])
    __ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileDownloadError._ext = []
    _ProfileDownloadTriggerResult_profileDownloadTriggerResultData._cont = ASN1Dict([
        ('profileInstallationResult', __ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileInstallationResult),
        ('profileDownloadError', __ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileDownloadError),
        ])
    _ProfileDownloadTriggerResult_profileDownloadTriggerResultData._ext = []
    ProfileDownloadTriggerResult._cont = ASN1Dict([
        ('eimTransactionId', _ProfileDownloadTriggerResult_eimTransactionId),
        ('profileDownloadTriggerResultData', _ProfileDownloadTriggerResult_profileDownloadTriggerResultData),
        ])
    ProfileDownloadTriggerResult._ext = []
    
    #-----< IpaCapabilities >-----#
    IpaCapabilities = SEQ(name='IpaCapabilities', mode=MODE_TYPE)
    _IpaCapabilities_ipaFeatures = BIT_STR(name='ipaFeatures', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _IpaCapabilities_ipaFeatures._cont = ASN1Dict([('directRspServerCommunication', 0), ('indirectRspServerCommunication', 1), ('eimDownloadDataHandling', 2), ('eimCtxParams1Generation', 3), ('eimProfileMetadataVerification', 4), ('minimizeEsipaBytes', 5)])
    _IpaCapabilities_ipaSupportedProtocols = BIT_STR(name='ipaSupportedProtocols', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _IpaCapabilities_ipaSupportedProtocols._cont = ASN1Dict([('ipaRetrieveHttps', 0), ('ipaRetrieveCoaps', 1), ('ipaInjectHttps', 2), ('ipaInjectCoaps', 3), ('ipaProprietary', 4)])
    IpaCapabilities._cont = ASN1Dict([
        ('ipaFeatures', _IpaCapabilities_ipaFeatures),
        ('ipaSupportedProtocols', _IpaCapabilities_ipaSupportedProtocols),
        ])
    IpaCapabilities._ext = []
    
    #-----< EUICCInfo2 >-----#
    EUICCInfo2 = SEQ(name='EUICCInfo2', mode=MODE_TYPE, tag=(34, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EUICCInfo2_profileVersion = OCT_STR(name='profileVersion', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo2_svn = OCT_STR(name='svn', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo2_euiccFirmwareVer = OCT_STR(name='euiccFirmwareVer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo2_extCardResource = OCT_STR(name='extCardResource', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EUICCInfo2_uiccCapability = BIT_STR(name='uiccCapability', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PEDefinitions', 'UICCCapability')))
    _EUICCInfo2_ts102241Version = OCT_STR(name='ts102241Version', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _EUICCInfo2_globalplatformVersion = OCT_STR(name='globalplatformVersion', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _EUICCInfo2_rspCapability = BIT_STR(name='rspCapability', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'RspCapability')))
    _EUICCInfo2_euiccCiPKIdListForVerification = SEQ_OF(name='euiccCiPKIdListForVerification', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUICCInfo2_euiccCiPKIdListForVerification__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')))
    _EUICCInfo2_euiccCiPKIdListForVerification._cont = __EUICCInfo2_euiccCiPKIdListForVerification__item_
    _EUICCInfo2_euiccCiPKIdListForSigning = SEQ_OF(name='euiccCiPKIdListForSigning', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __EUICCInfo2_euiccCiPKIdListForSigning__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')))
    _EUICCInfo2_euiccCiPKIdListForSigning._cont = __EUICCInfo2_euiccCiPKIdListForSigning__item_
    _EUICCInfo2_euiccCategory = INT(name='euiccCategory', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EUICCInfo2_euiccCategory._cont = ASN1Dict([('other', 0), ('basicEuicc', 1), ('mediumEuicc', 2), ('contactlessEuicc', 3)])
    _EUICCInfo2_forbiddenProfilePolicyRules = BIT_STR(name='forbiddenProfilePolicyRules', mode=MODE_TYPE, tag=(25, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PprIds')), opt=True)
    _EUICCInfo2_ppVersion = OCT_STR(name='ppVersion', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo2_sasAcreditationNumber = STR_UTF8(name='sasAcreditationNumber', mode=MODE_TYPE)
    _EUICCInfo2_sasAcreditationNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=64)], ev=None, er=[])
    _EUICCInfo2_certificationDataObject = SEQ(name='certificationDataObject', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CertificationDataObject')), opt=True)
    _EUICCInfo2_treProperties = BIT_STR(name='treProperties', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EUICCInfo2_treProperties._cont = ASN1Dict([('isDiscrete', 0), ('isIntegrated', 1), ('usesRemoteMemory', 2)])
    _EUICCInfo2_treProductReference = STR_UTF8(name='treProductReference', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EUICCInfo2_additionalEuiccProfilePackageVersions = SEQ_OF(name='additionalEuiccProfilePackageVersions', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EUICCInfo2_additionalEuiccProfilePackageVersions__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _EUICCInfo2_additionalEuiccProfilePackageVersions._cont = __EUICCInfo2_additionalEuiccProfilePackageVersions__item_
    _EUICCInfo2_ipaMode = INT(name='ipaMode', mode=MODE_TYPE, tag=(16, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'IpaMode')), opt=True)
    _EUICCInfo2_rfu2 = SEQ_OF(name='rfu2', mode=MODE_TYPE, tag=(17, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    __EUICCInfo2_rfu2__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')))
    _EUICCInfo2_rfu2._cont = __EUICCInfo2_rfu2__item_
    _EUICCInfo2_rfu3 = OCT_STR(name='rfu3', mode=MODE_TYPE, tag=(18, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _EUICCInfo2_rfu3._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=32)], ev=None, er=[])
    _EUICCInfo2_rfu4 = OCT_STR(name='rfu4', mode=MODE_TYPE, tag=(19, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'VersionType')), opt=True)
    _EUICCInfo2_iotSpecificInfo = SEQ(name='iotSpecificInfo', mode=MODE_TYPE, tag=(20, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'IoTSpecificInfo')), opt=True)
    EUICCInfo2._cont = ASN1Dict([
        ('profileVersion', _EUICCInfo2_profileVersion),
        ('svn', _EUICCInfo2_svn),
        ('euiccFirmwareVer', _EUICCInfo2_euiccFirmwareVer),
        ('extCardResource', _EUICCInfo2_extCardResource),
        ('uiccCapability', _EUICCInfo2_uiccCapability),
        ('ts102241Version', _EUICCInfo2_ts102241Version),
        ('globalplatformVersion', _EUICCInfo2_globalplatformVersion),
        ('rspCapability', _EUICCInfo2_rspCapability),
        ('euiccCiPKIdListForVerification', _EUICCInfo2_euiccCiPKIdListForVerification),
        ('euiccCiPKIdListForSigning', _EUICCInfo2_euiccCiPKIdListForSigning),
        ('euiccCategory', _EUICCInfo2_euiccCategory),
        ('forbiddenProfilePolicyRules', _EUICCInfo2_forbiddenProfilePolicyRules),
        ('ppVersion', _EUICCInfo2_ppVersion),
        ('sasAcreditationNumber', _EUICCInfo2_sasAcreditationNumber),
        ('certificationDataObject', _EUICCInfo2_certificationDataObject),
        ('treProperties', _EUICCInfo2_treProperties),
        ('treProductReference', _EUICCInfo2_treProductReference),
        ('additionalEuiccProfilePackageVersions', _EUICCInfo2_additionalEuiccProfilePackageVersions),
        ('ipaMode', _EUICCInfo2_ipaMode),
        ('rfu2', _EUICCInfo2_rfu2),
        ('rfu3', _EUICCInfo2_rfu3),
        ('rfu4', _EUICCInfo2_rfu4),
        ('iotSpecificInfo', _EUICCInfo2_iotSpecificInfo),
        ])
    EUICCInfo2._ext = []
    
    #-----< IoTSpecificInfo >-----#
    IoTSpecificInfo = SEQ(name='IoTSpecificInfo', mode=MODE_TYPE)
    _IoTSpecificInfo_iotVersion = SEQ_OF(name='iotVersion', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __IoTSpecificInfo_iotVersion__item_ = OCT_STR(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'VersionType')))
    _IoTSpecificInfo_iotVersion._cont = __IoTSpecificInfo_iotVersion__item_
    IoTSpecificInfo._cont = ASN1Dict([
        ('iotVersion', _IoTSpecificInfo_iotVersion),
        ])
    IoTSpecificInfo._ext = []
    
    #-----< IpaMode >-----#
    IpaMode = INT(name='IpaMode', mode=MODE_TYPE)
    IpaMode._cont = ASN1Dict([('ipad', 0), ('ipae', 1)])
    
    #-----< AddInitialEimRequest >-----#
    AddInitialEimRequest = SEQ(name='AddInitialEimRequest', mode=MODE_TYPE, tag=(87, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AddInitialEimRequest_eimConfigurationDataList = SEQ_OF(name='eimConfigurationDataList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AddInitialEimRequest_eimConfigurationDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EimConfigurationData')))
    _AddInitialEimRequest_eimConfigurationDataList._cont = __AddInitialEimRequest_eimConfigurationDataList__item_
    AddInitialEimRequest._cont = ASN1Dict([
        ('eimConfigurationDataList', _AddInitialEimRequest_eimConfigurationDataList),
        ])
    AddInitialEimRequest._ext = []
    
    #-----< AddInitialEimResponse >-----#
    AddInitialEimResponse = CHOICE(name='AddInitialEimResponse', mode=MODE_TYPE, tag=(87, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AddInitialEimResponse_addInitialEimOk = SEQ_OF(name='addInitialEimOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __AddInitialEimResponse_addInitialEimOk__item_ = CHOICE(name='_item_', mode=MODE_TYPE)
    ___AddInitialEimResponse_addInitialEimOk__item__associationToken = INT(name='associationToken', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___AddInitialEimResponse_addInitialEimOk__item__addOk = NULL(name='addOk', mode=MODE_TYPE)
    __AddInitialEimResponse_addInitialEimOk__item_._cont = ASN1Dict([
        ('associationToken', ___AddInitialEimResponse_addInitialEimOk__item__associationToken),
        ('addOk', ___AddInitialEimResponse_addInitialEimOk__item__addOk),
        ])
    __AddInitialEimResponse_addInitialEimOk__item_._ext = []
    _AddInitialEimResponse_addInitialEimOk._cont = __AddInitialEimResponse_addInitialEimOk__item_
    _AddInitialEimResponse_addInitialEimError = INT(name='addInitialEimError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AddInitialEimResponse_addInitialEimError._cont = ASN1Dict([('insufficientMemory', 1), ('unsignedEimConfigDisallowed', 2), ('ciPKUnknown', 3), ('invalidAssociationToken', 5), ('counterValueOutOfRange', 6), ('undefinedError', 127)])
    AddInitialEimResponse._cont = ASN1Dict([
        ('addInitialEimOk', _AddInitialEimResponse_addInitialEimOk),
        ('addInitialEimError', _AddInitialEimResponse_addInitialEimError),
        ])
    AddInitialEimResponse._ext = []
    
    #-----< GetCertsRequest >-----#
    GetCertsRequest = SEQ(name='GetCertsRequest', mode=MODE_TYPE, tag=(86, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetCertsRequest_euiccCiPKId = OCT_STR(name='euiccCiPKId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Implicit88', 'SubjectKeyIdentifier')), opt=True)
    GetCertsRequest._cont = ASN1Dict([
        ('euiccCiPKId', _GetCertsRequest_euiccCiPKId),
        ])
    GetCertsRequest._ext = []
    
    #-----< GetCertsResponse >-----#
    GetCertsResponse = CHOICE(name='GetCertsResponse', mode=MODE_TYPE, tag=(86, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetCertsResponse_certs = SEQ(name='certs', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GetCertsResponse_certs_eumCertificate = SEQ(name='eumCertificate', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    __GetCertsResponse_certs_euiccCertificate = SEQ(name='euiccCertificate', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    _GetCertsResponse_certs._cont = ASN1Dict([
        ('eumCertificate', __GetCertsResponse_certs_eumCertificate),
        ('euiccCertificate', __GetCertsResponse_certs_euiccCertificate),
        ])
    _GetCertsResponse_certs._ext = []
    _GetCertsResponse_getCertsError = INT(name='getCertsError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetCertsResponse_getCertsError._cont = ASN1Dict([('invalidCiPKId', 1), ('undfinedError', 127)])
    GetCertsResponse._cont = ASN1Dict([
        ('certs', _GetCertsResponse_certs),
        ('getCertsError', _GetCertsResponse_getCertsError),
        ])
    GetCertsResponse._ext = []
    
    #-----< RetrieveNotificationsListResponse >-----#
    RetrieveNotificationsListResponse = CHOICE(name='RetrieveNotificationsListResponse', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RetrieveNotificationsListResponse_notificationList = SEQ_OF(name='notificationList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RetrieveNotificationsListResponse_notificationList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'PendingNotification')))
    _RetrieveNotificationsListResponse_notificationList._cont = __RetrieveNotificationsListResponse_notificationList__item_
    _RetrieveNotificationsListResponse_notificationsListResultError = INT(name='notificationsListResultError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _RetrieveNotificationsListResponse_notificationsListResultError._cont = ASN1Dict([('undefinedError', 127)])
    _RetrieveNotificationsListResponse_euiccPackageResultList = SEQ_OF(name='euiccPackageResultList', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RetrieveNotificationsListResponse_euiccPackageResultList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageResult')))
    _RetrieveNotificationsListResponse_euiccPackageResultList._cont = __RetrieveNotificationsListResponse_euiccPackageResultList__item_
    _RetrieveNotificationsListResponse_notificationAndEprList = SEQ(name='notificationAndEprList', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __RetrieveNotificationsListResponse_notificationAndEprList_notificationList = SEQ_OF(name='notificationList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RetrieveNotificationsListResponse_notificationAndEprList_notificationList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'PendingNotification')))
    __RetrieveNotificationsListResponse_notificationAndEprList_notificationList._cont = ___RetrieveNotificationsListResponse_notificationAndEprList_notificationList__item_
    __RetrieveNotificationsListResponse_notificationAndEprList_euiccPackageResultList = SEQ_OF(name='euiccPackageResultList', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ___RetrieveNotificationsListResponse_notificationAndEprList_euiccPackageResultList__item_ = CHOICE(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageResult')))
    __RetrieveNotificationsListResponse_notificationAndEprList_euiccPackageResultList._cont = ___RetrieveNotificationsListResponse_notificationAndEprList_euiccPackageResultList__item_
    _RetrieveNotificationsListResponse_notificationAndEprList._cont = ASN1Dict([
        ('notificationList', __RetrieveNotificationsListResponse_notificationAndEprList_notificationList),
        ('euiccPackageResultList', __RetrieveNotificationsListResponse_notificationAndEprList_euiccPackageResultList),
        ])
    _RetrieveNotificationsListResponse_notificationAndEprList._ext = []
    RetrieveNotificationsListResponse._cont = ASN1Dict([
        ('notificationList', _RetrieveNotificationsListResponse_notificationList),
        ('notificationsListResultError', _RetrieveNotificationsListResponse_notificationsListResultError),
        ('euiccPackageResultList', _RetrieveNotificationsListResponse_euiccPackageResultList),
        ('notificationAndEprList', _RetrieveNotificationsListResponse_notificationAndEprList),
        ])
    RetrieveNotificationsListResponse._ext = []
    
    #-----< EnableUsingDDRequest >-----#
    EnableUsingDDRequest = SEQ(name='EnableUsingDDRequest', mode=MODE_TYPE, tag=(90, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    EnableUsingDDRequest._cont = ASN1Dict([
        ])
    EnableUsingDDRequest._ext = []
    
    #-----< EnableUsingDDResponse >-----#
    EnableUsingDDResponse = SEQ(name='EnableUsingDDResponse', mode=MODE_TYPE, tag=(90, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EnableUsingDDResponse_enableUsingDDResult = INT(name='enableUsingDDResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _EnableUsingDDResponse_enableUsingDDResult._cont = ASN1Dict([('ok', 0), ('autoEnableNotAvailable', 1), ('noSessionContext', 4), ('undefinedError', 127)])
    EnableUsingDDResponse._cont = ASN1Dict([
        ('enableUsingDDResult', _EnableUsingDDResponse_enableUsingDDResult),
        ])
    EnableUsingDDResponse._ext = []
    
    #-----< ProfileRollbackRequest >-----#
    ProfileRollbackRequest = SEQ(name='ProfileRollbackRequest', mode=MODE_TYPE, tag=(88, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileRollbackRequest_refreshFlag = BOOL(name='refreshFlag', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    ProfileRollbackRequest._cont = ASN1Dict([
        ('refreshFlag', _ProfileRollbackRequest_refreshFlag),
        ])
    ProfileRollbackRequest._ext = []
    
    #-----< ProfileRollbackResponse >-----#
    ProfileRollbackResponse = SEQ(name='ProfileRollbackResponse', mode=MODE_TYPE, tag=(88, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileRollbackResponse_cmdResult = INT(name='cmdResult', mode=MODE_TYPE)
    _ProfileRollbackResponse_cmdResult._cont = ASN1Dict([('ok', 0), ('rollbackNotAllowed', 1), ('catBusy', 5), ('commandError', 7), ('undefinedError', 127)])
    _ProfileRollbackResponse_eUICCPackageResult = CHOICE(name='eUICCPackageResult', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageResult')), opt=True)
    ProfileRollbackResponse._cont = ASN1Dict([
        ('cmdResult', _ProfileRollbackResponse_cmdResult),
        ('eUICCPackageResult', _ProfileRollbackResponse_eUICCPackageResult),
        ])
    ProfileRollbackResponse._ext = []
    
    #-----< ConfigureAutoProfileEnablingRequest >-----#
    ConfigureAutoProfileEnablingRequest = SEQ(name='ConfigureAutoProfileEnablingRequest', mode=MODE_TYPE, tag=(89, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfigureAutoProfileEnablingRequest_autoEnableFlag = NULL(name='autoEnableFlag', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ConfigureAutoProfileEnablingRequest_smdpOid = OID(name='smdpOid', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _ConfigureAutoProfileEnablingRequest_smdpAddress = STR_UTF8(name='smdpAddress', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    ConfigureAutoProfileEnablingRequest._cont = ASN1Dict([
        ('autoEnableFlag', _ConfigureAutoProfileEnablingRequest_autoEnableFlag),
        ('smdpOid', _ConfigureAutoProfileEnablingRequest_smdpOid),
        ('smdpAddress', _ConfigureAutoProfileEnablingRequest_smdpAddress),
        ])
    ConfigureAutoProfileEnablingRequest._ext = []
    
    #-----< ConfigureAutoProfileEnablingResponse >-----#
    ConfigureAutoProfileEnablingResponse = SEQ(name='ConfigureAutoProfileEnablingResponse', mode=MODE_TYPE, tag=(89, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfigureAutoProfileEnablingResponse_configAutoEnableResult = INT(name='configAutoEnableResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ConfigureAutoProfileEnablingResponse_configAutoEnableResult._cont = ASN1Dict([('ok', 0), ('insufficientMemory', 1), ('unsignedAutoEnableConfigDisallowed', 2), ('undefinedError', 127)])
    ConfigureAutoProfileEnablingResponse._cont = ASN1Dict([
        ('configAutoEnableResult', _ConfigureAutoProfileEnablingResponse_configAutoEnableResult),
        ])
    ConfigureAutoProfileEnablingResponse._ext = []
    
    #-----< GetEimConfigurationDataRequest >-----#
    GetEimConfigurationDataRequest = SEQ(name='GetEimConfigurationDataRequest', mode=MODE_TYPE, tag=(85, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    GetEimConfigurationDataRequest._cont = ASN1Dict([
        ])
    GetEimConfigurationDataRequest._ext = []
    
    #-----< GetEimConfigurationDataResponse >-----#
    GetEimConfigurationDataResponse = SEQ(name='GetEimConfigurationDataResponse', mode=MODE_TYPE, tag=(85, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetEimConfigurationDataResponse_eimConfigurationDataList = SEQ_OF(name='eimConfigurationDataList', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __GetEimConfigurationDataResponse_eimConfigurationDataList__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'EimConfigurationData')))
    _GetEimConfigurationDataResponse_eimConfigurationDataList._cont = __GetEimConfigurationDataResponse_eimConfigurationDataList__item_
    GetEimConfigurationDataResponse._cont = ASN1Dict([
        ('eimConfigurationDataList', _GetEimConfigurationDataResponse_eimConfigurationDataList),
        ])
    GetEimConfigurationDataResponse._ext = []
    
    #-----< PrepareDownloadResponse >-----#
    PrepareDownloadResponse = CHOICE(name='PrepareDownloadResponse', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _PrepareDownloadResponse_downloadResponseOk = SEQ(name='downloadResponseOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PrepareDownloadResponseOk')))
    _PrepareDownloadResponse_downloadResponseError = SEQ(name='downloadResponseError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'PrepareDownloadResponseError')))
    _PrepareDownloadResponse_compactDownloadResponseOk = SEQ(name='compactDownloadResponseOk', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CompactPrepareDownloadResponseOk')))
    PrepareDownloadResponse._cont = ASN1Dict([
        ('downloadResponseOk', _PrepareDownloadResponse_downloadResponseOk),
        ('downloadResponseError', _PrepareDownloadResponse_downloadResponseError),
        ('compactDownloadResponseOk', _PrepareDownloadResponse_compactDownloadResponseOk),
        ])
    PrepareDownloadResponse._ext = []
    
    #-----< CompactPrepareDownloadResponseOk >-----#
    CompactPrepareDownloadResponseOk = SEQ(name='CompactPrepareDownloadResponseOk', mode=MODE_TYPE)
    _CompactPrepareDownloadResponseOk_compactEuiccSigned2 = SEQ(name='compactEuiccSigned2', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'CompactEuiccSigned2')))
    _CompactPrepareDownloadResponseOk_euiccSignature2 = OCT_STR(name='euiccSignature2', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    CompactPrepareDownloadResponseOk._cont = ASN1Dict([
        ('compactEuiccSigned2', _CompactPrepareDownloadResponseOk_compactEuiccSigned2),
        ('euiccSignature2', _CompactPrepareDownloadResponseOk_euiccSignature2),
        ])
    CompactPrepareDownloadResponseOk._ext = []
    
    #-----< CompactEuiccSigned2 >-----#
    CompactEuiccSigned2 = SEQ(name='CompactEuiccSigned2', mode=MODE_TYPE)
    _CompactEuiccSigned2_euiccOtpk = OCT_STR(name='euiccOtpk', mode=MODE_TYPE, tag=(73, TAG_APPLICATION, TAG_IMPLICIT), opt=True)
    _CompactEuiccSigned2_hashCc = OCT_STR(name='hashCc', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Octet32')), opt=True)
    CompactEuiccSigned2._cont = ASN1Dict([
        ('euiccOtpk', _CompactEuiccSigned2_euiccOtpk),
        ('hashCc', _CompactEuiccSigned2_hashCc),
        ])
    CompactEuiccSigned2._ext = []
    
    #-----< AuthenticateServerResponse >-----#
    AuthenticateServerResponse = CHOICE(name='AuthenticateServerResponse', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateServerResponse_authenticateResponseOk = SEQ(name='authenticateResponseOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateResponseOk')))
    _AuthenticateServerResponse_authenticateResponseError = SEQ(name='authenticateResponseError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'AuthenticateResponseError')))
    _AuthenticateServerResponse_compactAuthenticateResponseOk = SEQ(name='compactAuthenticateResponseOk', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CompactAuthenticateResponseOk')))
    AuthenticateServerResponse._cont = ASN1Dict([
        ('authenticateResponseOk', _AuthenticateServerResponse_authenticateResponseOk),
        ('authenticateResponseError', _AuthenticateServerResponse_authenticateResponseError),
        ('compactAuthenticateResponseOk', _AuthenticateServerResponse_compactAuthenticateResponseOk),
        ])
    AuthenticateServerResponse._ext = []
    
    #-----< CompactAuthenticateResponseOk >-----#
    CompactAuthenticateResponseOk = SEQ(name='CompactAuthenticateResponseOk', mode=MODE_TYPE)
    _CompactAuthenticateResponseOk_signedData = CHOICE(name='signedData', mode=MODE_TYPE)
    __CompactAuthenticateResponseOk_signedData_euiccSigned1 = SEQ(name='euiccSigned1', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'EuiccSigned1')))
    __CompactAuthenticateResponseOk_signedData_compactEuiccSigned1 = SEQ(name='compactEuiccSigned1', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CompactEuiccSigned1')))
    _CompactAuthenticateResponseOk_signedData._cont = ASN1Dict([
        ('euiccSigned1', __CompactAuthenticateResponseOk_signedData_euiccSigned1),
        ('compactEuiccSigned1', __CompactAuthenticateResponseOk_signedData_compactEuiccSigned1),
        ])
    _CompactAuthenticateResponseOk_signedData._ext = []
    _CompactAuthenticateResponseOk_euiccSignature1 = OCT_STR(name='euiccSignature1', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    _CompactAuthenticateResponseOk_euiccCertificate = SEQ(name='euiccCertificate', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')), opt=True)
    _CompactAuthenticateResponseOk_eumCertificate = SEQ(name='eumCertificate', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')), opt=True)
    CompactAuthenticateResponseOk._cont = ASN1Dict([
        ('signedData', _CompactAuthenticateResponseOk_signedData),
        ('euiccSignature1', _CompactAuthenticateResponseOk_euiccSignature1),
        ('euiccCertificate', _CompactAuthenticateResponseOk_euiccCertificate),
        ('eumCertificate', _CompactAuthenticateResponseOk_eumCertificate),
        ])
    CompactAuthenticateResponseOk._ext = []
    
    #-----< CompactEuiccSigned1 >-----#
    CompactEuiccSigned1 = SEQ(name='CompactEuiccSigned1', mode=MODE_TYPE)
    _CompactEuiccSigned1_extCardResource = OCT_STR(name='extCardResource', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CompactEuiccSigned1_ctxParams1 = CHOICE(name='ctxParams1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CtxParams1')), opt=True)
    CompactEuiccSigned1._cont = ASN1Dict([
        ('extCardResource', _CompactEuiccSigned1_extCardResource),
        ('ctxParams1', _CompactEuiccSigned1_ctxParams1),
        ])
    CompactEuiccSigned1._ext = []
    
    #-----< PendingNotification >-----#
    PendingNotification = CHOICE(name='PendingNotification', mode=MODE_TYPE)
    _PendingNotification_profileInstallationResult = SEQ(name='profileInstallationResult', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProfileInstallationResult')))
    _PendingNotification_otherSignedNotification = SEQ(name='otherSignedNotification', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'OtherSignedNotification')))
    _PendingNotification_compactProfileInstallationResult = SEQ(name='compactProfileInstallationResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CompactProfileInstallationResult')))
    _PendingNotification_compactOtherSignedNotification = SEQ(name='compactOtherSignedNotification', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CompactOtherSignedNotification')))
    PendingNotification._cont = ASN1Dict([
        ('profileInstallationResult', _PendingNotification_profileInstallationResult),
        ('otherSignedNotification', _PendingNotification_otherSignedNotification),
        ('compactProfileInstallationResult', _PendingNotification_compactProfileInstallationResult),
        ('compactOtherSignedNotification', _PendingNotification_compactOtherSignedNotification),
        ])
    PendingNotification._ext = []
    
    #-----< ProfileInstallationResult >-----#
    ProfileInstallationResult = SEQ(name='ProfileInstallationResult', mode=MODE_TYPE, tag=(55, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProfileInstallationResult_profileInstallationResultData = SEQ(name='profileInstallationResultData', mode=MODE_TYPE, tag=(39, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ProfileInstallationResultData')))
    _ProfileInstallationResult_euiccSignPIR = OCT_STR(name='euiccSignPIR', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'EuiccSignPIR')))
    ProfileInstallationResult._cont = ASN1Dict([
        ('profileInstallationResultData', _ProfileInstallationResult_profileInstallationResultData),
        ('euiccSignPIR', _ProfileInstallationResult_euiccSignPIR),
        ])
    ProfileInstallationResult._ext = []
    
    #-----< CompactProfileInstallationResult >-----#
    CompactProfileInstallationResult = SEQ(name='CompactProfileInstallationResult', mode=MODE_TYPE)
    _CompactProfileInstallationResult_compactProfileInstallationResultData = SEQ(name='compactProfileInstallationResultData', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CompactProfileInstallationResultData')))
    _CompactProfileInstallationResult_euiccSignPIR = OCT_STR(name='euiccSignPIR', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'EuiccSignPIR')))
    CompactProfileInstallationResult._cont = ASN1Dict([
        ('compactProfileInstallationResultData', _CompactProfileInstallationResult_compactProfileInstallationResultData),
        ('euiccSignPIR', _CompactProfileInstallationResult_euiccSignPIR),
        ])
    CompactProfileInstallationResult._ext = []
    
    #-----< CompactProfileInstallationResultData >-----#
    CompactProfileInstallationResultData = SEQ(name='CompactProfileInstallationResultData', mode=MODE_TYPE)
    _CompactProfileInstallationResultData_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _CompactProfileInstallationResultData_seqNumber = INT(name='seqNumber', mode=MODE_TYPE)
    _CompactProfileInstallationResultData_iccidPresent = BOOL(name='iccidPresent', mode=MODE_TYPE, default=True)
    _CompactProfileInstallationResultData_compactFinalResult = CHOICE(name='compactFinalResult', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    __CompactProfileInstallationResultData_compactFinalResult_compactSuccessResult = SEQ(name='compactSuccessResult', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CompactSuccessResult')))
    __CompactProfileInstallationResultData_compactFinalResult_errorResult = SEQ(name='errorResult', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'ErrorResult')))
    _CompactProfileInstallationResultData_compactFinalResult._cont = ASN1Dict([
        ('compactSuccessResult', __CompactProfileInstallationResultData_compactFinalResult_compactSuccessResult),
        ('errorResult', __CompactProfileInstallationResultData_compactFinalResult_errorResult),
        ])
    _CompactProfileInstallationResultData_compactFinalResult._ext = []
    CompactProfileInstallationResultData._cont = ASN1Dict([
        ('transactionId', _CompactProfileInstallationResultData_transactionId),
        ('seqNumber', _CompactProfileInstallationResultData_seqNumber),
        ('iccidPresent', _CompactProfileInstallationResultData_iccidPresent),
        ('compactFinalResult', _CompactProfileInstallationResultData_compactFinalResult),
        ])
    CompactProfileInstallationResultData._ext = []
    
    #-----< CompactSuccessResult >-----#
    CompactSuccessResult = SEQ(name='CompactSuccessResult', mode=MODE_TYPE)
    _CompactSuccessResult_compactAid = OCT_STR(name='compactAid', mode=MODE_TYPE, tag=(15, TAG_APPLICATION, TAG_IMPLICIT))
    _CompactSuccessResult_compactAid._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    _CompactSuccessResult_simaResponse = OCT_STR(name='simaResponse', mode=MODE_TYPE, opt=True)
    CompactSuccessResult._cont = ASN1Dict([
        ('compactAid', _CompactSuccessResult_compactAid),
        ('simaResponse', _CompactSuccessResult_simaResponse),
        ])
    CompactSuccessResult._ext = []
    
    #-----< CompactOtherSignedNotification >-----#
    CompactOtherSignedNotification = SEQ(name='CompactOtherSignedNotification', mode=MODE_TYPE)
    _CompactOtherSignedNotification_tbsOtherNotification = SEQ(name='tbsOtherNotification', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'NotificationMetadata')))
    _CompactOtherSignedNotification_euiccNotificationSignature = OCT_STR(name='euiccNotificationSignature', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    CompactOtherSignedNotification._cont = ASN1Dict([
        ('tbsOtherNotification', _CompactOtherSignedNotification_tbsOtherNotification),
        ('euiccNotificationSignature', _CompactOtherSignedNotification_euiccNotificationSignature),
        ])
    CompactOtherSignedNotification._ext = []
    
    #-----< CancelSessionResponse >-----#
    CancelSessionResponse = CHOICE(name='CancelSessionResponse', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionResponse_cancelSessionResponseOk = SEQ(name='cancelSessionResponseOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CancelSessionResponseOk')))
    _CancelSessionResponse_cancelSessionResponseError = INT(name='cancelSessionResponseError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionResponse_cancelSessionResponseError._cont = ASN1Dict([('invalidTransactionId', 5), ('undefinedError', 127)])
    _CancelSessionResponse_compactCancelSessionResponseOk = SEQ(name='compactCancelSessionResponseOk', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CompactCancelSessionResponseOk')))
    CancelSessionResponse._cont = ASN1Dict([
        ('cancelSessionResponseOk', _CancelSessionResponse_cancelSessionResponseOk),
        ('cancelSessionResponseError', _CancelSessionResponse_cancelSessionResponseError),
        ('compactCancelSessionResponseOk', _CancelSessionResponse_compactCancelSessionResponseOk),
        ])
    CancelSessionResponse._ext = []
    
    #-----< CompactCancelSessionResponseOk >-----#
    CompactCancelSessionResponseOk = SEQ(name='CompactCancelSessionResponseOk', mode=MODE_TYPE)
    _CompactCancelSessionResponseOk_compactEuiccCancelSessionSigned = SEQ(name='compactEuiccCancelSessionSigned', mode=MODE_TYPE, typeref=ASN1RefType(('SGP32Definitions', 'CompactEuiccCancelSessionSigned')))
    _CompactCancelSessionResponseOk_euiccCancelSessionSignature = OCT_STR(name='euiccCancelSessionSignature', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    CompactCancelSessionResponseOk._cont = ASN1Dict([
        ('compactEuiccCancelSessionSigned', _CompactCancelSessionResponseOk_compactEuiccCancelSessionSigned),
        ('euiccCancelSessionSignature', _CompactCancelSessionResponseOk_euiccCancelSessionSignature),
        ])
    CompactCancelSessionResponseOk._ext = []
    
    #-----< CompactEuiccCancelSessionSigned >-----#
    CompactEuiccCancelSessionSigned = SEQ(name='CompactEuiccCancelSessionSigned', mode=MODE_TYPE)
    _CompactEuiccCancelSessionSigned_reason = INT(name='reason', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CancelSessionReason')), opt=True)
    CompactEuiccCancelSessionSigned._cont = ASN1Dict([
        ('reason', _CompactEuiccCancelSessionSigned_reason),
        ])
    CompactEuiccCancelSessionSigned._ext = []
    
    #-----< EsipaMessageFromIpaToEim >-----#
    EsipaMessageFromIpaToEim = CHOICE(name='EsipaMessageFromIpaToEim', mode=MODE_TYPE)
    _EsipaMessageFromIpaToEim_initiateAuthenticationRequestEsipa = SEQ(name='initiateAuthenticationRequestEsipa', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'InitiateAuthenticationRequestEsipa')))
    _EsipaMessageFromIpaToEim_authenticateClientRequestEsipa = SEQ(name='authenticateClientRequestEsipa', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'AuthenticateClientRequestEsipa')))
    _EsipaMessageFromIpaToEim_getBoundProfilePackageRequestEsipa = SEQ(name='getBoundProfilePackageRequestEsipa', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'GetBoundProfilePackageRequestEsipa')))
    _EsipaMessageFromIpaToEim_cancelSessionRequestEsipa = SEQ(name='cancelSessionRequestEsipa', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CancelSessionRequestEsipa')))
    _EsipaMessageFromIpaToEim_handleNotificationEsipa = CHOICE(name='handleNotificationEsipa', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'HandleNotificationEsipa')))
    _EsipaMessageFromIpaToEim_transferEimPackageResponse = CHOICE(name='transferEimPackageResponse', mode=MODE_TYPE, tag=(78, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'TransferEimPackageResponse')))
    _EsipaMessageFromIpaToEim_getEimPackageRequest = SEQ(name='getEimPackageRequest', mode=MODE_TYPE, tag=(79, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'GetEimPackageRequest')))
    _EsipaMessageFromIpaToEim_provideEimPackageResult = CHOICE(name='provideEimPackageResult', mode=MODE_TYPE, tag=(80, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProvideEimPackageResult')))
    EsipaMessageFromIpaToEim._cont = ASN1Dict([
        ('initiateAuthenticationRequestEsipa', _EsipaMessageFromIpaToEim_initiateAuthenticationRequestEsipa),
        ('authenticateClientRequestEsipa', _EsipaMessageFromIpaToEim_authenticateClientRequestEsipa),
        ('getBoundProfilePackageRequestEsipa', _EsipaMessageFromIpaToEim_getBoundProfilePackageRequestEsipa),
        ('cancelSessionRequestEsipa', _EsipaMessageFromIpaToEim_cancelSessionRequestEsipa),
        ('handleNotificationEsipa', _EsipaMessageFromIpaToEim_handleNotificationEsipa),
        ('transferEimPackageResponse', _EsipaMessageFromIpaToEim_transferEimPackageResponse),
        ('getEimPackageRequest', _EsipaMessageFromIpaToEim_getEimPackageRequest),
        ('provideEimPackageResult', _EsipaMessageFromIpaToEim_provideEimPackageResult),
        ])
    EsipaMessageFromIpaToEim._ext = []
    
    #-----< EsipaMessageFromEimToIpa >-----#
    EsipaMessageFromEimToIpa = CHOICE(name='EsipaMessageFromEimToIpa', mode=MODE_TYPE)
    _EsipaMessageFromEimToIpa_initiateAuthenticationResponseEsipa = CHOICE(name='initiateAuthenticationResponseEsipa', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'InitiateAuthenticationResponseEsipa')))
    _EsipaMessageFromEimToIpa_authenticateClientResponseEsipa = CHOICE(name='authenticateClientResponseEsipa', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'AuthenticateClientResponseEsipa')))
    _EsipaMessageFromEimToIpa_getBoundProfilePackageResponseEsipa = CHOICE(name='getBoundProfilePackageResponseEsipa', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'GetBoundProfilePackageResponseEsipa')))
    _EsipaMessageFromEimToIpa_cancelSessionResponseEsipa = CHOICE(name='cancelSessionResponseEsipa', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CancelSessionResponseEsipa')))
    _EsipaMessageFromEimToIpa_transferEimPackageRequest = CHOICE(name='transferEimPackageRequest', mode=MODE_TYPE, tag=(78, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'TransferEimPackageRequest')))
    _EsipaMessageFromEimToIpa_getEimPackageResponse = CHOICE(name='getEimPackageResponse', mode=MODE_TYPE, tag=(79, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'GetEimPackageResponse')))
    _EsipaMessageFromEimToIpa_provideEimPackageResultResponse = SEQ(name='provideEimPackageResultResponse', mode=MODE_TYPE, tag=(80, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProvideEimPackageResultResponse')))
    EsipaMessageFromEimToIpa._cont = ASN1Dict([
        ('initiateAuthenticationResponseEsipa', _EsipaMessageFromEimToIpa_initiateAuthenticationResponseEsipa),
        ('authenticateClientResponseEsipa', _EsipaMessageFromEimToIpa_authenticateClientResponseEsipa),
        ('getBoundProfilePackageResponseEsipa', _EsipaMessageFromEimToIpa_getBoundProfilePackageResponseEsipa),
        ('cancelSessionResponseEsipa', _EsipaMessageFromEimToIpa_cancelSessionResponseEsipa),
        ('transferEimPackageRequest', _EsipaMessageFromEimToIpa_transferEimPackageRequest),
        ('getEimPackageResponse', _EsipaMessageFromEimToIpa_getEimPackageResponse),
        ('provideEimPackageResultResponse', _EsipaMessageFromEimToIpa_provideEimPackageResultResponse),
        ])
    EsipaMessageFromEimToIpa._ext = []
    
    #-----< InitiateAuthenticationRequestEsipa >-----#
    InitiateAuthenticationRequestEsipa = SEQ(name='InitiateAuthenticationRequestEsipa', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _InitiateAuthenticationRequestEsipa_euiccChallenge = OCT_STR(name='euiccChallenge', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet16')))
    _InitiateAuthenticationRequestEsipa_smdpAddress = STR_UTF8(name='smdpAddress', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _InitiateAuthenticationRequestEsipa_euiccInfo1 = SEQ(name='euiccInfo1', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'EUICCInfo1')), opt=True)
    InitiateAuthenticationRequestEsipa._cont = ASN1Dict([
        ('euiccChallenge', _InitiateAuthenticationRequestEsipa_euiccChallenge),
        ('smdpAddress', _InitiateAuthenticationRequestEsipa_smdpAddress),
        ('euiccInfo1', _InitiateAuthenticationRequestEsipa_euiccInfo1),
        ])
    InitiateAuthenticationRequestEsipa._ext = []
    
    #-----< InitiateAuthenticationResponseEsipa >-----#
    InitiateAuthenticationResponseEsipa = CHOICE(name='InitiateAuthenticationResponseEsipa', mode=MODE_TYPE, tag=(57, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _InitiateAuthenticationResponseEsipa_initiateAuthenticationOkEsipa = SEQ(name='initiateAuthenticationOkEsipa', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'InitiateAuthenticationOkEsipa')))
    _InitiateAuthenticationResponseEsipa_initiateAuthenticationErrorEsipa = INT(name='initiateAuthenticationErrorEsipa', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _InitiateAuthenticationResponseEsipa_initiateAuthenticationErrorEsipa._cont = ASN1Dict([('invalidDpAddress', 1), ('euiccVersionNotSupportedByDp', 2), ('ciPKIdNotSupported', 3), ('smdpAddressMismatch', 50), ('smdpOidMismatch', 51)])
    InitiateAuthenticationResponseEsipa._cont = ASN1Dict([
        ('initiateAuthenticationOkEsipa', _InitiateAuthenticationResponseEsipa_initiateAuthenticationOkEsipa),
        ('initiateAuthenticationErrorEsipa', _InitiateAuthenticationResponseEsipa_initiateAuthenticationErrorEsipa),
        ])
    InitiateAuthenticationResponseEsipa._ext = []
    
    #-----< InitiateAuthenticationOkEsipa >-----#
    InitiateAuthenticationOkEsipa = SEQ(name='InitiateAuthenticationOkEsipa', mode=MODE_TYPE)
    _InitiateAuthenticationOkEsipa_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')), opt=True)
    _InitiateAuthenticationOkEsipa_serverSigned1 = SEQ(name='serverSigned1', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'ServerSigned1')))
    _InitiateAuthenticationOkEsipa_serverSignature1 = OCT_STR(name='serverSignature1', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    _InitiateAuthenticationOkEsipa_euiccCiPKIdToBeUsed = OCT_STR(name='euiccCiPKIdToBeUsed', mode=MODE_TYPE)
    _InitiateAuthenticationOkEsipa_serverCertificate = SEQ(name='serverCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    _InitiateAuthenticationOkEsipa_matchingId = STR_UTF8(name='matchingId', mode=MODE_TYPE, opt=True)
    _InitiateAuthenticationOkEsipa_ctxParams1 = CHOICE(name='ctxParams1', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'CtxParams1')), opt=True)
    InitiateAuthenticationOkEsipa._cont = ASN1Dict([
        ('transactionId', _InitiateAuthenticationOkEsipa_transactionId),
        ('serverSigned1', _InitiateAuthenticationOkEsipa_serverSigned1),
        ('serverSignature1', _InitiateAuthenticationOkEsipa_serverSignature1),
        ('euiccCiPKIdToBeUsed', _InitiateAuthenticationOkEsipa_euiccCiPKIdToBeUsed),
        ('serverCertificate', _InitiateAuthenticationOkEsipa_serverCertificate),
        ('matchingId', _InitiateAuthenticationOkEsipa_matchingId),
        ('ctxParams1', _InitiateAuthenticationOkEsipa_ctxParams1),
        ])
    InitiateAuthenticationOkEsipa._ext = []
    
    #-----< AuthenticateClientRequestEsipa >-----#
    AuthenticateClientRequestEsipa = SEQ(name='AuthenticateClientRequestEsipa', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateClientRequestEsipa_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _AuthenticateClientRequestEsipa_authenticateServerResponse = CHOICE(name='authenticateServerResponse', mode=MODE_TYPE, tag=(56, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'AuthenticateServerResponse')))
    AuthenticateClientRequestEsipa._cont = ASN1Dict([
        ('transactionId', _AuthenticateClientRequestEsipa_transactionId),
        ('authenticateServerResponse', _AuthenticateClientRequestEsipa_authenticateServerResponse),
        ])
    AuthenticateClientRequestEsipa._ext = []
    
    #-----< AuthenticateClientResponseEsipa >-----#
    AuthenticateClientResponseEsipa = CHOICE(name='AuthenticateClientResponseEsipa', mode=MODE_TYPE, tag=(59, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateClientResponseEsipa_authenticateClientOkDPEsipa = SEQ(name='authenticateClientOkDPEsipa', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'AuthenticateClientOkDPEsipa')))
    _AuthenticateClientResponseEsipa_authenticateClientOkDSEsipa = SEQ(name='authenticateClientOkDSEsipa', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'AuthenticateClientOkDSEsipa')))
    _AuthenticateClientResponseEsipa_authenticateClientErrorEsipa = INT(name='authenticateClientErrorEsipa', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _AuthenticateClientResponseEsipa_authenticateClientErrorEsipa._cont = ASN1Dict([('eumCertificateInvalid', 1), ('eumCertificateExpired', 2), ('euiccCertificateInvalid', 3), ('euiccCertificateExpired', 4), ('euiccSignatureInvalid', 5), ('matchingIdRefused', 6), ('eidMismatch', 7), ('noEligibleProfile', 8), ('ciPKUnknown', 9), ('invalidTransactionId', 10), ('insufficientMemory', 11), ('pprNotAllowed', 50), ('eventIdUnknown', 56), ('undefinedError', 127)])
    AuthenticateClientResponseEsipa._cont = ASN1Dict([
        ('authenticateClientOkDPEsipa', _AuthenticateClientResponseEsipa_authenticateClientOkDPEsipa),
        ('authenticateClientOkDSEsipa', _AuthenticateClientResponseEsipa_authenticateClientOkDSEsipa),
        ('authenticateClientErrorEsipa', _AuthenticateClientResponseEsipa_authenticateClientErrorEsipa),
        ])
    AuthenticateClientResponseEsipa._ext = []
    
    #-----< AuthenticateClientOkDPEsipa >-----#
    AuthenticateClientOkDPEsipa = SEQ(name='AuthenticateClientOkDPEsipa', mode=MODE_TYPE)
    _AuthenticateClientOkDPEsipa_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')), opt=True)
    _AuthenticateClientOkDPEsipa_profileMetaData = SEQ(name='profileMetaData', mode=MODE_TYPE, tag=(37, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'StoreMetadataRequest')), opt=True)
    _AuthenticateClientOkDPEsipa_smdpSigned2 = SEQ(name='smdpSigned2', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'SmdpSigned2')))
    _AuthenticateClientOkDPEsipa_smdpSignature2 = OCT_STR(name='smdpSignature2', mode=MODE_TYPE, tag=(55, TAG_APPLICATION, TAG_IMPLICIT))
    _AuthenticateClientOkDPEsipa_smdpCertificate = SEQ(name='smdpCertificate', mode=MODE_TYPE, typeref=ASN1RefType(('PKIX1Explicit88', 'Certificate')))
    _AuthenticateClientOkDPEsipa_hashCc = OCT_STR(name='hashCc', mode=MODE_TYPE, typeref=ASN1RefType(('RSPDefinitions', 'Octet32')), opt=True)
    AuthenticateClientOkDPEsipa._cont = ASN1Dict([
        ('transactionId', _AuthenticateClientOkDPEsipa_transactionId),
        ('profileMetaData', _AuthenticateClientOkDPEsipa_profileMetaData),
        ('smdpSigned2', _AuthenticateClientOkDPEsipa_smdpSigned2),
        ('smdpSignature2', _AuthenticateClientOkDPEsipa_smdpSignature2),
        ('smdpCertificate', _AuthenticateClientOkDPEsipa_smdpCertificate),
        ('hashCc', _AuthenticateClientOkDPEsipa_hashCc),
        ])
    AuthenticateClientOkDPEsipa._ext = []
    
    #-----< AuthenticateClientOkDSEsipa >-----#
    AuthenticateClientOkDSEsipa = SEQ(name='AuthenticateClientOkDSEsipa', mode=MODE_TYPE)
    _AuthenticateClientOkDSEsipa_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _AuthenticateClientOkDSEsipa_profileDownloadTrigger = SEQ(name='profileDownloadTrigger', mode=MODE_TYPE, tag=(84, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProfileDownloadTriggerRequest')), opt=True)
    AuthenticateClientOkDSEsipa._cont = ASN1Dict([
        ('transactionId', _AuthenticateClientOkDSEsipa_transactionId),
        ('profileDownloadTrigger', _AuthenticateClientOkDSEsipa_profileDownloadTrigger),
        ])
    AuthenticateClientOkDSEsipa._ext = []
    
    #-----< GetBoundProfilePackageRequestEsipa >-----#
    GetBoundProfilePackageRequestEsipa = SEQ(name='GetBoundProfilePackageRequestEsipa', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetBoundProfilePackageRequestEsipa_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _GetBoundProfilePackageRequestEsipa_prepareDownloadResponse = CHOICE(name='prepareDownloadResponse', mode=MODE_TYPE, tag=(33, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'PrepareDownloadResponse')))
    GetBoundProfilePackageRequestEsipa._cont = ASN1Dict([
        ('transactionId', _GetBoundProfilePackageRequestEsipa_transactionId),
        ('prepareDownloadResponse', _GetBoundProfilePackageRequestEsipa_prepareDownloadResponse),
        ])
    GetBoundProfilePackageRequestEsipa._ext = []
    
    #-----< GetBoundProfilePackageResponseEsipa >-----#
    GetBoundProfilePackageResponseEsipa = CHOICE(name='GetBoundProfilePackageResponseEsipa', mode=MODE_TYPE, tag=(58, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetBoundProfilePackageResponseEsipa_getBoundProfilePackageOkEsipa = SEQ(name='getBoundProfilePackageOkEsipa', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'GetBoundProfilePackageOkEsipa')))
    _GetBoundProfilePackageResponseEsipa_getBoundProfilePackageErrorEsipa = INT(name='getBoundProfilePackageErrorEsipa', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetBoundProfilePackageResponseEsipa_getBoundProfilePackageErrorEsipa._cont = ASN1Dict([('euiccSignatureInvalid', 1), ('confirmationCodeMissing', 2), ('confirmationCodeRefused', 3), ('confirmationCodeRetriesExceeded', 4), ('bppRebindingRefused', 5), ('downloadOrderExpired', 6), ('profileMetadataMismatch', 50), ('invalidTransactionId', 95), ('undefinedError', 127)])
    GetBoundProfilePackageResponseEsipa._cont = ASN1Dict([
        ('getBoundProfilePackageOkEsipa', _GetBoundProfilePackageResponseEsipa_getBoundProfilePackageOkEsipa),
        ('getBoundProfilePackageErrorEsipa', _GetBoundProfilePackageResponseEsipa_getBoundProfilePackageErrorEsipa),
        ])
    GetBoundProfilePackageResponseEsipa._ext = []
    
    #-----< GetBoundProfilePackageOkEsipa >-----#
    GetBoundProfilePackageOkEsipa = SEQ(name='GetBoundProfilePackageOkEsipa', mode=MODE_TYPE)
    _GetBoundProfilePackageOkEsipa_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')), opt=True)
    _GetBoundProfilePackageOkEsipa_boundProfilePackage = SEQ(name='boundProfilePackage', mode=MODE_TYPE, tag=(54, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'BoundProfilePackage')))
    GetBoundProfilePackageOkEsipa._cont = ASN1Dict([
        ('transactionId', _GetBoundProfilePackageOkEsipa_transactionId),
        ('boundProfilePackage', _GetBoundProfilePackageOkEsipa_boundProfilePackage),
        ])
    GetBoundProfilePackageOkEsipa._ext = []
    
    #-----< HandleNotificationEsipa >-----#
    HandleNotificationEsipa = CHOICE(name='HandleNotificationEsipa', mode=MODE_TYPE, tag=(61, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _HandleNotificationEsipa_pendingNotification = CHOICE(name='pendingNotification', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'PendingNotification')))
    _HandleNotificationEsipa_provideEimPackageResult = CHOICE(name='provideEimPackageResult', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProvideEimPackageResult')))
    HandleNotificationEsipa._cont = ASN1Dict([
        ('pendingNotification', _HandleNotificationEsipa_pendingNotification),
        ('provideEimPackageResult', _HandleNotificationEsipa_provideEimPackageResult),
        ])
    HandleNotificationEsipa._ext = []
    
    #-----< CancelSessionRequestEsipa >-----#
    CancelSessionRequestEsipa = SEQ(name='CancelSessionRequestEsipa', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionRequestEsipa_transactionId = OCT_STR(name='transactionId', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'TransactionId')))
    _CancelSessionRequestEsipa_cancelSessionResponse = CHOICE(name='cancelSessionResponse', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CancelSessionResponse')))
    CancelSessionRequestEsipa._cont = ASN1Dict([
        ('transactionId', _CancelSessionRequestEsipa_transactionId),
        ('cancelSessionResponse', _CancelSessionRequestEsipa_cancelSessionResponse),
        ])
    CancelSessionRequestEsipa._ext = []
    
    #-----< CancelSessionResponseEsipa >-----#
    CancelSessionResponseEsipa = CHOICE(name='CancelSessionResponseEsipa', mode=MODE_TYPE, tag=(65, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionResponseEsipa_cancelSessionOk = SEQ(name='cancelSessionOk', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'CancelSessionOk')))
    _CancelSessionResponseEsipa_cancelSessionError = INT(name='cancelSessionError', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _CancelSessionResponseEsipa_cancelSessionError._cont = ASN1Dict([('invalidTransactionId', 1), ('euiccSignatureInvalid', 2), ('undefinedError', 127)])
    CancelSessionResponseEsipa._cont = ASN1Dict([
        ('cancelSessionOk', _CancelSessionResponseEsipa_cancelSessionOk),
        ('cancelSessionError', _CancelSessionResponseEsipa_cancelSessionError),
        ])
    CancelSessionResponseEsipa._ext = []
    
    #-----< CancelSessionOk >-----#
    CancelSessionOk = SEQ(name='CancelSessionOk', mode=MODE_TYPE)
    CancelSessionOk._cont = ASN1Dict([
        ])
    CancelSessionOk._ext = []
    
    #-----< GetEimPackageRequest >-----#
    GetEimPackageRequest = SEQ(name='GetEimPackageRequest', mode=MODE_TYPE, tag=(79, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetEimPackageRequest_eidValue = OCT_STR(name='eidValue', mode=MODE_TYPE, tag=(26, TAG_APPLICATION, TAG_IMPLICIT), typeref=ASN1RefType(('RSPDefinitions', 'Octet16')))
    _GetEimPackageRequest_notifyStateChange = NULL(name='notifyStateChange', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GetEimPackageRequest_rPLMN = OCT_STR(name='rPLMN', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _GetEimPackageRequest_rPLMN._const_sz = ASN1Set(rv=[3], rr=[], ev=None, er=[])
    GetEimPackageRequest._cont = ASN1Dict([
        ('eidValue', _GetEimPackageRequest_eidValue),
        ('notifyStateChange', _GetEimPackageRequest_notifyStateChange),
        ('rPLMN', _GetEimPackageRequest_rPLMN),
        ])
    GetEimPackageRequest._ext = []
    
    #-----< GetEimPackageResponse >-----#
    GetEimPackageResponse = CHOICE(name='GetEimPackageResponse', mode=MODE_TYPE, tag=(79, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _GetEimPackageResponse_euiccPackageRequest = SEQ(name='euiccPackageRequest', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageRequest')))
    _GetEimPackageResponse_ipaEuiccDataRequest = SEQ(name='ipaEuiccDataRequest', mode=MODE_TYPE, tag=(82, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'IpaEuiccDataRequest')))
    _GetEimPackageResponse_profileDownloadTriggerRequest = SEQ(name='profileDownloadTriggerRequest', mode=MODE_TYPE, tag=(84, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProfileDownloadTriggerRequest')))
    _GetEimPackageResponse_eimPackageError = INT(name='eimPackageError', mode=MODE_TYPE)
    _GetEimPackageResponse_eimPackageError._cont = ASN1Dict([('noEimPackageAvailable', 1), ('undefinedError', 127)])
    GetEimPackageResponse._cont = ASN1Dict([
        ('euiccPackageRequest', _GetEimPackageResponse_euiccPackageRequest),
        ('ipaEuiccDataRequest', _GetEimPackageResponse_ipaEuiccDataRequest),
        ('profileDownloadTriggerRequest', _GetEimPackageResponse_profileDownloadTriggerRequest),
        ('eimPackageError', _GetEimPackageResponse_eimPackageError),
        ])
    GetEimPackageResponse._ext = []
    
    #-----< ProvideEimPackageResult >-----#
    ProvideEimPackageResult = CHOICE(name='ProvideEimPackageResult', mode=MODE_TYPE, tag=(80, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProvideEimPackageResult_euiccPackageResult = CHOICE(name='euiccPackageResult', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageResult')))
    _ProvideEimPackageResult_ePRAndNotifications = SEQ(name='ePRAndNotifications', mode=MODE_TYPE)
    __ProvideEimPackageResult_ePRAndNotifications_euiccPackageResult = CHOICE(name='euiccPackageResult', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageResult')))
    __ProvideEimPackageResult_ePRAndNotifications_notificationList = CHOICE(name='notificationList', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'RetrieveNotificationsListResponse')))
    _ProvideEimPackageResult_ePRAndNotifications._cont = ASN1Dict([
        ('euiccPackageResult', __ProvideEimPackageResult_ePRAndNotifications_euiccPackageResult),
        ('notificationList', __ProvideEimPackageResult_ePRAndNotifications_notificationList),
        ])
    _ProvideEimPackageResult_ePRAndNotifications._ext = []
    _ProvideEimPackageResult_ipaEuiccDataResponse = CHOICE(name='ipaEuiccDataResponse', mode=MODE_TYPE, tag=(82, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'IpaEuiccDataResponse')))
    _ProvideEimPackageResult_profileDownloadTriggerResult = SEQ(name='profileDownloadTriggerResult', mode=MODE_TYPE, tag=(84, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProfileDownloadTriggerResult')))
    _ProvideEimPackageResult_eimPackageError = INT(name='eimPackageError', mode=MODE_TYPE)
    _ProvideEimPackageResult_eimPackageError._cont = ASN1Dict([('invalidPackageFormat', 1), ('unknownPackage', 2), ('undefinedError', 127)])
    ProvideEimPackageResult._cont = ASN1Dict([
        ('euiccPackageResult', _ProvideEimPackageResult_euiccPackageResult),
        ('ePRAndNotifications', _ProvideEimPackageResult_ePRAndNotifications),
        ('ipaEuiccDataResponse', _ProvideEimPackageResult_ipaEuiccDataResponse),
        ('profileDownloadTriggerResult', _ProvideEimPackageResult_profileDownloadTriggerResult),
        ('eimPackageError', _ProvideEimPackageResult_eimPackageError),
        ])
    ProvideEimPackageResult._ext = []
    
    #-----< ProvideEimPackageResultResponse >-----#
    ProvideEimPackageResultResponse = SEQ(name='ProvideEimPackageResultResponse', mode=MODE_TYPE, tag=(80, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ProvideEimPackageResultResponse_eimAcknowledgements = SEQ_OF(name='eimAcknowledgements', mode=MODE_TYPE, tag=(83, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EimAcknowledgements')), opt=True)
    ProvideEimPackageResultResponse._cont = ASN1Dict([
        ('eimAcknowledgements', _ProvideEimPackageResultResponse_eimAcknowledgements),
        ])
    ProvideEimPackageResultResponse._ext = []
    
    #-----< TransferEimPackageRequest >-----#
    TransferEimPackageRequest = CHOICE(name='TransferEimPackageRequest', mode=MODE_TYPE, tag=(78, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TransferEimPackageRequest_euiccPackageRequest = SEQ(name='euiccPackageRequest', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageRequest')))
    _TransferEimPackageRequest_ipaEuiccDataRequest = SEQ(name='ipaEuiccDataRequest', mode=MODE_TYPE, tag=(82, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'IpaEuiccDataRequest')))
    _TransferEimPackageRequest_eimAcknowledgements = SEQ_OF(name='eimAcknowledgements', mode=MODE_TYPE, tag=(83, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EimAcknowledgements')))
    _TransferEimPackageRequest_profileDownloadTriggerRequest = SEQ(name='profileDownloadTriggerRequest', mode=MODE_TYPE, tag=(84, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'ProfileDownloadTriggerRequest')))
    TransferEimPackageRequest._cont = ASN1Dict([
        ('euiccPackageRequest', _TransferEimPackageRequest_euiccPackageRequest),
        ('ipaEuiccDataRequest', _TransferEimPackageRequest_ipaEuiccDataRequest),
        ('eimAcknowledgements', _TransferEimPackageRequest_eimAcknowledgements),
        ('profileDownloadTriggerRequest', _TransferEimPackageRequest_profileDownloadTriggerRequest),
        ])
    TransferEimPackageRequest._ext = []
    
    #-----< TransferEimPackageResponse >-----#
    TransferEimPackageResponse = CHOICE(name='TransferEimPackageResponse', mode=MODE_TYPE, tag=(78, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _TransferEimPackageResponse_euiccPackageResult = CHOICE(name='euiccPackageResult', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageResult')))
    _TransferEimPackageResponse_ePRAndNotifications = SEQ(name='ePRAndNotifications', mode=MODE_TYPE)
    __TransferEimPackageResponse_ePRAndNotifications_euiccPackageResult = CHOICE(name='euiccPackageResult', mode=MODE_TYPE, tag=(81, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'EuiccPackageResult')))
    __TransferEimPackageResponse_ePRAndNotifications_notificationList = CHOICE(name='notificationList', mode=MODE_TYPE, tag=(43, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'RetrieveNotificationsListResponse')))
    _TransferEimPackageResponse_ePRAndNotifications._cont = ASN1Dict([
        ('euiccPackageResult', __TransferEimPackageResponse_ePRAndNotifications_euiccPackageResult),
        ('notificationList', __TransferEimPackageResponse_ePRAndNotifications_notificationList),
        ])
    _TransferEimPackageResponse_ePRAndNotifications._ext = []
    _TransferEimPackageResponse_ipaEuiccDataResponse = CHOICE(name='ipaEuiccDataResponse', mode=MODE_TYPE, tag=(82, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('SGP32Definitions', 'IpaEuiccDataResponse')))
    _TransferEimPackageResponse_eimPackageReceived = NULL(name='eimPackageReceived', mode=MODE_TYPE)
    _TransferEimPackageResponse_eimPackageError = INT(name='eimPackageError', mode=MODE_TYPE)
    _TransferEimPackageResponse_eimPackageError._cont = ASN1Dict([('invalidPackageFormat', 1), ('unknownPackage', 2), ('undefinedError', 127)])
    TransferEimPackageResponse._cont = ASN1Dict([
        ('euiccPackageResult', _TransferEimPackageResponse_euiccPackageResult),
        ('ePRAndNotifications', _TransferEimPackageResponse_ePRAndNotifications),
        ('ipaEuiccDataResponse', _TransferEimPackageResponse_ipaEuiccDataResponse),
        ('eimPackageReceived', _TransferEimPackageResponse_eimPackageReceived),
        ('eimPackageError', _TransferEimPackageResponse_eimPackageError),
        ])
    TransferEimPackageResponse._ext = []
    
    _all_ = [
        _EuiccPackageRequest_euiccPackageSigned,
        _EuiccPackageRequest_eimSignature,
        EuiccPackageRequest,
        _EuiccPackageSigned_eimId,
        _EuiccPackageSigned_eidValue,
        _EuiccPackageSigned_counterValue,
        _EuiccPackageSigned_transactionId,
        _EuiccPackageSigned_euiccPackage,
        EuiccPackageSigned,
        __EuiccPackage_psmoList__item_,
        _EuiccPackage_psmoList,
        __EuiccPackage_ecoList__item_,
        _EuiccPackage_ecoList,
        EuiccPackage,
        _EimConfigurationData_eimId,
        _EimConfigurationData_eimFqdn,
        _EimConfigurationData_eimIdType,
        _EimConfigurationData_counterValue,
        _EimConfigurationData_associationToken,
        __EimConfigurationData_eimPublicKeyData_eimPublicKey,
        __EimConfigurationData_eimPublicKeyData_eimCertificate,
        _EimConfigurationData_eimPublicKeyData,
        __EimConfigurationData_trustedPublicKeyDataTls_trustedEimPkTls,
        __EimConfigurationData_trustedPublicKeyDataTls_trustedCertificateTls,
        _EimConfigurationData_trustedPublicKeyDataTls,
        _EimConfigurationData_eimSupportedProtocol,
        _EimConfigurationData_euiccCiPKId,
        EimConfigurationData,
        EimIdType,
        EimSupportedProtocol,
        _Eco_addEim,
        __Eco_deleteEim_eimId,
        _Eco_deleteEim,
        _Eco_updateEim,
        _Eco_listEim,
        Eco,
        __Psmo_enable_iccid,
        __Psmo_enable_rollbackFlag,
        _Psmo_enable,
        __Psmo_disable_iccid,
        _Psmo_disable,
        __Psmo_delete_iccid,
        _Psmo_delete,
        _Psmo_listProfileInfo,
        _Psmo_getRAT,
        __Psmo_configureAutoEnable_autoEnableFlag,
        __Psmo_configureAutoEnable_smdpOid,
        __Psmo_configureAutoEnable_smdpAddress,
        _Psmo_configureAutoEnable,
        Psmo,
        _IpaEuiccDataRequest_tagList,
        _IpaEuiccDataRequest_euiccCiPKId,
        __IpaEuiccDataRequest_searchCriteria_seqNumber,
        __IpaEuiccDataRequest_searchCriteria_profileManagementOperation,
        __IpaEuiccDataRequest_searchCriteria_euiccPackageResults,
        _IpaEuiccDataRequest_searchCriteria,
        IpaEuiccDataRequest,
        _ProfileDownloadTriggerRequest_profileDownloadData,
        _ProfileDownloadTriggerRequest_eimTransactionId,
        ProfileDownloadTriggerRequest,
        _ProfileDownloadData_activationCode,
        _ProfileDownloadData_contactDefaultSmdp,
        __ProfileDownloadData_contactSmds_smdsAddress,
        _ProfileDownloadData_contactSmds,
        ProfileDownloadData,
        _EimAcknowledgements__item_,
        EimAcknowledgements,
        SequenceNumber,
        _EuiccPackageResult_euiccPackageResultSigned,
        _EuiccPackageResult_euiccPackageErrorSigned,
        _EuiccPackageResult_euiccPackageErrorUnsigned,
        EuiccPackageResult,
        _EuiccPackageResultSigned_euiccPackageResultDataSigned,
        _EuiccPackageResultSigned_euiccSignEPR,
        EuiccPackageResultSigned,
        _EuiccPackageResultDataSigned_eimId,
        _EuiccPackageResultDataSigned_counterValue,
        _EuiccPackageResultDataSigned_transactionId,
        _EuiccPackageResultDataSigned_seqNumber,
        __EuiccPackageResultDataSigned_euiccResult__item_,
        _EuiccPackageResultDataSigned_euiccResult,
        EuiccPackageResultDataSigned,
        _EuiccResultData_enableResult,
        _EuiccResultData_disableResult,
        _EuiccResultData_deleteResult,
        _EuiccResultData_listProfileInfoResult,
        _EuiccResultData_getRATResult,
        _EuiccResultData_configureAutoEnableResult,
        _EuiccResultData_addEimResult,
        _EuiccResultData_deleteEimResult,
        _EuiccResultData_updateEimResult,
        _EuiccResultData_listEimResult,
        _EuiccResultData_rollbackResult,
        _EuiccResultData_processingTerminated,
        EuiccResultData,
        _EuiccPackageErrorSigned_euiccPackageErrorDataSigned,
        _EuiccPackageErrorSigned_euiccSignEPE,
        EuiccPackageErrorSigned,
        _EuiccPackageErrorDataSigned_eimId,
        _EuiccPackageErrorDataSigned_counterValue,
        _EuiccPackageErrorDataSigned_transactionId,
        _EuiccPackageErrorDataSigned_euiccPackageErrorCode,
        EuiccPackageErrorDataSigned,
        EuiccPackageErrorCode,
        _EuiccPackageErrorUnsigned_eimId,
        _EuiccPackageErrorUnsigned_associationToken,
        EuiccPackageErrorUnsigned,
        ConfigureAutoEnableResult,
        EnableProfileResult,
        DisableProfileResult,
        DeleteProfileResult,
        __ProfileInfoListResponse_profileInfoListOk__item_,
        _ProfileInfoListResponse_profileInfoListOk,
        _ProfileInfoListResponse_profileInfoListError,
        ProfileInfoListResponse,
        ProfileInfoListError,
        RollbackProfileResult,
        _AddEimResult_associationToken,
        _AddEimResult_addEimResultCode,
        AddEimResult,
        DeleteEimResult,
        UpdateEimResult,
        __ListEimResult_eimIdList__item_,
        _ListEimResult_eimIdList,
        _ListEimResult_listEimError,
        ListEimResult,
        _EimIdInfo_eimId,
        _EimIdInfo_eimIdType,
        EimIdInfo,
        _IpaEuiccDataResponse_ipaEuiccData,
        _IpaEuiccDataResponse_ipaEuiccDataError,
        IpaEuiccDataResponse,
        _IpaEuiccData_defaultSmdpAddress,
        _IpaEuiccData_euiccInfo1,
        _IpaEuiccData_euiccInfo2,
        _IpaEuiccData_rootSmdsAddress,
        _IpaEuiccData_associationToken,
        _IpaEuiccData_eumCertificate,
        _IpaEuiccData_euiccCertificate,
        _IpaEuiccData_ipaCapabilities,
        _IpaEuiccData_deviceInfo,
        _IpaEuiccData_notificationsList,
        IpaEuiccData,
        _ProfileDownloadTriggerResult_eimTransactionId,
        __ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileInstallationResult,
        ___ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileDownloadError_errorResponse,
        __ProfileDownloadTriggerResult_profileDownloadTriggerResultData_profileDownloadError,
        _ProfileDownloadTriggerResult_profileDownloadTriggerResultData,
        ProfileDownloadTriggerResult,
        _IpaCapabilities_ipaFeatures,
        _IpaCapabilities_ipaSupportedProtocols,
        IpaCapabilities,
        _EUICCInfo2_profileVersion,
        _EUICCInfo2_svn,
        _EUICCInfo2_euiccFirmwareVer,
        _EUICCInfo2_extCardResource,
        _EUICCInfo2_uiccCapability,
        _EUICCInfo2_ts102241Version,
        _EUICCInfo2_globalplatformVersion,
        _EUICCInfo2_rspCapability,
        __EUICCInfo2_euiccCiPKIdListForVerification__item_,
        _EUICCInfo2_euiccCiPKIdListForVerification,
        __EUICCInfo2_euiccCiPKIdListForSigning__item_,
        _EUICCInfo2_euiccCiPKIdListForSigning,
        _EUICCInfo2_euiccCategory,
        _EUICCInfo2_forbiddenProfilePolicyRules,
        _EUICCInfo2_ppVersion,
        _EUICCInfo2_sasAcreditationNumber,
        _EUICCInfo2_certificationDataObject,
        _EUICCInfo2_treProperties,
        _EUICCInfo2_treProductReference,
        __EUICCInfo2_additionalEuiccProfilePackageVersions__item_,
        _EUICCInfo2_additionalEuiccProfilePackageVersions,
        _EUICCInfo2_ipaMode,
        __EUICCInfo2_rfu2__item_,
        _EUICCInfo2_rfu2,
        _EUICCInfo2_rfu3,
        _EUICCInfo2_rfu4,
        _EUICCInfo2_iotSpecificInfo,
        EUICCInfo2,
        __IoTSpecificInfo_iotVersion__item_,
        _IoTSpecificInfo_iotVersion,
        IoTSpecificInfo,
        IpaMode,
        __AddInitialEimRequest_eimConfigurationDataList__item_,
        _AddInitialEimRequest_eimConfigurationDataList,
        AddInitialEimRequest,
        ___AddInitialEimResponse_addInitialEimOk__item__associationToken,
        ___AddInitialEimResponse_addInitialEimOk__item__addOk,
        __AddInitialEimResponse_addInitialEimOk__item_,
        _AddInitialEimResponse_addInitialEimOk,
        _AddInitialEimResponse_addInitialEimError,
        AddInitialEimResponse,
        _GetCertsRequest_euiccCiPKId,
        GetCertsRequest,
        __GetCertsResponse_certs_eumCertificate,
        __GetCertsResponse_certs_euiccCertificate,
        _GetCertsResponse_certs,
        _GetCertsResponse_getCertsError,
        GetCertsResponse,
        __RetrieveNotificationsListResponse_notificationList__item_,
        _RetrieveNotificationsListResponse_notificationList,
        _RetrieveNotificationsListResponse_notificationsListResultError,
        __RetrieveNotificationsListResponse_euiccPackageResultList__item_,
        _RetrieveNotificationsListResponse_euiccPackageResultList,
        ___RetrieveNotificationsListResponse_notificationAndEprList_notificationList__item_,
        __RetrieveNotificationsListResponse_notificationAndEprList_notificationList,
        ___RetrieveNotificationsListResponse_notificationAndEprList_euiccPackageResultList__item_,
        __RetrieveNotificationsListResponse_notificationAndEprList_euiccPackageResultList,
        _RetrieveNotificationsListResponse_notificationAndEprList,
        RetrieveNotificationsListResponse,
        EnableUsingDDRequest,
        _EnableUsingDDResponse_enableUsingDDResult,
        EnableUsingDDResponse,
        _ProfileRollbackRequest_refreshFlag,
        ProfileRollbackRequest,
        _ProfileRollbackResponse_cmdResult,
        _ProfileRollbackResponse_eUICCPackageResult,
        ProfileRollbackResponse,
        _ConfigureAutoProfileEnablingRequest_autoEnableFlag,
        _ConfigureAutoProfileEnablingRequest_smdpOid,
        _ConfigureAutoProfileEnablingRequest_smdpAddress,
        ConfigureAutoProfileEnablingRequest,
        _ConfigureAutoProfileEnablingResponse_configAutoEnableResult,
        ConfigureAutoProfileEnablingResponse,
        GetEimConfigurationDataRequest,
        __GetEimConfigurationDataResponse_eimConfigurationDataList__item_,
        _GetEimConfigurationDataResponse_eimConfigurationDataList,
        GetEimConfigurationDataResponse,
        _PrepareDownloadResponse_downloadResponseOk,
        _PrepareDownloadResponse_downloadResponseError,
        _PrepareDownloadResponse_compactDownloadResponseOk,
        PrepareDownloadResponse,
        _CompactPrepareDownloadResponseOk_compactEuiccSigned2,
        _CompactPrepareDownloadResponseOk_euiccSignature2,
        CompactPrepareDownloadResponseOk,
        _CompactEuiccSigned2_euiccOtpk,
        _CompactEuiccSigned2_hashCc,
        CompactEuiccSigned2,
        _AuthenticateServerResponse_authenticateResponseOk,
        _AuthenticateServerResponse_authenticateResponseError,
        _AuthenticateServerResponse_compactAuthenticateResponseOk,
        AuthenticateServerResponse,
        __CompactAuthenticateResponseOk_signedData_euiccSigned1,
        __CompactAuthenticateResponseOk_signedData_compactEuiccSigned1,
        _CompactAuthenticateResponseOk_signedData,
        _CompactAuthenticateResponseOk_euiccSignature1,
        _CompactAuthenticateResponseOk_euiccCertificate,
        _CompactAuthenticateResponseOk_eumCertificate,
        CompactAuthenticateResponseOk,
        _CompactEuiccSigned1_extCardResource,
        _CompactEuiccSigned1_ctxParams1,
        CompactEuiccSigned1,
        _PendingNotification_profileInstallationResult,
        _PendingNotification_otherSignedNotification,
        _PendingNotification_compactProfileInstallationResult,
        _PendingNotification_compactOtherSignedNotification,
        PendingNotification,
        _ProfileInstallationResult_profileInstallationResultData,
        _ProfileInstallationResult_euiccSignPIR,
        ProfileInstallationResult,
        _CompactProfileInstallationResult_compactProfileInstallationResultData,
        _CompactProfileInstallationResult_euiccSignPIR,
        CompactProfileInstallationResult,
        _CompactProfileInstallationResultData_transactionId,
        _CompactProfileInstallationResultData_seqNumber,
        _CompactProfileInstallationResultData_iccidPresent,
        __CompactProfileInstallationResultData_compactFinalResult_compactSuccessResult,
        __CompactProfileInstallationResultData_compactFinalResult_errorResult,
        _CompactProfileInstallationResultData_compactFinalResult,
        CompactProfileInstallationResultData,
        _CompactSuccessResult_compactAid,
        _CompactSuccessResult_simaResponse,
        CompactSuccessResult,
        _CompactOtherSignedNotification_tbsOtherNotification,
        _CompactOtherSignedNotification_euiccNotificationSignature,
        CompactOtherSignedNotification,
        _CancelSessionResponse_cancelSessionResponseOk,
        _CancelSessionResponse_cancelSessionResponseError,
        _CancelSessionResponse_compactCancelSessionResponseOk,
        CancelSessionResponse,
        _CompactCancelSessionResponseOk_compactEuiccCancelSessionSigned,
        _CompactCancelSessionResponseOk_euiccCancelSessionSignature,
        CompactCancelSessionResponseOk,
        _CompactEuiccCancelSessionSigned_reason,
        CompactEuiccCancelSessionSigned,
        _EsipaMessageFromIpaToEim_initiateAuthenticationRequestEsipa,
        _EsipaMessageFromIpaToEim_authenticateClientRequestEsipa,
        _EsipaMessageFromIpaToEim_getBoundProfilePackageRequestEsipa,
        _EsipaMessageFromIpaToEim_cancelSessionRequestEsipa,
        _EsipaMessageFromIpaToEim_handleNotificationEsipa,
        _EsipaMessageFromIpaToEim_transferEimPackageResponse,
        _EsipaMessageFromIpaToEim_getEimPackageRequest,
        _EsipaMessageFromIpaToEim_provideEimPackageResult,
        EsipaMessageFromIpaToEim,
        _EsipaMessageFromEimToIpa_initiateAuthenticationResponseEsipa,
        _EsipaMessageFromEimToIpa_authenticateClientResponseEsipa,
        _EsipaMessageFromEimToIpa_getBoundProfilePackageResponseEsipa,
        _EsipaMessageFromEimToIpa_cancelSessionResponseEsipa,
        _EsipaMessageFromEimToIpa_transferEimPackageRequest,
        _EsipaMessageFromEimToIpa_getEimPackageResponse,
        _EsipaMessageFromEimToIpa_provideEimPackageResultResponse,
        EsipaMessageFromEimToIpa,
        _InitiateAuthenticationRequestEsipa_euiccChallenge,
        _InitiateAuthenticationRequestEsipa_smdpAddress,
        _InitiateAuthenticationRequestEsipa_euiccInfo1,
        InitiateAuthenticationRequestEsipa,
        _InitiateAuthenticationResponseEsipa_initiateAuthenticationOkEsipa,
        _InitiateAuthenticationResponseEsipa_initiateAuthenticationErrorEsipa,
        InitiateAuthenticationResponseEsipa,
        _InitiateAuthenticationOkEsipa_transactionId,
        _InitiateAuthenticationOkEsipa_serverSigned1,
        _InitiateAuthenticationOkEsipa_serverSignature1,
        _InitiateAuthenticationOkEsipa_euiccCiPKIdToBeUsed,
        _InitiateAuthenticationOkEsipa_serverCertificate,
        _InitiateAuthenticationOkEsipa_matchingId,
        _InitiateAuthenticationOkEsipa_ctxParams1,
        InitiateAuthenticationOkEsipa,
        _AuthenticateClientRequestEsipa_transactionId,
        _AuthenticateClientRequestEsipa_authenticateServerResponse,
        AuthenticateClientRequestEsipa,
        _AuthenticateClientResponseEsipa_authenticateClientOkDPEsipa,
        _AuthenticateClientResponseEsipa_authenticateClientOkDSEsipa,
        _AuthenticateClientResponseEsipa_authenticateClientErrorEsipa,
        AuthenticateClientResponseEsipa,
        _AuthenticateClientOkDPEsipa_transactionId,
        _AuthenticateClientOkDPEsipa_profileMetaData,
        _AuthenticateClientOkDPEsipa_smdpSigned2,
        _AuthenticateClientOkDPEsipa_smdpSignature2,
        _AuthenticateClientOkDPEsipa_smdpCertificate,
        _AuthenticateClientOkDPEsipa_hashCc,
        AuthenticateClientOkDPEsipa,
        _AuthenticateClientOkDSEsipa_transactionId,
        _AuthenticateClientOkDSEsipa_profileDownloadTrigger,
        AuthenticateClientOkDSEsipa,
        _GetBoundProfilePackageRequestEsipa_transactionId,
        _GetBoundProfilePackageRequestEsipa_prepareDownloadResponse,
        GetBoundProfilePackageRequestEsipa,
        _GetBoundProfilePackageResponseEsipa_getBoundProfilePackageOkEsipa,
        _GetBoundProfilePackageResponseEsipa_getBoundProfilePackageErrorEsipa,
        GetBoundProfilePackageResponseEsipa,
        _GetBoundProfilePackageOkEsipa_transactionId,
        _GetBoundProfilePackageOkEsipa_boundProfilePackage,
        GetBoundProfilePackageOkEsipa,
        _HandleNotificationEsipa_pendingNotification,
        _HandleNotificationEsipa_provideEimPackageResult,
        HandleNotificationEsipa,
        _CancelSessionRequestEsipa_transactionId,
        _CancelSessionRequestEsipa_cancelSessionResponse,
        CancelSessionRequestEsipa,
        _CancelSessionResponseEsipa_cancelSessionOk,
        _CancelSessionResponseEsipa_cancelSessionError,
        CancelSessionResponseEsipa,
        CancelSessionOk,
        _GetEimPackageRequest_eidValue,
        _GetEimPackageRequest_notifyStateChange,
        _GetEimPackageRequest_rPLMN,
        GetEimPackageRequest,
        _GetEimPackageResponse_euiccPackageRequest,
        _GetEimPackageResponse_ipaEuiccDataRequest,
        _GetEimPackageResponse_profileDownloadTriggerRequest,
        _GetEimPackageResponse_eimPackageError,
        GetEimPackageResponse,
        _ProvideEimPackageResult_euiccPackageResult,
        __ProvideEimPackageResult_ePRAndNotifications_euiccPackageResult,
        __ProvideEimPackageResult_ePRAndNotifications_notificationList,
        _ProvideEimPackageResult_ePRAndNotifications,
        _ProvideEimPackageResult_ipaEuiccDataResponse,
        _ProvideEimPackageResult_profileDownloadTriggerResult,
        _ProvideEimPackageResult_eimPackageError,
        ProvideEimPackageResult,
        _ProvideEimPackageResultResponse_eimAcknowledgements,
        ProvideEimPackageResultResponse,
        _TransferEimPackageRequest_euiccPackageRequest,
        _TransferEimPackageRequest_ipaEuiccDataRequest,
        _TransferEimPackageRequest_eimAcknowledgements,
        _TransferEimPackageRequest_profileDownloadTriggerRequest,
        TransferEimPackageRequest,
        _TransferEimPackageResponse_euiccPackageResult,
        __TransferEimPackageResponse_ePRAndNotifications_euiccPackageResult,
        __TransferEimPackageResponse_ePRAndNotifications_notificationList,
        _TransferEimPackageResponse_ePRAndNotifications,
        _TransferEimPackageResponse_ipaEuiccDataResponse,
        _TransferEimPackageResponse_eimPackageReceived,
        _TransferEimPackageResponse_eimPackageError,
        TransferEimPackageResponse,
    ]

init_modules(PKIX1Explicit88, PKIX1Implicit88, RSPDefinitions, PEDefinitions, SGP32Definitions)
